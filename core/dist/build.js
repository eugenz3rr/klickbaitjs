var Core=function(n){var e={};function r(t){if(e[t])return e[t].exports;var i=e[t]={i:t,l:!1,exports:{}};return n[t].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=n,r.c=e,r.d=function(n,e,t){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},r.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(r.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)r.d(t,i,function(e){return n[e]}.bind(null,i));return t},r.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="/dist/",r(r.s=12)}([function(n,e,r){"use strict";r.d(e,"a",(function(){return i}));var t=r(2);class i extends t.a{constructor(n){super(n)}log(...n){console.debug(n.join("\n"))}emit(n,e){dispatchEvent(new CustomEvent(n,{detail:e}))}alterEvent(n,e){dispatchEvent(new CustomEvent(n+".alter",{detail:e}))}on(n,e){window.addEventListener(n,e)}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Components}));var _Console__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_Form__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(3);class Components extends _Console__WEBPACK_IMPORTED_MODULE_0__.a{constructor(n,e){super(n.fileSystem),this.forms=[],this.module=n,this.load(this.fallback(e,"forms",[])).then(()=>{this.log("Regions loaded.")}).catch(n=>{this.log("Fatal error loading the forms.")})}async load(forms){for(let i=0;i<forms.length;i++){const location=forms[i];this.log(`Reading > ${this.module.path}${location}`);const contents=await this.fileSystem.read(`${this.module.path}${location}`);void 0!==contents?this.forms.push(new _Form__WEBPACK_IMPORTED_MODULE_1__.a(this.module,this.module.id,eval(contents))):this.log(`${this.module.path}${location} => not found.`)}}}},function(n,e,r){"use strict";r.d(e,"a",(function(){return t}));class t{constructor(n){this.fileSystem=n}fallback(n,e,r){return e in n?n[e]:r}}},function(n,e,r){"use strict";r.d(e,"a",(function(){return i}));var t=r(0);class i extends t.a{constructor(n,e,r){super(n.fileSystem),this.id="",this.location="",this.changed=0,this.form=r(n,e),this.module=n,this.id=this.form.info.id,this.location=this.form.info.location}async loadValues(){let n={};try{n=await this.fileSystem.readJSON(`${this.module.path}values/form.${this.id}.json`)}catch(e){await this.fileSystem.write(`${this.module.path}values/form.${this.id}.json`,JSON.stringify({})),n={}}return void 0===n?{}:n}async build(){let n=await this.loadValues();return this.form.build(n)}async validate(n){this.form.validate(n)}async submit(n){n=this.form.submit(n),await this.fileSystem.write(`${this.module.path}values/form.${this.id}.json`,JSON.stringify(n))}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Region}));var _Console__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);class Region extends _Console__WEBPACK_IMPORTED_MODULE_0__.a{constructor(n,e){super(n.fileSystem),this.type="",this.title="",this.description="",this.path="",this.regionRaw={},this.renderArray=[],this.regionManager=n.regionManager,this.module=n.module,this.fileSystem=n.module.fileSystem,this.regionManager=n.regionManager,this.type=this.fallback(e,"type","content"),this.title=this.fallback(e,"title","No title."),this.description=this.fallback(e,"description","No description."),this.path=this.fallback(e,"path","404"),this.regionManager.regions.push(this)}async load(force=!1){if(0!==Object.keys(this.regionRaw).length&&!force)return;let region=await this.fileSystem.read(`${this.module.path}${this.path}`);console.debug(`${this.module.path}${this.path}`),void 0!==region&&(this.regionRaw=eval(region))}async build(){if("404"===this.path)return{};await this.load(),this.renderArray=this.regionRaw.build(this.module)}}},function(n,e){function r(n){return"/"===(n=n.substr(0,n.lastIndexOf("/")+1))[0]&&(n=n.substr(1)),n}function t(n){return n.substr(n.lastIndexOf("/")+1)}function i(n){"/"===(n=n||"")[0]&&(n=n.substr(1));for(var e=n.split("/"),r=e[0],t=1;t<e.length;t++)r=e[t],".."===e[t]?(e.splice(t-1,2),t-=2):"."===e[t]&&(e.splice(t,1),t--);return"./"===(n=e.join("/"))?n="":r&&r.indexOf(".")<0&&"/"!=n[n.length-1]&&(n+="/"),n}var o=[],s=0;n.exports=function(n){var e=n.Promise||window.Promise,a="cdvfile://localhost/"+(n.persistent?"persistent/":"temporary/"),l="";if(!e)throw new Error("No Promise library given in options.Promise");(n=n||{}).crosswalk=!!n.crosswalk,n.persistent=void 0===n.persistent||n.persistent,n.storageSize=n.storageSize||20971520,n.concurrency=n.concurrency||3,n.retry=n.retry||[],n.debug=!!n.debug;var c,d="undefined"!=typeof cordova&&!n.crosswalk,u=n.crosswalk;function p(n){return new e((function(e){return e(n)}))}d?c=new e((function(n,e){document.addEventListener("deviceready",n,!1),setTimeout((function(){e(new Error("deviceready has not fired after 5 seconds."))}),5100)})):u?c=p(!0):(c=p(!0),"undefined"!=typeof webkitRequestFileSystem?window.requestFileSystem=webkitRequestFileSystem:window.requestFileSystem=function(n,e,r,t){t(new Error("requestFileSystem not supported!"))}),d||(window.FileTransfer=function(){},FileTransfer.prototype.download=function(n,e,r,t){var i=new XMLHttpRequest;return i.open("GET",n),i.responseType="blob",i.onreadystatechange=function(n,o,s){4==i.readyState&&(200!==i.status||this._aborted?t(i.status):S(e,i.response).then(r,t))},i.send(),i},FileTransfer.prototype.abort=function(){this._aborted=!0},window.ProgressEvent=function(){},window.FileEntry=function(){});var m,h,f,v=new e((function(e,r){c.then((function(){var t=n.persistent?1:0;if(n.fileSystem&&d&&(t=n.fileSystem),u){var i=n.fileSystem||"cachedir";xwalk.experimental.native_file_system.requestNativeFileSystem(i,e,r)}else!d&&1===t&&navigator.webkitPersistentStorage?navigator.webkitPersistentStorage.requestQuota(n.storageSize,(function(n){window.requestFileSystem(t,n,e,r)}),r):isNaN(t)?window.resolveLocalFileSystemURL(t,(function(n){e(n.filesystem)}),r):window.requestFileSystem(t,n.storageSize,e,r);setTimeout((function(){r(new Error("Could not retrieve FileSystem after 5 seconds."))}),5100)}),r)}));function y(n){return new e((function(e,r){return v.then((function(t){n?(n=n.split("/").filter((function(n){return n&&n.length>0&&"."!==n&&".."!==n})),function n(e,r,t,i){e.getDirectory(r[0],{create:!0},(function(e){r.length>1?n(e,r.slice(1),t,i):t(e)}),i)}(t.root,n,e,r)):e(t.root)}),r)}))}function g(n,r){return new e((function(e,t){return"object"==typeof n?e(n):(n=i(n),r=r||{},v.then((function(i){i.root.getFile(n,r,e,t)}),t))}))}function b(n,r){return n=i(n),r=r||{},new e((function(e,t){return v.then((function(i){n&&"/"!==n?i.root.getDirectory(n,r,e,t):e(i.root)}),t)}))}function _(n){return new e((function(e,r){g(n).then((function(n){e(n)}),(function(n){1===n.code?e(!1):r(n)}))}))}if(v.then((function(n){l=n.root.toURL(),a=d?n.root.toInternalURL():l,window.__fs=n}),(function(n){console.error("Could not get Cordova FileSystem:",n)})),d)h=function(n){return(n=i(n)).indexOf("://")<0?a+n:n},f=function(n){return(n=i(n)).indexOf("://")<0?l+n:n},m=function(n){return g(n).then((function(n){return n.toInternalURL()}))};else if(u){var w=n.fileSystem||"cachedir";m=function(n){return g(n).then((function(n){return n.toURL()}))},f=h=function(n){return(n=i(n)).indexOf(w)<0?"/"+w+"/"+n:n}}else m=function(n){return g(n).then((function(n){return n.toURL()}))},f=h=function(e){return e=i(e),"filesystem:"+location.origin+(n.persistent?"/persistent/":"/temporary/")+e};function k(n,r){return r=r||"readAsText",g(n).then((function(n){return new e((function(e,t){n.file((function(n){var t=new FileReader;t.onloadend=function(){e(this.result)},t[r](n)}),t)}))}))}function S(n,t,i){return y(r(n)).then((function(){return g(n,{create:!0})})).then((function(n){return new e((function(e,r){n.createWriter((function(n){n.onwriteend=e,n.onerror=r,"string"==typeof t?t=x([t],i||"text/plain"):t instanceof Blob!=!0&&(t=x([JSON.stringify(t,null,4)],i||"application/json")),n.write(t)}),r)}))}))}function x(n,e){var r,t;try{return new Blob(n,{type:e})}catch(i){if(r=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)return(t=new r).append(n),t.getBlob(e);throw new Error("Unable to create blob")}}function T(e){return s--,function(){for(;o.length>0&&s<n.concurrency;){s++;var e=o.pop(),r=e.fileTransfer,t=e.isDownload,i=e.serverUrl,a=e.localPath,l=e.trustAllHosts,c=e.transferOptions,d=e.win,u=e.fail;r._aborted?s--:t?(r.download.call(r,i,a,d,u,l,c),r.onprogress&&r.onprogress(new ProgressEvent)):r.upload.call(r,a,i,d,u,c,l)}}(),e}function M(r,i,a,l,c){"function"==typeof l&&(c=l,l={}),d&&a.indexOf("://")<0&&(a=f(a)),(l=l||{}).retry&&l.retry.length||(l.retry=n.retry),l.retry=l.retry.concat(),l.file||r||(l.fileName=t(a));var u=new FileTransfer;"function"==typeof(c=c||l.onprogress)&&(u.onprogress=c);var p=new e((function(e,t){var c=function(s){if(0===l.retry.length)n.debug&&console.log("FileTransfer Error: "+i,s),t(s);else{var d={fileTransfer:u,isDownload:r,serverUrl:i,localPath:a,trustAllHosts:l.trustAllHosts||!1,transferOptions:l,win:e,fail:c};o.unshift(d);var p=l.retry.shift();p>0?setTimeout(T,p):T()}};l.retry.unshift(0),s++,c()}));return p.then(T,T),p.progress=function(n){return u.onprogress=n,p},p.abort=function(){return u._aborted=!0,u.abort(),p},p}return{fs:v,normalize:i,file:g,filename:t,dir:b,dirname:r,create:function(n){return y(r(n)).then((function(){return g(n,{create:!0})}))},read:k,readJSON:function(n){return k(n).then(JSON.parse)},write:S,move:function(n,i){return y(r(i)).then((function(r){return g(n).then((function(n){return new e((function(e,o){n.moveTo(r,t(i),e,o)}))}))}))},moveDir:function(n,i){return n=n.replace(/\/$/,""),y(r(i=i.replace(/\/$/,""))).then((function(r){return b(n).then((function(n){return new e((function(e,o){n.moveTo(r,t(i),e,o)}))}))}))},copy:function(n,i){return y(r(i)).then((function(r){return g(n).then((function(n){return new e((function(e,o){n.copyTo(r,t(i),e,o)}))}))}))},remove:function(n,r){var t=r?g:_;return new e((function(e,r){t(n).then((function(n){!1!==n?n.remove(e,r):e(1)}),r)})).then((function(n){return 1!==n}))},removeDir:function(n){return b(n).then((function(n){return new e((function(e,r){n.removeRecursively(e,r)}))}))},list:function n(r,t){var i=(t=t||"").indexOf("r")>-1,o=t.indexOf("e")>-1,s=t.indexOf("f")>-1,a=t.indexOf("d")>-1;return s&&a&&(s=!1,a=!1),b(r).then((function(n){return new e((function(e,r){var t=[],i=n.createReader(),o=function(){i.readEntries((function(n){if(0===n.length)e(t);else{var r=[0,0].concat(n);t.splice.apply(t,r),o()}}))};o()}))})).then((function(r){var t=[p(r)];return i&&r.filter((function(n){return n.isDirectory})).forEach((function(e){t.push(n(e.fullPath,"re"))})),e.all(t)})).then((function(n){var e=[];return e=e.concat.apply(e,n),s&&(e=e.filter((function(n){return n.isFile}))),a&&(e=e.filter((function(n){return n.isDirectory}))),o||(e=e.map((function(n){return n.fullPath}))),e}))},ensure:y,exists:_,existsDir:function(n){return new e((function(e,r){b(n).then((function(n){e(n)}),(function(n){1===n.code?e(!1):r(n)}))}))},download:function(n,e,r,t){return M(!0,n,e,r,t)},upload:function(n,e,r,t){return M(!1,e,n,r,t)},toURL:function(n){return g(n).then((function(n){return n.toURL()}))},toURLSync:f,isCordova:d,toInternalURLSync:h,toInternalURL:m,toDataURL:function(n){return k(n,"readAsDataURL")},deviceready:c,options:n,Promise:e}}},function(n,e){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(n){"object"==typeof window&&(r=window)}n.exports=r},function(n,e,r){(function(e){/**@license MIT-promiscuous-©Ruben Verborgh*/
!function(r,t){function i(n,e){return(typeof e)[0]==n}function o(n,e){return(e=function r(t,a,l,c,d,u){if(c=r.q,t!=i)return o((function(n,e){c.push({p:this,r:n,j:e,1:t,0:a})}));if(l&&i("f",l)|i("o",l))try{d=l.then}catch(n){a=0,l=n}if(i("f",d))try{d.call(l,p(1),a=p(0))}catch(n){a(n)}else for(e=function(e,r){return i("f",e=a?e:r)?o((function(n,r){s(this,n,r,l,e)})):n},u=0;u<c.length;)d=c[u++],i("f",t=d[a])?s(d.p,d.r,d.j,l,t):(a?d.r:d.j)(l);function p(n){return function(e){d&&(d=0,r(i,n,e))}}}).q=[],n.call(n={then:function(n,r){return e(n,r)},catch:function(n){return e(0,n)}},(function(n){e(i,1,n)}),(function(n){e(i,0,n)})),n}function s(n,r,t,o,s){e((function(){try{o=s(o),s=o&&i("o",o)|i("f",o)&&o.then,i("f",s)?o==n?t(TypeError()):s.call(o,r,t):r(o)}catch(n){t(n)}}))}function a(n){return o((function(e){e(n)}))}n.exports=o,o.resolve=a,o.reject=function(n){return o((function(e,r){r(n)}))},o.all=function(n){return o((function(e,r,t,i){i=[],t=n.length||e(i),n.map((function(n,o){a(n).then((function(n){i[o]=n,--t||e(i)}),r)}))}))},o.race=function(n){return o((function(e,r){n.map((function(n){a(n).then(e,r)}))}))}}()}).call(this,r(9).setImmediate)},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return Component}));var _Console__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);class Component extends _Console__WEBPACK_IMPORTED_MODULE_0__.a{constructor(module,id,component){super(module.fileSystem),this.id="",this.title="",this.description="",this.path="",this.type="",this.raw=()=>{},this.component={},this.load=async()=>{const component=await this.fileSystem.read(this.module.path+this.path);this.raw=eval(component),this.component=this.raw(this.module)},this.module=module,this.id=id,this.title=this.fallback(component,"title","No title set"),this.description=this.fallback(component,"description","No description set"),this.path=this.fallback(component,"path","No path set"),this.type=this.fallback(component,"type","elements"),this.load().then(()=>{switch(console.log(this.title,"Component loaded."),this.type){case"regions":this.module.componentManager.regions.push(this);break;case"containers":this.module.componentManager.containers.push(this);break;case"elements":this.module.componentManager.elements.push(this)}}).catch(n=>{console.error(this.path,"Could not be loaded as it does not exist.")})}getComponent(){return this.component=this.raw(this.module),this.component}}},function(n,e,r){(function(n){var t=void 0!==n&&n||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function o(n,e){this._id=n,this._clearFn=e}e.setTimeout=function(){return new o(i.call(setTimeout,t,arguments),clearTimeout)},e.setInterval=function(){return new o(i.call(setInterval,t,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(n){n&&n.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(t,this._id)},e.enroll=function(n,e){clearTimeout(n._idleTimeoutId),n._idleTimeout=e},e.unenroll=function(n){clearTimeout(n._idleTimeoutId),n._idleTimeout=-1},e._unrefActive=e.active=function(n){clearTimeout(n._idleTimeoutId);var e=n._idleTimeout;e>=0&&(n._idleTimeoutId=setTimeout((function(){n._onTimeout&&n._onTimeout()}),e))},r(10),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==n&&n.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==n&&n.clearImmediate||this&&this.clearImmediate}).call(this,r(6))},function(n,e,r){(function(n,e){!function(n,r){"use strict";if(!n.setImmediate){var t,i,o,s,a,l=1,c={},d=!1,u=n.document,p=Object.getPrototypeOf&&Object.getPrototypeOf(n);p=p&&p.setTimeout?p:n,"[object process]"==={}.toString.call(n.process)?t=function(n){e.nextTick((function(){h(n)}))}:!function(){if(n.postMessage&&!n.importScripts){var e=!0,r=n.onmessage;return n.onmessage=function(){e=!1},n.postMessage("","*"),n.onmessage=r,e}}()?n.MessageChannel?((o=new MessageChannel).port1.onmessage=function(n){h(n.data)},t=function(n){o.port2.postMessage(n)}):u&&"onreadystatechange"in u.createElement("script")?(i=u.documentElement,t=function(n){var e=u.createElement("script");e.onreadystatechange=function(){h(n),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):t=function(n){setTimeout(h,0,n)}:(s="setImmediate$"+Math.random()+"$",a=function(e){e.source===n&&"string"==typeof e.data&&0===e.data.indexOf(s)&&h(+e.data.slice(s.length))},n.addEventListener?n.addEventListener("message",a,!1):n.attachEvent("onmessage",a),t=function(e){n.postMessage(s+e,"*")}),p.setImmediate=function(n){"function"!=typeof n&&(n=new Function(""+n));for(var e=new Array(arguments.length-1),r=0;r<e.length;r++)e[r]=arguments[r+1];var i={callback:n,args:e};return c[l]=i,t(l),l++},p.clearImmediate=m}function m(n){delete c[n]}function h(n){if(d)setTimeout(h,0,n);else{var e=c[n];if(e){d=!0;try{!function(n){var e=n.callback,r=n.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(void 0,r)}}(e)}finally{m(n),d=!1}}}}}("undefined"==typeof self?void 0===n?this:n:self)}).call(this,r(6),r(11))},function(n,e){var r,t,i=n.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function a(n){if(r===setTimeout)return setTimeout(n,0);if((r===o||!r)&&setTimeout)return r=setTimeout,setTimeout(n,0);try{return r(n,0)}catch(e){try{return r.call(null,n,0)}catch(e){return r.call(this,n,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:o}catch(n){r=o}try{t="function"==typeof clearTimeout?clearTimeout:s}catch(n){t=s}}();var l,c=[],d=!1,u=-1;function p(){d&&l&&(d=!1,l.length?c=l.concat(c):u=-1,c.length&&m())}function m(){if(!d){var n=a(p);d=!0;for(var e=c.length;e;){for(l=c,c=[];++u<e;)l&&l[u].run();u=-1,e=c.length}l=null,d=!1,function(n){if(t===clearTimeout)return clearTimeout(n);if((t===s||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(n);try{t(n)}catch(e){try{return t.call(null,n)}catch(e){return t.call(this,n)}}}(n)}}function h(n,e){this.fun=n,this.array=e}function f(){}i.nextTick=function(n){var e=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)e[r-1]=arguments[r];c.push(new h(n,e)),1!==c.length||d||a(m)},h.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=f,i.addListener=f,i.once=f,i.off=f,i.removeListener=f,i.removeAllListeners=f,i.emit=f,i.prependListener=f,i.prependOnceListener=f,i.listeners=function(n){return[]},i.binding=function(n){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(n){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(n,e,r){"use strict";r.r(e);var t=r(5),i=r.n(t),o=r(7),s=r.n(o);var a=r(1),l=r(0);r(3),r(2);class c extends l.a{constructor(n,e){super(n.fileSystem),this.name="",this.description="",this.group="",this.type="",this.version="",this.dependencies=[],this.name=this.fallback(e,"name","undefined"),this.description=this.fallback(e,"description","undefined"),this.group=this.fallback(e,"group","undefined"),this.type=this.fallback(e,"type","undefined"),this.version=this.fallback(e,"version","undefined"),this.dependencies=this.fallback(e,"dependencies",[])}}class d extends l.a{constructor(n){super(n),this.routes=[],this.fileSystem=n,this.defaultPage="",this.alterEvent("manager.page.defaultPage",this.defaultPage),this.alterEvent("manager.page",this)}}class u extends l.a{constructor(n){super(n),this.regions=[],this.fileSystem=n}}var p=r(4);class m extends l.a{constructor(n,e,r){super(n.fileSystem),this.id="",this.path="",this.title="",this.description="",this.icon="",this.module=n,this.routeManager=n.routeManager,this.routeManager.routes.push(this),this.regionManager=new u(this.fileSystem);const t=this.fallback(r,"regions",[]);for(let n=0;n<t.length;n++){const e=t[n];new p.a(this,e)}this.id=e,this.path=this.fallback(r,"path",`/${e}/${Date.now()}`),this.title=this.fallback(r,"title","No title"),this.description=this.fallback(r,"description","No description."),this.icon=this.fallback(r,"icon","")}}class h extends l.a{constructor(n){super(n),this.regions=[],this.containers=[],this.elements=[]}getAll(){return[...this.regions,...this.containers,...this.elements]}getComponentById(n,e=this.getAll()){for(let r=0;r<e.length;r++){const t=e[r];if(t.id===n)return t}}getComponentsByType(n="all",e=this.getAll()){return e.filter(e=>e.type===n||"all"===n)}getVueComponentByType(n="all",e=this.getAll()){let r=e.filter(e=>e.type===n||"all"===n);return r=r.map(n=>n.getComponent()),r}}var f=r(8);class v extends l.a{constructor(n,e,r){super(n.fileSystem),this.routeManager=new d(this.fileSystem),this.componentManager=new h(this.fileSystem),this.components=new a.a(this,{}),this.info=new c(this,{}),this.moduleManager=n,this.moduleManager.modules.push(this),this.id=r,this.path=e,this.initialize().then(()=>{this.ready()}).catch(n=>{console.log(n)})}async initialize(){this.log(`Reading > ${this.path}${this.id}.info.json`);const n=await this.fileSystem.readJSON(`${this.path}${this.id}.info.json`);void 0!==n&&(this.info=new c(this,n)),this.log(`Reading > ${this.path}${this.id}.routing.json`);const e=await this.fileSystem.readJSON(`${this.path}${this.id}.routing.json`);if(void 0!==e){const n=Object.keys(e);for(let r=0;r<n.length;r++){const t=n[r],i=e[t];new m(this,t,i)}}const r=await this.fileSystem.readJSON(`${this.path}${this.id}.components.json`);if(void 0!==r){const n=["elements","containers","regions"];for(let e=0;e<n.length;e++){let t=this.fallback(r,n[e],{});const i=Object.keys(t);console.debug("Loading component ->",t);for(let r=0;r<i.length;r++){const o=i[r];let s=t[o];t[o].type=n[e],new f.a(this,o,s)}}}}ready(){this.moduleManager.moduleReady(this)}}class y extends l.a{constructor(n){super(n)}async install(){await this.fileSystem.write("/modules/core/core.components.json",'{\r\n  "regions": {\r\n    "content": {\r\n      "title": "Content",\r\n      "description": "Is used to display data.",\r\n      "path": "src/regions/content/Content.js"\r\n    },\r\n    "form": {\r\n      "title": "Form",\r\n      "description": "Is used to alter data.",\r\n      "path": "src/regions/form/Form.js"\r\n    }\r\n  },\r\n  "containers": {\r\n    "accordion": {\r\n      "title": "Accordion",\r\n      "description": "An element which contains elements in a specific arrangement.",\r\n      "path": "src/containers/Accordion.js"\r\n    },\r\n    "list": {\r\n      "title": "List",\r\n      "description": "An element which contains elements in a specific arrangement.",\r\n      "path": "src/containers/List.js"\r\n    },\r\n    "tab": {\r\n      "title": "Tab",\r\n      "description": "An element which contains elements in a specific arrangement.",\r\n      "path": "src/containers/Tab.js"\r\n    }\r\n  },\r\n  "elements": {\r\n    "tile": {\r\n      "title": "Tile",\r\n      "description": "Displays the tile.",\r\n      "path": "src/components/content/Tile.js"\r\n    },\r\n    "textfield": {\r\n      "title": "Textfield",\r\n      "description": "An element which changes information.",\r\n      "path": "src/elements/Textfield.js"\r\n    },\r\n    "button": {\r\n      "title": "Textfield",\r\n      "description": "An element which changes information.",\r\n      "path": "src/elements/Textfield.js"\r\n    },\r\n    "textarea": {\r\n      "title": "Textarea",\r\n      "description": "An element which changes information.",\r\n      "path": "src/elements/Textarea.js"\r\n    },\r\n    "colorpicker": {\r\n      "title": "Color-Picker",\r\n      "description": "An element which changes information.",\r\n      "path": "src/elements/Colorpicker.js"\r\n    },\r\n    "switch": {\r\n      "title": "Switch",\r\n      "description": "An element which changes information.",\r\n      "path": "src/elements/Switch.js"\r\n    },\r\n    "headline": {\r\n      "title": "Headline",\r\n      "description": "An element which should resemble the headline.",\r\n      "path": "src/elements/Headline.js"\r\n    },\r\n    "paragraph": {\r\n      "title": "Paragraph",\r\n      "description": "An element which should resemble a paragraph.",\r\n      "path": "src/elements/Paragraph.js"\r\n    },\r\n    "dropdown": {\r\n      "title": "Dropdown",\r\n      "description": "An element which should resemble a paragraph.",\r\n      "path": "src/elements/Dropdown.js"\r\n    }\r\n  }\r\n}'),await this.fileSystem.write("/modules/core/core.info.json",'{\r\n  "name": "Klickbait - Mymodule",\r\n  "description": "This module is supposed to be an example module.",\r\n  "group": "klickbait",\r\n  "type": "module",\r\n  "version": "1.0.0",\r\n  "dependencies": []\r\n}'),await this.fileSystem.write("/modules/core/core.routing.json",'{\r\n  "core.tile.add": {\r\n    "path": "/tile/:board/add",\r\n    "title": "Add Tile",\r\n    "description": "Adds a tile to the current board.",\r\n    "regions": [\r\n      {\r\n        "type": "form",\r\n        "title": "Tile form",\r\n        "description": "Edit / add current tile.",\r\n        "path": "src/regions/form/AddTile.js"\r\n      }\r\n    ]\r\n  },\r\n  "core.settings": {\r\n    "path": "/core/settings",\r\n    "title": "Settings",\r\n    "description": "Default settings",\r\n    "regions": [\r\n      {\r\n        "type": "form",\r\n        "title": "Tile form",\r\n        "description": "Edit / add current tile.",\r\n        "path": "src/regions/form/Settings.js"\r\n      }\r\n    ]\r\n  },\r\n  "core.board": {\r\n    "path": "/core/board",\r\n    "title": "Board",\r\n    "description": "Board where the tiles are located at.",\r\n    "regions": [\r\n      {\r\n        "type": "content",\r\n        "title": "Tile display",\r\n        "description": "This part displays the currently edited / added tile.",\r\n        "path": "src/regions/content/Board.js",\r\n        "icon": "home"\r\n      }\r\n    ]\r\n  },\r\n  "core.modules": {\r\n    "path": "/core/modules",\r\n    "title": "Modules",\r\n    "description": "This displays all modules.",\r\n    "regions": [\r\n      {\r\n        "type": "content",\r\n        "title": "",\r\n        "description": "",\r\n        "path": "src/regions/content/Modules.js"\r\n      }\r\n    ]\r\n  }\r\n}'),await this.fileSystem.write("/modules/core/src/components/content/Tile.js","Module => {\r\n    const component = {\r\n        name: 'Tile',\r\n        template:\r\n            '<v-card>' +\r\n            '<v-card-text>{{ test }}</v-card-text>' +\r\n            '</v-card>',\r\n        data() {\r\n            return {};\r\n        },\r\n        mounted: async function () {\r\n\r\n        }\r\n    };\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/containers/Accordion.js","Module => {\r\n    const data = window.Manager.componentManager.getComponentsByType('elements');\r\n    const components = {};\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        const component = data[i];\r\n        components[`as-${component.id}`] = component.getComponent();\r\n    }\r\n\r\n    const component = {\r\n        name: 'S-Accordion',\r\n        components,\r\n        template:\r\n            '  <v-expansion-panels :accordion=\"accordion\"\\n' +\r\n            '                      :popout=\"popout\"\\n' +\r\n            '                      :inset=\"inset\"\\n' +\r\n            '                      :multiple=\"multiple\"\\n' +\r\n            '                      :focusable=\"focusable\"\\n' +\r\n            '                      :disabled=\"disabled\"\\n' +\r\n            '                      :readonly=\"readonly\"\\n' +\r\n            '                      :flat=\"flat\"\\n' +\r\n            '                      :hover=\"hover\"\\n' +\r\n            '                      :tile=\"tile\">\\n' +\r\n            '    <v-expansion-panel v-for=\"(panel, key) in panels\" :key=\"`${key}-accordion-${panels.length}`\">\\n' +\r\n            '      <v-expansion-panel-header>{{ panel[\\'#title\\'] }}</v-expansion-panel-header>\\n' +\r\n            '\\n' +\r\n            '      <v-expansion-panel-content>\\n' +\r\n            '        <component v-for=\"(renderElement, element) in panel[\\'#content\\']\"\\n' +\r\n            '                   :is=\"`as-${renderElement[\\'#type\\']}`\"\\n' +\r\n            '                   :renderElement=\"renderElement\"\\n' +\r\n            '                   :element=\"element\"\\n' +\r\n            '                   :key=\"`${element}.${changed}`\"\\n' +\r\n            '                   :region=\"region\"/>\\n' +\r\n            '      </v-expansion-panel-content>\\n' +\r\n            '    </v-expansion-panel>\\n' +\r\n            '  </v-expansion-panels>',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            region: Object\r\n        },\r\n        data() {\r\n            return {\r\n                panels: {},\r\n                accordion: true,\r\n                popout: false,\r\n                inset: false,\r\n                multiple: false,\r\n                disabled: false,\r\n                readonly: false,\r\n                focusable: false,\r\n                flat: true,\r\n                hover: false,\r\n                tile: false,\r\n                changed: 0,\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            this.panels = this.element['#panels'];\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`.v-expansion-panels {\r\n          z-index: 0 !important;\r\n          margin-top: 20px;\r\n          margin-bottom: 20px;\r\n    }\r\n    .v-expansion-panels :before {\r\n      border: solid 1px var(--accent);\r\n      box-shadow: none !important;\r\n    }\r\n    .v-expansion-panels :first-child:before {\r\n      border-bottom: none;\r\n    }`);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/containers/List.js","Module => {\r\n    const data = window.Manager.componentManager.getComponentsByType('elements');\r\n    const components = {};\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        const component = data[i];\r\n        components[`as-${component.id}`] = component.getComponent();\r\n    }\r\n\r\n    const component = {\r\n        name: 'S-List',\r\n        components,\r\n        template:\r\n            '  <v-list\\n' +\r\n            '      :disabled=\"disabled\"\\n' +\r\n            '      :dense=\"dense\"\\n' +\r\n            '      :two-line=\"twoLine\"\\n' +\r\n            '      :three-line=\"threeLine\"\\n' +\r\n            '      :shaped=\"shaped\"\\n' +\r\n            '      :flat=\"flat\"\\n' +\r\n            '      :subheader=\"subheader\"\\n' +\r\n            '      :sub-group=\"subGroup\"\\n' +\r\n            '      :nav=\"nav\"\\n' +\r\n            '      :avatar=\"avatar\"\\n' +\r\n            '      :rounded=\"rounded\">\\n' +\r\n            '\\n' +\r\n            '    <v-list-item v-for=\"(panel, key) in panels\" :key=\"`${key}-list-${panels.length}`\">\\n' +\r\n            '      <v-list-item-content>\\n' +\r\n            '        <component v-for=\"(renderElement, element) in panel[\\'#content\\']\"\\n' +\r\n            '                  :is=\"`as-${renderElement[\\'#type\\']}`\"\\n' +\r\n            '                   :renderElement=\"renderElement\"\\n' +\r\n            '                   :element=\"element\"\\n' +\r\n            '                   :key=\"`${element}.${changed}`\"\\n' +\r\n            '                   :region=\"region\"/>\\n' +\r\n            '      </v-list-item-content>\\n' +\r\n            '    </v-list-item>\\n' +\r\n            '  </v-list>',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            region: Object\r\n        },\r\n        data() {\r\n            return {\r\n                panels: {},\r\n                disabled: false,\r\n                dense: false,\r\n                twoLine: false,\r\n                threeLine: false,\r\n                shaped: false,\r\n                flat: false,\r\n                subheader: false,\r\n                inactive: false,\r\n                subGroup: false,\r\n                nav: false,\r\n                avatar: false,\r\n                rounded: false,\r\n                changed: 0,\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            this.panels = this.element['#panels'];\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    .v-expansion-panels {\r\n      z-index: 0 !important;\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n    .v-expansion-panels :before {\r\n      border: solid 1px var(--accent);\r\n      box-shadow: none !important;\r\n    }\r\n    .v-expansion-panels :first-child:before {\r\n      border-bottom: none;\r\n    }\r\n    `);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/containers/Tab.js","Module => {\r\n    const data = window.Manager.componentManager.getComponentsByType('elements');\r\n    const components = {};\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n        const component = data[i];\r\n        components[`as-${component.id}`] = component.getComponent();\r\n    }\r\n\r\n    const component = {\r\n        name: 'S-Tab',\r\n        components,\r\n        template:\r\n            '  <v-card>\\n' +\r\n            '    <v-tabs v-model=\"panel\"\\n' +\r\n            '            :centered=\"centered\"\\n' +\r\n            '            :grow=\"grow\"\\n' +\r\n            '            :vertical=\"vertical\"\\n' +\r\n            '            :right=\"right\">\\n' +\r\n            '      <v-tab v-for=\"(panel, key) in panels\" :key=\"`${key}-tab-header-${panels.length}`\">\\n' +\r\n            '        {{ panel[\\'#title\\'] }}\\n' +\r\n            '      </v-tab>\\n' +\r\n            '    </v-tabs>\\n' +\r\n            '\\n' +\r\n            '    <v-tabs-items v-model=\"panel\">\\n' +\r\n            '      <v-tab-item v-for=\"(panel, key) in panels\" :key=\"`${key}-tab-content-${panels.length}`\">\\n' +\r\n            '        <v-card flat>\\n' +\r\n            '          <v-card-text>\\n' +\r\n            '            <component v-for=\"(renderElement, element) in panel[\\'#content\\']\"\\n' +\r\n            '                       :is=\"`as-${renderElement[\\'#type\\']}`\"\\n' +\r\n            '                       :renderElement=\"renderElement\"\\n' +\r\n            '                       :element=\"element\"\\n' +\r\n            '                       :key=\"`${element}.${changed}`\"\\n' +\r\n            '                       :region=\"region\"/>\\n' +\r\n            '          </v-card-text>\\n' +\r\n            '        </v-card>\\n' +\r\n            '      </v-tab-item>\\n' +\r\n            '    </v-tabs-items>\\n' +\r\n            '  </v-card>',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            region: Object\r\n        },\r\n        data() {\r\n            return {\r\n                panels: {},\r\n                panel: 1,\r\n                centered: false,\r\n                grow: true,\r\n                vertical: false,\r\n                right: false,\r\n                changed: 0,\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            this.panels = this.element['#panels'];\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    .v-tabs {\r\n      margin-top: 20px;\r\n    }\r\n    .v-tabs .v-tabs-slider {\r\n      background-color: var(--accent) !important;\r\n    }\r\n    .v-tabs .v-tabs-bar {\r\n      background-color: var(--secondary) !important;\r\n    }\r\n    .v-tabs .v-tabs-bar .v-tab {\r\n      color: var(--font) !important;\r\n    }\r\n    \r\n    .v-window {\r\n      margin-bottom: 20px;\r\n    }\r\n    .v-window .v-card {\r\n      background-color: var(--primary) !important;\r\n    }\r\n    `);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/elements/Button.js","Module => {\r\n    const component = {\r\n        name: 'S-Button',\r\n        template:\r\n            '<v-button>' +\r\n            '{{ title }}' +\r\n            '</v-button>',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n        },\r\n        data() {\r\n            return {\r\n                title: \"\",\r\n                absolute: false,\r\n                \r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    div.v-text-field {\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot {\r\n      background-color: var(--background) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot input,\r\n    div.v-text-field > .v-input__control > .v-input__slot label.v-label,\r\n    div.v-text-field > .v-input__control div.v-messages {\r\n      color: var(--font) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot button.v-icon,\r\n    div.v-text-field > .v-input__control > .v-input__slot:before,\r\n    div.v-text-field > .v-input__control > .v-input__slot:after,\r\n    div.v-text-field > .v-input__control > .v-input__slot > fieldset {\r\n      color: var(--accent) !important;\r\n      border-color: var(--accent) !important;\r\n    }`);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/elements/Colorpicker.js","Module => {\r\n    const component = {\r\n        name: 'Color-Picker',\r\n        template:\r\n            '<v-color-picker\\n' +\r\n            '      v-model=\"value\"\\n' +\r\n            '      :canvas-height=\"canvasHeight\"\\n' +\r\n            '      :hide-canvas=\"hideCanvas\"\\n' +\r\n            '      :hide-inputs=\"hideInputs\"\\n' +\r\n            '      :hide-mode-switch=\"hideModeSwitch\"\\n' +\r\n            '      :mode=\"mode\"\\n' +\r\n            '      :show-swatches=\"showSwatches\"\\n' +\r\n            '      :swatches=\"swatches\"\\n' +\r\n            '      :swatches-max-height=\"swatchesMaxHeight\"\\n' +\r\n            '      :width=\"canvasHeight\"\\n' +\r\n            '  />',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            /**\r\n             * @description Form id to identify events.\r\n             */\r\n            region: Object,\r\n        },\r\n        data() {\r\n            return {\r\n                value: \"\",\r\n                canvasHeight: \"\",\r\n                hideCanvas: false,\r\n                hideModeSwitch: false,\r\n                hideInputs: false,\r\n                mode: 'rgba',\r\n                showSwatches: false,\r\n                swatches: undefined,\r\n                swatchesMaxHeight: 150,\r\n                width: 300\r\n            };\r\n        },\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n\r\n            const info = this.region.regionRaw.info;\r\n\r\n            Module.emit(`register.receive.${info.id}`);\r\n\r\n            Module.on(`submit.event.${info.id}`, () => {\r\n                Module.emit(`submit.receive.${info.id}`, {\r\n                    key: this.element,\r\n                    value: this.value\r\n                });\r\n            });\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    div.v-text-field > .v-input__control > .v-input__slot {\r\n        background - color: var(--background) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot input,\r\n        div.v-text-field > .v-input__control > .v-input__slot label.v-label,\r\n        div.v-text-field > .v-input__control div.v-messages {\r\n        color: var(--font) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot button.v-icon,\r\n        div.v-text-field > .v-input__control > .v-input__slot:before,\r\n        div.v-text-field > .v-input__control > .v-input__slot:after,\r\n        div.v-text-field > .v-input__control > .v-input__slot > fieldset {\r\n        color: var(--accent) !important;\r\n        border-color: var(--accent) !important;\r\n    }`);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/elements/Dropdown.js","Module => {\r\n    const component = {\r\n        name: 'Dropdown',\r\n        template:\r\n            '<v-select' +\r\n            '   v-model=\"value\"' +\r\n            '   :label=\"title\"' +\r\n            '   :hint=\"description\"' +\r\n            '   :append-icon=\"appendIcon\"' +\r\n            '   :append-outer-icon=\"appendOuterIcon\"' +\r\n            '   :attach=\"attach\"' +\r\n            '   :autofocus=\"autofocus\"' +\r\n            '   :background-color=\"backgroundColor\"' +\r\n            '   :cache-items=\"cacheItems\"' +\r\n            '   :chips=\"chips\"' +\r\n            '   :clear-icon=\"clearIcon\"' +\r\n            '   :clearable=\"clearable\"' +\r\n            '   :color=\"color\"' +\r\n            '   :counter=\"counter\"' +\r\n            '   :counter-value=\"counterValue\"' +\r\n            '   :dark=\"dark\"' +\r\n            '   :deletable-chips=\"deletableChips\"' +\r\n            '   :dense=\"dense\"' +\r\n            '   :disable-lookup=\"disableLookup\"' +\r\n            '   :disabled=\"disabled\"' +\r\n            '   :eager=\"eager\"' +\r\n            '   :error=\"error\"' +\r\n            '   :error-count=\"errorCount\"' +\r\n            '   :error-messages=\"errorMessages\"' +\r\n            '   :filled=\"filled\"' +\r\n            '   :flat=\"flat\"' +\r\n            '   :full-width=\"fullWidth\"' +\r\n            '   :height=\"height\"' +\r\n            '   :hide-details=\"hideDetails\"' +\r\n            '   :hide-selected=\"hideSelected\"' +\r\n            '   :id=\"id\"' +\r\n            '   :item-color=\"itemColor\"' +\r\n            '   :item-disabled=\"itemDisabled\"' +\r\n            '   :item-text=\"itemText\"' +\r\n            '   :item-value=\"itemValue\"' +\r\n            '   :items=\"items\"' +\r\n            '   :light=\"light\"' +\r\n            '   :loader-height=\"loaderHeight\"' +\r\n            '   :loading=\"loading\"' +\r\n            '   :menu-props=\"menuProps\"' +\r\n            '   :messages=\"messages\"' +\r\n            '   :multiple=\"multiple\"' +\r\n            '   :no-data-text=\"noDataText\"' +\r\n            '   :open-on-clear=\"openOnClear\"' +\r\n            '   :outlined=\"outlined\"' +\r\n            '   :persistent-hint=\"persistentHint\"' +\r\n            '   :placeholder=\"placeholder\"' +\r\n            '   :prefix=\"prefix\"' +\r\n            '   :prepend-icon=\"prependIcon\"' +\r\n            '   :prepend-inner-icon=\"prependInnerIcon\"' +\r\n            '   :readonly=\"readonly\"' +\r\n            '   :return-object=\"returnObject\"' +\r\n            '   :reverse=\"reverse\"' +\r\n            '   :rounded=\"rounded\"' +\r\n            '   :rules=\"rules\"' +\r\n            '   :shaped=\"shaped\"' +\r\n            '   :single-line=\"singleLine\"' +\r\n            '   :small-chips=\"smallChips\"' +\r\n            '   :solo=\"solo\"' +\r\n            '   :solo-inverted=\"soloInverted\"' +\r\n            '   :success=\"success\"' +\r\n            '   :success-messages=\"successMessages\"' +\r\n            '   :suffix=\"suffix\"' +\r\n            '   :type=\"type\"' +\r\n            '   :validate-on-blur=\"validateOnBlur\"' +\r\n            '></v-select>',\r\n        data() {\r\n            return {\r\n                value: \"\",\r\n                title: \"\",\r\n                description: \"\",\r\n                appendIcon: '$dropdown',\r\n                appendOuterIcon: undefined,\r\n                attach: false,\r\n                autofocus: false,\r\n                backgroundColor: undefined,\r\n                cacheItems: false,\r\n                chips: false,\r\n                clearIcon: '$clear',\r\n                clearable: false,\r\n                color: undefined,\r\n                counter: undefined,\r\n                counterValue: null,\r\n                dark: false,\r\n                deletableChips: false,\r\n                dense: false,\r\n                disableLookup: false,\r\n                disabled: false,\r\n                eager: false,\r\n                error: false,\r\n                errorCount: 1,\r\n                errorMessages: [],\r\n                filled: false,\r\n                flat: false,\r\n                fullWidth: false,\r\n                height: undefined,\r\n                hideDetails: undefined,\r\n                hideSelected: false,\r\n                hint: undefined,\r\n                id: undefined,\r\n                itemColor: 'primary',\r\n                itemDisabled: \"disabled\",\r\n                itemText: \"text\",\r\n                itemValue: \"value\",\r\n                items: [],\r\n                label: undefined,\r\n                light: false,\r\n                loaderHeight: \"2\",\r\n                loading: false,\r\n                menuProps: {\r\n                    'closeOnClick': false,\r\n                    'closeOnContentClick': false,\r\n                    'disableKeys': true,\r\n                    'openOnClick': false,\r\n                    'maxHeight': 304\r\n                },\r\n                messages: [],\r\n                multiple: false,\r\n                noDataText: '$vuetify.noDataText',\r\n                openOnClear: false,\r\n                outlined: false,\r\n                persistentHint: true,\r\n                placeholder: undefined,\r\n                prefix: undefined,\r\n                prependIcon: undefined,\r\n                prependInnerIcon: undefined,\r\n                readonly: false,\r\n                returnObject: false,\r\n                reverse: false,\r\n                rounded: false,\r\n                rules: [],\r\n                shaped: false,\r\n                singleLine: false,\r\n                smallChips: false,\r\n                solo: false,\r\n                soloInverted: false,\r\n                success: false,\r\n                successMessages: [],\r\n                suffix: undefined,\r\n                type: 'text',\r\n                validateOnBlur: false,\r\n            };\r\n        },\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            /**\r\n             * @description Form id to identify events.\r\n             */\r\n            region: Object,\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n\r\n            const info = this.region.regionRaw.info;\r\n\r\n            Module.emit(`register.receive.${info.id}`);\r\n\r\n            Module.on(`submit.event.${info.id}`, () => {\r\n                Module.emit(`submit.receive.${info.id}`, {\r\n                    key: this.element,\r\n                    value: this.value\r\n                });\r\n            });\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(``);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/elements/Headline.js","Module => {\r\n    const component = {\r\n        name: 'S-Headline',\r\n        template:\r\n            '<v-card class=\"ma-4\">\\n' +\r\n            '    <v-card-title v-html=\"title\"/>\\n' +\r\n            '    <v-card-subtitle v-html=\"description\"/>\\n' +\r\n            '</v-card>',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n        },\r\n        data() {\r\n            return {\r\n                title: \"\",\r\n                description: \"\",\r\n                size: 1,\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n        },\r\n    };\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/elements/Paragraph.js","Module => {\r\n    const component = {\r\n        name: 'S-Paragraph',\r\n        template:\r\n            '  <v-card class=\"ma-4\">\\n' +\r\n            '    <v-card-title v-html=\"title\"/>\\n' +\r\n            '    <v-card-subtitle v-html=\"description\"/>\\n' +\r\n            '    <v-card-text v-html=\"value\"/>\\n' +\r\n            '  </v-card>',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n        },\r\n        data() {\r\n            return {\r\n                title: \"\",\r\n                description: \"\",\r\n                value: \"\",\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    div.v-text-field {\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot {\r\n      background-color: var(--background) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot input,\r\n    div.v-text-field > .v-input__control > .v-input__slot label.v-label,\r\n    div.v-text-field > .v-input__control div.v-messages {\r\n      color: var(--font) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot button.v-icon,\r\n    div.v-text-field > .v-input__control > .v-input__slot:before,\r\n    div.v-text-field > .v-input__control > .v-input__slot:after,\r\n    div.v-text-field > .v-input__control > .v-input__slot > fieldset {\r\n      color: var(--accent) !important;\r\n      border-color: var(--accent) !important;\r\n    }`);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/elements/Switch.js","Module => {\r\n  const component = {\r\n    name: 'S-Switch',\r\n    template:\r\n        '<v-switch\\n' +\r\n        '      v-model=\"value\"\\n' +\r\n        '      :label=\"title\"\\n' +\r\n        '      :hint=\"description\"\\n' +\r\n        '      :persistent-hint=\"persistentHint\"/>',\r\n    props: {\r\n\r\n      /**\r\n       * @description Render element. Usually an array with key value pairs for options.\r\n       */\r\n      renderElement: Object,\r\n\r\n      /**\r\n       * @description Element key. The key provided to map submitted values.\r\n       */\r\n      element: String,\r\n\r\n      /**\r\n       * @description Form id to identify events.\r\n       */\r\n      region: Object,\r\n    },\r\n    data() {\r\n      return {\r\n        value: false,\r\n        title: \"\",\r\n        description: \"\",\r\n        persistentHint: true,\r\n      };\r\n    },\r\n    mounted: async function () {\r\n\r\n      // Iterate trough all items and set them.\r\n      const keys = Object.keys(this.renderElement);\r\n\r\n      for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n        const value = this.renderElement[key];\r\n        const dataKey = key.replace('#', '');\r\n\r\n        // Check if data is mappable.\r\n        if (!this.hasOwnProperty(dataKey)) {\r\n          continue;\r\n        }\r\n\r\n        // Check if element is empty.\r\n        if (!value || value === false || value === undefined || value === null) {\r\n          continue;\r\n        }\r\n\r\n        // Set the new value.\r\n        this[key.replace('#', '')] = value;\r\n      }\r\n\r\n      const info = this.region.regionRaw.info;\r\n\r\n      Module.emit(`register.receive.${info.id}`);\r\n\r\n      Module.on(`submit.event.${info.id}`, () => {\r\n        Module.emit(`submit.receive.${info.id}`, {\r\n          key: this.element,\r\n          value: this.value\r\n        });\r\n      });\r\n    },\r\n  };\r\n\r\n  function addStyle(styleString) {\r\n    const style = document.createElement('style');\r\n    style.textContent = styleString;\r\n    style.setAttribute('data-module', component.name);\r\n    document.head.append(style);\r\n  }\r\n\r\n  addStyle(`\r\n  div.v-input--switch {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  div.v-input--switch > .v-input__control > .v-input__slot {\r\n    background-color: var(--background) !important;\r\n  }\r\n  \r\n  div.v-input--switch > .v-input__control > .v-input__slot label.v-label,\r\n    div.v-input--switch > .v-input__control div.v-messages {\r\n    color: var(--font) !important;\r\n  }\r\n  \r\n  div.v-input--switch > .v-input__control > .v-input__slot button.v-icon,\r\n  div.v-input--switch > .v-input__control > .v-input__slot .primary--text {\r\n    color: var(--accent) !important;\r\n    border-color: var(--accent) !important;\r\n  }`);\r\n\r\n  return component;\r\n};\r\n"),await this.fileSystem.write("/modules/core/src/elements/Textarea.js","Module => {\r\n    const component = {\r\n        name: 'Textarea',\r\n        template:\r\n            '<v-textarea\\n' +\r\n            '      v-model=\"value\"\\n' +\r\n            '      :label=\"title\"\\n' +\r\n            '      :hint=\"description\"\\n' +\r\n            '      :placeholder=\"placeholder\"\\n' +\r\n            '      :auto-grow=\"autoGrow\"\\n' +\r\n            '      :clearable=\"clearable\"\\n' +\r\n            '      :filled=\"filled\"\\n' +\r\n            '      :flat=\"flat\"\\n' +\r\n            '      :no-resize=\"noResize\"\\n' +\r\n            '      :outlined=\"outlined\"\\n' +\r\n            '      :persistent-hint=\"persistentHint\"\\n' +\r\n            '      :rounded=\"rounded\"\\n' +\r\n            '      :row-height=\"rowHeight\"\\n' +\r\n            '      :rows=\"rows\"\\n' +\r\n            '      :shaped=\"shaped\"\\n' +\r\n            '      :single-line=\"singleLine\"\\n' +\r\n            '      :solo=\"solo\"\\n' +\r\n            '  />',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            /**\r\n             * @description Form id to identify events.\r\n             */\r\n            region: Object,\r\n        },\r\n        data() {\r\n            return {\r\n                value: \"\",\r\n                title: \"\",\r\n                description: \"\",\r\n                placeholder: \"\",\r\n                autoGrow: false,\r\n                autofocus: true,\r\n                clearable: false,\r\n                filled: false,\r\n                flat: false,\r\n                noResize: false,\r\n                outlined: false,\r\n                persistentHint: true,\r\n                rounded: false,\r\n                rowHeight: 24,\r\n                rows: 1,\r\n                shaped: false,\r\n                singleLine: false,\r\n                solo: false,\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n\r\n            const info = this.region.regionRaw.info;\r\n\r\n            Module.emit(`register.receive.${info.id}`);\r\n\r\n            Module.on(`submit.event.${info.id}`, () => {\r\n                Module.emit(`submit.receive.${info.id}`, {\r\n                    key: this.element,\r\n                    value: this.value\r\n                });\r\n            });\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    div.v-textarea {\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n    div.v-textarea > .v-input__control > .v-input__slot {\r\n      background-color: var(--background) !important;\r\n    }\r\n    div.v-textarea > .v-input__control > .v-input__slot textarea, div.v-textarea > .v-input__control > .v-input__slot label, div.v-textarea > .v-input__control > .v-input__slot div.v-messages {\r\n      color: var(--font) !important;\r\n    }\r\n    div.v-textarea > .v-input__control > .v-input__slot button.v-icon, div.v-textarea > .v-input__control > .v-input__slot > fieldset {\r\n      color: var(--accent) !important;\r\n      border-color: var(--accent) !important;\r\n    }`);\r\n\r\n    return component;\r\n};\r\n"),await this.fileSystem.write("/modules/core/src/elements/Textfield.js","Module => {\r\n    const component = {\r\n        name: 'Textfield',\r\n        template:\r\n            '  <v-text-field\\n' +\r\n            '      v-model=\"value\"\\n' +\r\n            '      :label=\"title\"\\n' +\r\n            '      :hint=\"description\"\\n' +\r\n            '      :placeholder=\"placeholder\"\\n' +\r\n            '      :min=\"min\"\\n' +\r\n            '      :max=\"max\"\\n' +\r\n            '      :persistent-hint=\"persistentHint\"\\n' +\r\n            '  />',\r\n        props: {\r\n\r\n            /**\r\n             * @description Render element. Usually an array with key value pairs for options.\r\n             */\r\n            renderElement: Object,\r\n\r\n            /**\r\n             * @description Element key. The key provided to map submitted values.\r\n             */\r\n            element: String,\r\n\r\n            /**\r\n             * @description Form id to identify events.\r\n             */\r\n            region: Object,\r\n        },\r\n        data() {\r\n            return {\r\n                value: \"\",\r\n                title: \"\",\r\n                description: \"\",\r\n                placeholder: \"\",\r\n                min: 0,\r\n                max: 16,\r\n                persistentHint: true\r\n            };\r\n        },\r\n\r\n        mounted: async function () {\r\n\r\n            // Iterate trough all items and set them.\r\n            const keys = Object.keys(this.renderElement);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n                const value = this.renderElement[key];\r\n                const dataKey = key.replace('#', '');\r\n\r\n                // Check if data is mappable.\r\n                if (!this.hasOwnProperty(dataKey)) {\r\n                    continue;\r\n                }\r\n\r\n                // Check if element is empty.\r\n                if (!value || value === false || value === undefined || value === null) {\r\n                    continue;\r\n                }\r\n\r\n                // Set the new value.\r\n                this[key.replace('#', '')] = value;\r\n            }\r\n\r\n            const info = this.region.regionRaw.info;\r\n\r\n            Module.emit(`register.receive.${info.id}`);\r\n\r\n            Module.on(`submit.event.${info.id}`, () => {\r\n                Module.emit(`submit.receive.${info.id}`, {\r\n                    key: this.element,\r\n                    value: this.value\r\n                });\r\n            });\r\n        },\r\n    };\r\n\r\n    function addStyle(styleString) {\r\n        const style = document.createElement('style');\r\n        style.textContent = styleString;\r\n        style.setAttribute('data-module', component.name);\r\n        document.head.append(style);\r\n    }\r\n\r\n    addStyle(`\r\n    div.v-text-field {\r\n      margin-top: 20px;\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot {\r\n      background-color: var(--background) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot input,\r\n    div.v-text-field > .v-input__control > .v-input__slot label.v-label,\r\n    div.v-text-field > .v-input__control div.v-messages {\r\n      color: var(--font) !important;\r\n    }\r\n    \r\n    div.v-text-field > .v-input__control > .v-input__slot button.v-icon,\r\n    div.v-text-field > .v-input__control > .v-input__slot:before,\r\n    div.v-text-field > .v-input__control > .v-input__slot:after,\r\n    div.v-text-field > .v-input__control > .v-input__slot > fieldset {\r\n      color: var(--accent) !important;\r\n      border-color: var(--accent) !important;\r\n    }`);\r\n\r\n    return component;\r\n};"),await this.fileSystem.write("/modules/core/src/regions/content/Board.js","const Board = {\r\n\r\n    /**\r\n     * @type {Object}\r\n     * @description This holds information about the form.\r\n     */\r\n    info: {\r\n        title: \"Tile Board\",\r\n        description: \"Configure your settings here.\",\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param Module\r\n     * @param values\r\n     * @returns {{}}\r\n     */\r\n    \"build\": (Module) => {\r\n        let build = {};\r\n\r\n        build.headline = {\r\n            '#type': 'headline',\r\n            '#title': 'Tiles',\r\n            '#description': 'Tiles are usually located here.',\r\n        };\r\n\r\n        return build;\r\n    },\r\n};\r\n\r\n(() => {\r\n    return Board;\r\n})();"),await this.fileSystem.write("/modules/core/src/regions/content/Modules.js","const Modules = {\r\n\r\n    /**\r\n     * @type {Object}\r\n     * @description This holds information about the form.\r\n     */\r\n    info: {\r\n        title: \"Tile Board\",\r\n        description: \"Configure your settings here.\",\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param Module\r\n     * @param values\r\n     * @returns {{}}\r\n     */\r\n    build: (Module) => {\r\n        let build = {};\r\n\r\n        build.headline = {\r\n            '#type': 'headline',\r\n            '#title': 'Modules',\r\n            '#description': 'Shows the current installed modules.',\r\n        };\r\n\r\n        const modules = Module.moduleManager.modules;\r\n\r\n        for (let i = 0; i < modules.length; i++) {\r\n            const module = modules[i];\r\n\r\n            build[`${module.id}-module-list`] = {\r\n                '#type': 'paragraph',\r\n                '#title': module.info.name,\r\n                '#description': module.info.description,\r\n                '#value': `Version: ${module.info.version}`\r\n            };\r\n        }\r\n\r\n\r\n        return build;\r\n    },\r\n};\r\n\r\n(() => {\r\n    return Modules;\r\n})();"),await this.fileSystem.write("/modules/core/src/regions/form/AddTile.js","const AddTile = {\r\n\r\n    /**\r\n     * @type {Object}\r\n     * @description This holds information about the form.\r\n     */\r\n    \"info\": {\r\n        \"title\": \"Tile Settings\",\r\n        \"description\": \"Configure your settings here.\",\r\n        \"id\": \"example_form\",\r\n        \"tab\": \"misc\",\r\n        \"location\": \"settings\"\r\n    },\r\n\r\n    \"build\": (Module, values) => {\r\n        let build = {};\r\n\r\n        build.tile_name = {\r\n            '#type': 'textfield',\r\n            '#title': 'Default Tile name',\r\n            '#description': 'This name will be used as default for each tile.',\r\n            '#value': Module.fallback(values, 'tile_name', 'Rüdiger'),\r\n        };\r\n\r\n        build.tile_description = {\r\n            '#type': 'textarea',\r\n            '#title': 'Default Tile description',\r\n            '#description': 'This description will be used for describing ur tile.',\r\n            '#value': Module.fallback(values, 'tile_description', 'NICHT SO TIEF RÜDIGER!'),\r\n            '#autoGrow': true,\r\n            '#clearable': true,\r\n        };\r\n\r\n        build.tile_enabled = {\r\n            '#type': 'switch',\r\n            '#title': 'Enable this module',\r\n            '#description': 'This enables the module.',\r\n            '#value': Module.fallback(values, 'tile_enabled', false),\r\n        };\r\n\r\n        build.my_accordion = {\r\n            '#type': 'accordion',\r\n            '#panels': [{\r\n                '#title': 'My first tab lol',\r\n                '#content': {\r\n                    'my_accordion_switch': {\r\n                        '#type': 'switch',\r\n                        '#title': 'Enable this module',\r\n                        '#description': 'This enables the module.',\r\n                        '#value': Module.fallback(values, 'my_accordion_switch', false),\r\n                    },\r\n                    'my_accordion_description': {\r\n                        '#type': 'textarea',\r\n                        '#title': 'Default Tile description',\r\n                        '#description': 'This description will be used for describing ur tile.',\r\n                        '#value': Module.fallback(values, 'my_accordion_description', 'NICHT SO TIEF RÜDIGER!'),\r\n                        '#autoGrow': true,\r\n                        '#clearable': true,\r\n                    }\r\n                }\r\n            }, {\r\n                '#title': 'My second tab lol',\r\n                '#content': {\r\n                    'my_second_accordion_switch': {\r\n                        '#type': 'switch',\r\n                        '#title': 'Enable this module',\r\n                        '#description': 'This enables the module.',\r\n                        '#value': Module.fallback(values, 'my_second_accordion_switch', false),\r\n                    },\r\n                    'my_second_accordion_description': {\r\n                        '#type': 'textarea',\r\n                        '#title': 'Default Tile description',\r\n                        '#description': 'This description will be used for describing ur tile.',\r\n                        '#value': Module.fallback(values, 'my_second_accordion_description', 'NICHT SO TIEF RÜDIGER!'),\r\n                        '#autoGrow': true,\r\n                        '#clearable': true,\r\n                    }\r\n                }\r\n            },\r\n            ],\r\n        };\r\n\r\n        return build;\r\n    },\r\n    validate: (Module, values) => {\r\n\r\n        /**\r\n         * Return key: value for error messages.\r\n         *\r\n         * key => Resembling the field id.\r\n         * value => Resembling the the error message.\r\n         */\r\n        return true;\r\n    },\r\n\r\n    submit: (Module, values) => {\r\n\r\n        // The submitted values of the user.\r\n        return values;\r\n    },\r\n};\r\n\r\n(() => {\r\n    return AddTile;\r\n})();"),await this.fileSystem.write("/modules/core/src/regions/form/Settings.js","const Settings = {\r\n\r\n    /**\r\n     * @type {Object}\r\n     * @description This holds information about the form.\r\n     */\r\n    \"info\": {\r\n        \"title\": \"Tile Settings\",\r\n        \"description\": \"Configure your settings here.\",\r\n        \"id\": \"example_form\",\r\n        \"tab\": \"misc\",\r\n        \"location\": \"settings\"\r\n    },\r\n\r\n    \"build\": (Module, values) => {\r\n        let build = {};\r\n\r\n        build.dropdown_special = {\r\n            '#type': 'dropdown',\r\n            '#title': 'Default Tile name',\r\n            '#description': 'This name will be used as default for each tile.',\r\n            '#items': [\r\n                {\r\n                    text: \"Default tile\", value: \"default\",\r\n                },\r\n                {\r\n                    text: \"Board tile\", value: \"board\",\r\n                }\r\n            ],\r\n\r\n            '#value': Module.fallback(values, 'dropdown_special', 'board')\r\n        }\r\n\r\n        build.tile_name = {\r\n            '#type': 'textfield',\r\n            '#title': 'Default Tile name',\r\n            '#description': 'This name will be used as default for each tile.',\r\n            '#value': Module.fallback(values, 'tile_name', 'Rüdiger'),\r\n        };\r\n\r\n        build.tile_description = {\r\n            '#type': 'textarea',\r\n            '#title': 'Default Tile description',\r\n            '#description': 'This description will be used for describing ur tile.',\r\n            '#value': Module.fallback(values, 'tile_description', 'NICHT SO TIEF RÜDIGER!'),\r\n            '#autoGrow': true,\r\n            '#clearable': true,\r\n        };\r\n\r\n        build.tile_enabled = {\r\n            '#type': 'switch',\r\n            '#title': 'Enable this module',\r\n            '#description': 'This enables the module.',\r\n            '#value': Module.fallback(values, 'tile_enabled', false),\r\n        };\r\n\r\n        build.my_accordion = {\r\n            '#type': 'accordion',\r\n            '#panels': [{\r\n                '#title': 'My first tab lol',\r\n                '#content': {\r\n                    'my_accordion_switch': {\r\n                        '#type': 'switch',\r\n                        '#title': 'Enable this module',\r\n                        '#description': 'This enables the module.',\r\n                        '#value': Module.fallback(values, 'my_accordion_switch', false),\r\n                    },\r\n                    'my_accordion_description': {\r\n                        '#type': 'textarea',\r\n                        '#title': 'Default Tile description',\r\n                        '#description': 'This description will be used for describing ur tile.',\r\n                        '#value': Module.fallback(values, 'my_accordion_description', 'NICHT SO TIEF RÜDIGER!'),\r\n                        '#autoGrow': true,\r\n                        '#clearable': true,\r\n                    }\r\n                }\r\n            }, {\r\n                '#title': 'My second tab lol',\r\n                '#content': {\r\n                    'my_second_accordion_switch': {\r\n                        '#type': 'switch',\r\n                        '#title': 'Enable this module',\r\n                        '#description': 'This enables the module.',\r\n                        '#value': Module.fallback(values, 'my_second_accordion_switch', false),\r\n                    },\r\n                    'my_second_accordion_description': {\r\n                        '#type': 'textarea',\r\n                        '#title': 'Default Tile description',\r\n                        '#description': 'This description will be used for describing ur tile.',\r\n                        '#value': Module.fallback(values, 'my_second_accordion_description', 'NICHT SO TIEF RÜDIGER!'),\r\n                        '#autoGrow': true,\r\n                        '#clearable': true,\r\n                    }\r\n                }\r\n            },\r\n            ],\r\n        };\r\n\r\n        return build;\r\n    },\r\n    validate: (Module, values) => {\r\n\r\n        /**\r\n         * Return key: value for error messages.\r\n         *\r\n         * key => Resembling the field id.\r\n         * value => Resembling the the error message.\r\n         */\r\n        return true;\r\n    },\r\n\r\n    submit: (Module, values) => {\r\n\r\n        // The submitted values of the user.\r\n        return values;\r\n    },\r\n};\r\n\r\n(() => {\r\n    return Settings;\r\n})();")}}class g extends l.a{constructor(n,e,r){super(n),this.modules=[],this.path="",this.manager=r,this.fileSystem=n,this.path=e,this.discover().then()}async discover(){await new y(this.fileSystem).install();const n=await this.fileSystem.list(this.path,"d");for(let e=0;e<n.length;e++){const r=n[e];this.log("Directory found!",r);let t=r;t=t.split("/"),t=t[t.length-2],new v(this,r,t)}}async moduleReady(n){this.emit(`manager.module.${n.id}.ready`,n),this.emit("manager.module.module.ready",n);(await this.fileSystem.list(this.path,"d")).length===this.modules.length&&this.emit("manager.module.ready",n)}}class b extends l.a{constructor(n){super(n),this.fileSystem=n,this.moduleManager=new g(n,"/modules/",this),this.routeManager=new d(n),this.componentManager=new h(n),this.on("manager.module.ready",()=>{this.summary()})}summary(){for(let n=0;n<this.moduleManager.modules.length;n++){const e=this.moduleManager.modules[n];this.routeManager.routes=[...this.routeManager.routes,...e.routeManager.routes],this.componentManager.regions=[...this.componentManager.regions,...e.componentManager.regions],this.componentManager.containers=[...this.componentManager.containers,...e.componentManager.containers],this.componentManager.elements=[...this.componentManager.elements,...e.componentManager.elements]}}}let _,w=!1;window.cordovaExists=w,window.CordovaPromiseFS=i.a,console.debug("Starting app.");try{"undefined"!=typeof cordova&&cordova.file.cacheDirectory&&(w=!0)}catch(n){console.log(n)}w?(console.debug("Cordova was appended and fileSystem initialized."),_=i()({persistent:!0,storageSize:20971520,concurrency:3,Promise:s.a,fileSystem:cordova.file.cacheDirectory})):(console.debug("Cordova was not appended."),_={ensure:async()=>!1,exists:async()=>!1,create:async()=>!1,read:async n=>{if(window.localStorage.hasOwnProperty(n))return window.localStorage.getItem(n)},readJSON:async n=>{if(window.localStorage.hasOwnProperty(n))return JSON.parse(window.localStorage.getItem(n))},write:async(n,e)=>{window.localStorage.setItem(n,e)},list:async(n,e="")=>{const r=Object.keys(window.localStorage);let t=[];for(let i=0;i<r.length;i++){const o=r[i];if(o.includes(n))if("d"!==e)t.push(o);else{let e=o.split("/");e=e.filter(n=>n);let r=n.split("/");if(r=r.filter(n=>n),e.length>r.length){let n=e[r.length].split(".").length>1;e="/"+e.splice(0,r.length+1).join("/")+"/",n||t.includes(e)||t.push(e)}}}return t}},window.localSystem={});const k=new b(_);window.Manager=k,console.log(k),window.fileSystem=_}]);
//# sourceMappingURL=build.js.map