var Core =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../common/lib/Components.js":
/*!***********************************!*\
  !*** ../common/lib/Components.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Components; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Console */ \"../common/lib/Console.js\");\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Form */ \"../common/lib/Form.js\");\n\n\nclass Components extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(module, components) {\n        super(module.fileSystem);\n        this.forms = [];\n        this.module = module;\n        this.load(this.fallback(components, 'forms', [])).then(() => {\n            this.log('Regions loaded.');\n        }).catch(err => {\n            this.log('Fatal error loading the forms.');\n        });\n    }\n    async load(forms) {\n        for (let i = 0; i < forms.length; i++) {\n            const location = forms[i];\n            this.log(`Reading > ${this.module.path}${location}`);\n            const contents = await this.fileSystem.read(`${this.module.path}${location}`);\n            if (contents !== undefined) {\n                this.forms.push(new _Form__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.module, this.module.id, eval(contents)));\n            } else {\n                this.log(`${this.module.path}${location} => not found.`);\n            }\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9Db21wb25lbnRzLmpzPzYyYzYiXSwibmFtZXMiOlsiQ29tcG9uZW50cyIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsIm1vZHVsZSIsImNvbXBvbmVudHMiLCJmaWxlU3lzdGVtIiwiZm9ybXMiLCJsb2FkIiwiZmFsbGJhY2siLCJ0aGVuIiwibG9nIiwiY2F0Y2giLCJlcnIiLCJpIiwibGVuZ3RoIiwibG9jYXRpb24iLCJwYXRoIiwiY29udGVudHMiLCJyZWFkIiwidW5kZWZpbmVkIiwicHVzaCIsIkZvcm0iLCJpZCIsImV2YWwiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNlLE1BQU1BLFVBQU4sU0FBeUJDLGdEQUF6QixDQUFpQztBQUM1Q0MsZ0JBQVlDLE1BQVosRUFBb0JDLFVBQXBCLEVBQWdDO0FBQzVCLGNBQU1ELE9BQU9FLFVBQWI7QUFDQSxhQUFLQyxLQUFMLEdBQWEsRUFBYjtBQUNBLGFBQUtILE1BQUwsR0FBY0EsTUFBZDtBQUNBLGFBQUtJLElBQUwsQ0FBVSxLQUFLQyxRQUFMLENBQWNKLFVBQWQsRUFBMEIsT0FBMUIsRUFBbUMsRUFBbkMsQ0FBVixFQUFrREssSUFBbEQsQ0FBdUQsTUFBTTtBQUN6RCxpQkFBS0MsR0FBTCxDQUFTLGlCQUFUO0FBQ0gsU0FGRCxFQUVHQyxLQUZILENBRVNDLE9BQU87QUFDWixpQkFBS0YsR0FBTCxDQUFTLGdDQUFUO0FBQ0gsU0FKRDtBQUtIO0FBQ0QsVUFBTUgsSUFBTixDQUFXRCxLQUFYLEVBQWtCO0FBQ2QsYUFBSyxJQUFJTyxJQUFJLENBQWIsRUFBZ0JBLElBQUlQLE1BQU1RLE1BQTFCLEVBQWtDRCxHQUFsQyxFQUF1QztBQUNuQyxrQkFBTUUsV0FBV1QsTUFBTU8sQ0FBTixDQUFqQjtBQUNBLGlCQUFLSCxHQUFMLENBQVUsYUFBWSxLQUFLUCxNQUFMLENBQVlhLElBQUssR0FBRUQsUUFBUyxFQUFsRDtBQUNBLGtCQUFNRSxXQUFXLE1BQU0sS0FBS1osVUFBTCxDQUFnQmEsSUFBaEIsQ0FBc0IsR0FBRSxLQUFLZixNQUFMLENBQVlhLElBQUssR0FBRUQsUUFBUyxFQUFwRCxDQUF2QjtBQUNBLGdCQUFJRSxhQUFhRSxTQUFqQixFQUE0QjtBQUN4QixxQkFBS2IsS0FBTCxDQUFXYyxJQUFYLENBQWdCLElBQUlDLDZDQUFKLENBQVMsS0FBS2xCLE1BQWQsRUFBc0IsS0FBS0EsTUFBTCxDQUFZbUIsRUFBbEMsRUFBc0NDLEtBQUtOLFFBQUwsQ0FBdEMsQ0FBaEI7QUFDSCxhQUZELE1BR0s7QUFDRCxxQkFBS1AsR0FBTCxDQUFVLEdBQUUsS0FBS1AsTUFBTCxDQUFZYSxJQUFLLEdBQUVELFFBQVMsZ0JBQXhDO0FBQ0g7QUFDSjtBQUNKO0FBdkIyQyIsImZpbGUiOiIuLi9jb21tb24vbGliL0NvbXBvbmVudHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi9Db25zb2xlXCI7XHJcbmltcG9ydCBGb3JtIGZyb20gXCIuL0Zvcm1cIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tcG9uZW50cyBleHRlbmRzIENvbnNvbGUge1xyXG4gICAgY29uc3RydWN0b3IobW9kdWxlLCBjb21wb25lbnRzKSB7XHJcbiAgICAgICAgc3VwZXIobW9kdWxlLmZpbGVTeXN0ZW0pO1xyXG4gICAgICAgIHRoaXMuZm9ybXMgPSBbXTtcclxuICAgICAgICB0aGlzLm1vZHVsZSA9IG1vZHVsZTtcclxuICAgICAgICB0aGlzLmxvYWQodGhpcy5mYWxsYmFjayhjb21wb25lbnRzLCAnZm9ybXMnLCBbXSkpLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvZygnUmVnaW9ucyBsb2FkZWQuJyk7XHJcbiAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgdGhpcy5sb2coJ0ZhdGFsIGVycm9yIGxvYWRpbmcgdGhlIGZvcm1zLicpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgbG9hZChmb3Jtcykge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZm9ybXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgbG9jYXRpb24gPSBmb3Jtc1tpXTtcclxuICAgICAgICAgICAgdGhpcy5sb2coYFJlYWRpbmcgPiAke3RoaXMubW9kdWxlLnBhdGh9JHtsb2NhdGlvbn1gKTtcclxuICAgICAgICAgICAgY29uc3QgY29udGVudHMgPSBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ucmVhZChgJHt0aGlzLm1vZHVsZS5wYXRofSR7bG9jYXRpb259YCk7XHJcbiAgICAgICAgICAgIGlmIChjb250ZW50cyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZvcm1zLnB1c2gobmV3IEZvcm0odGhpcy5tb2R1bGUsIHRoaXMubW9kdWxlLmlkLCBldmFsKGNvbnRlbnRzKSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2coYCR7dGhpcy5tb2R1bGUucGF0aH0ke2xvY2F0aW9ufSA9PiBub3QgZm91bmQuYCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Components.js\n");

/***/ }),

/***/ "../common/lib/Console.js":
/*!********************************!*\
  !*** ../common/lib/Console.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Console; });\n/* harmony import */ var _Helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Helper */ \"../common/lib/Helper.js\");\n\nclass Console extends _Helper__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(fileSystem) {\n        super(fileSystem);\n    }\n    log(...data) {\n        console.debug(data.join('\\n'));\n    }\n    emit(event, detail) {\n        // @ts-ignore\n        //window.EventBus.$emit(event, detail);\n    }\n    off(event, detail) {\n        // @ts-ignore\n        //window.EventBus.$off(event, detail);\n    }\n    alterEvent(event, detail) {\n        dispatchEvent(new CustomEvent(`${event}.alter`, {\n            detail\n        }));\n    }\n    on(event, callback) {\n        // @ts-ignore\n        //window.EventBus.$on(event, callback);\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9Db25zb2xlLmpzPzIyNjYiXSwibmFtZXMiOlsiQ29uc29sZSIsIkhlbHBlciIsImNvbnN0cnVjdG9yIiwiZmlsZVN5c3RlbSIsImxvZyIsImRhdGEiLCJjb25zb2xlIiwiZGVidWciLCJqb2luIiwiZW1pdCIsImV2ZW50IiwiZGV0YWlsIiwib2ZmIiwiYWx0ZXJFdmVudCIsImRpc3BhdGNoRXZlbnQiLCJDdXN0b21FdmVudCIsIm9uIiwiY2FsbGJhY2siXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2UsTUFBTUEsT0FBTixTQUFzQkMsK0NBQXRCLENBQTZCO0FBQ3hDQyxnQkFBWUMsVUFBWixFQUF3QjtBQUNwQixjQUFNQSxVQUFOO0FBQ0g7QUFDREMsUUFBSSxHQUFHQyxJQUFQLEVBQWE7QUFDVEMsZ0JBQVFDLEtBQVIsQ0FBY0YsS0FBS0csSUFBTCxDQUFVLElBQVYsQ0FBZDtBQUNIO0FBQ0RDLFNBQUtDLEtBQUwsRUFBWUMsTUFBWixFQUFvQjtBQUNoQjtBQUNBO0FBQ0g7QUFDREMsUUFBSUYsS0FBSixFQUFXQyxNQUFYLEVBQW1CO0FBQ2Y7QUFDQTtBQUNIO0FBQ0RFLGVBQVdILEtBQVgsRUFBa0JDLE1BQWxCLEVBQTBCO0FBQ3RCRyxzQkFBYyxJQUFJQyxXQUFKLENBQWlCLEdBQUVMLEtBQU0sUUFBekIsRUFBa0M7QUFDNUNDO0FBRDRDLFNBQWxDLENBQWQ7QUFHSDtBQUNESyxPQUFHTixLQUFILEVBQVVPLFFBQVYsRUFBb0I7QUFDaEI7QUFDQTtBQUNIO0FBdkJ1QyIsImZpbGUiOiIuLi9jb21tb24vbGliL0NvbnNvbGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVscGVyIGZyb20gXCIuL0hlbHBlclwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb25zb2xlIGV4dGVuZHMgSGVscGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGZpbGVTeXN0ZW0pIHtcclxuICAgICAgICBzdXBlcihmaWxlU3lzdGVtKTtcclxuICAgIH1cclxuICAgIGxvZyguLi5kYXRhKSB7XHJcbiAgICAgICAgY29uc29sZS5kZWJ1ZyhkYXRhLmpvaW4oJ1xcbicpKTtcclxuICAgIH1cclxuICAgIGVtaXQoZXZlbnQsIGRldGFpbCkge1xyXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICAvL3dpbmRvdy5FdmVudEJ1cy4kZW1pdChldmVudCwgZGV0YWlsKTtcclxuICAgIH1cclxuICAgIG9mZihldmVudCwgZGV0YWlsKSB7XHJcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgIC8vd2luZG93LkV2ZW50QnVzLiRvZmYoZXZlbnQsIGRldGFpbCk7XHJcbiAgICB9XHJcbiAgICBhbHRlckV2ZW50KGV2ZW50LCBkZXRhaWwpIHtcclxuICAgICAgICBkaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudChgJHtldmVudH0uYWx0ZXJgLCB7XHJcbiAgICAgICAgICAgIGRldGFpbCxcclxuICAgICAgICB9KSk7XHJcbiAgICB9XHJcbiAgICBvbihldmVudCwgY2FsbGJhY2spIHtcclxuICAgICAgICAvLyBAdHMtaWdub3JlXHJcbiAgICAgICAgLy93aW5kb3cuRXZlbnRCdXMuJG9uKGV2ZW50LCBjYWxsYmFjayk7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Console.js\n");

/***/ }),

/***/ "../common/lib/Form.js":
/*!*****************************!*\
  !*** ../common/lib/Form.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Form; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Console */ \"../common/lib/Console.js\");\n\nclass Form extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  /**\r\n   *\r\n   * @param module\r\n   * @param id\r\n   * @param formFile\r\n   */\n  constructor(module, id, formFile) {\n    super(module.fileSystem);\n    /**\r\n     *\r\n     */\n    this.id = '';\n    /**\r\n     *\r\n     */\n    this.location = '';\n    /**\r\n     *\r\n     */\n    this.changed = 0;\n    // Execute the form to get the \n    this.form = formFile(module, id);\n    this.module = module;\n    this.id = this.form.info.id;\n    this.location = this.form.info.location;\n  }\n  /**\r\n   *\r\n   */\n  async loadValues() {\n    let values = {};\n    try {\n      values = await this.fileSystem.readJSON(`${this.module.path}values/form.${this.id}.json`);\n    } catch (error) {\n      await this.fileSystem.write(`${this.module.path}values/form.${this.id}.json`, JSON.stringify({}));\n      /*\r\n       * At this point we know that there is nothing in the fileSystem about this file.\r\n       * So it's ok to set value empty.\r\n       */\n      values = {};\n    }\n    if (values === undefined) return {};\n    return values;\n  }\n\n  /**\r\n   *\r\n   */\n  async build() {\n    let values = await this.loadValues();\n    return this.form.build(values);\n  }\n\n  /**\r\n   *\r\n   * @param values\r\n   */\n  async validate(values) {\n    this.form.validate(values);\n  }\n\n  /**\r\n   *\r\n   * @param values\r\n   */\n  async submit(values) {\n    values = this.form.submit(values);\n    await this.fileSystem.write(`${this.module.path}values/form.${this.id}.json`, JSON.stringify(values));\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9Gb3JtLmpzP2ZhMjIiXSwibmFtZXMiOlsiRm9ybSIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsIm1vZHVsZSIsImlkIiwiZm9ybUZpbGUiLCJmaWxlU3lzdGVtIiwibG9jYXRpb24iLCJjaGFuZ2VkIiwiZm9ybSIsImluZm8iLCJsb2FkVmFsdWVzIiwidmFsdWVzIiwicmVhZEpTT04iLCJwYXRoIiwiZXJyb3IiLCJ3cml0ZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1bmRlZmluZWQiLCJidWlsZCIsInZhbGlkYXRlIiwic3VibWl0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNlLE1BQU1BLElBQU4sU0FBbUJDLGdEQUFuQixDQUEyQjtBQUN0Qzs7Ozs7O0FBTUFDLGNBQVlDLE1BQVosRUFBb0JDLEVBQXBCLEVBQXdCQyxRQUF4QixFQUFrQztBQUM5QixVQUFNRixPQUFPRyxVQUFiO0FBQ0E7OztBQUdBLFNBQUtGLEVBQUwsR0FBVSxFQUFWO0FBQ0E7OztBQUdBLFNBQUtHLFFBQUwsR0FBZ0IsRUFBaEI7QUFDQTs7O0FBR0EsU0FBS0MsT0FBTCxHQUFlLENBQWY7QUFDQTtBQUNBLFNBQUtDLElBQUwsR0FBWUosU0FBU0YsTUFBVCxFQUFpQkMsRUFBakIsQ0FBWjtBQUNBLFNBQUtELE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLEVBQUwsR0FBVSxLQUFLSyxJQUFMLENBQVVDLElBQVYsQ0FBZU4sRUFBekI7QUFDQSxTQUFLRyxRQUFMLEdBQWdCLEtBQUtFLElBQUwsQ0FBVUMsSUFBVixDQUFlSCxRQUEvQjtBQUNIO0FBQ0Q7OztBQUdBLFFBQU1JLFVBQU4sR0FBbUI7QUFDZixRQUFJQyxTQUFTLEVBQWI7QUFDQSxRQUFJO0FBQ0FBLGVBQVMsTUFBTSxLQUFLTixVQUFMLENBQWdCTyxRQUFoQixDQUEwQixHQUFFLEtBQUtWLE1BQUwsQ0FBWVcsSUFBSyxlQUFjLEtBQUtWLEVBQUcsT0FBbkUsQ0FBZjtBQUNILEtBRkQsQ0FHQSxPQUFPVyxLQUFQLEVBQWM7QUFDVixZQUFNLEtBQUtULFVBQUwsQ0FBZ0JVLEtBQWhCLENBQXVCLEdBQUUsS0FBS2IsTUFBTCxDQUFZVyxJQUFLLGVBQWMsS0FBS1YsRUFBRyxPQUFoRSxFQUF3RWEsS0FBS0MsU0FBTCxDQUFlLEVBQWYsQ0FBeEUsQ0FBTjtBQUNBOzs7O0FBSUFOLGVBQVMsRUFBVDtBQUNIO0FBQ0QsUUFBSUEsV0FBV08sU0FBZixFQUNJLE9BQU8sRUFBUDtBQUNKLFdBQU9QLE1BQVA7QUFDSDs7QUFFRDs7O0FBR0EsUUFBTVEsS0FBTixHQUFjO0FBQ1YsUUFBSVIsU0FBUyxNQUFNLEtBQUtELFVBQUwsRUFBbkI7QUFDQSxXQUFPLEtBQUtGLElBQUwsQ0FBVVcsS0FBVixDQUFnQlIsTUFBaEIsQ0FBUDtBQUNIOztBQUVEOzs7O0FBSUEsUUFBTVMsUUFBTixDQUFlVCxNQUFmLEVBQXVCO0FBQ25CLFNBQUtILElBQUwsQ0FBVVksUUFBVixDQUFtQlQsTUFBbkI7QUFDSDs7QUFFRDs7OztBQUlBLFFBQU1VLE1BQU4sQ0FBYVYsTUFBYixFQUFxQjtBQUNqQkEsYUFBUyxLQUFLSCxJQUFMLENBQVVhLE1BQVYsQ0FBaUJWLE1BQWpCLENBQVQ7QUFDQSxVQUFNLEtBQUtOLFVBQUwsQ0FBZ0JVLEtBQWhCLENBQXVCLEdBQUUsS0FBS2IsTUFBTCxDQUFZVyxJQUFLLGVBQWMsS0FBS1YsRUFBRyxPQUFoRSxFQUF3RWEsS0FBS0MsU0FBTCxDQUFlTixNQUFmLENBQXhFLENBQU47QUFDSDtBQXZFcUMiLCJmaWxlIjoiLi4vY29tbW9uL2xpYi9Gb3JtLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnNvbGUgZnJvbSBcIi4vQ29uc29sZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtIGV4dGVuZHMgQ29uc29sZSB7XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbW9kdWxlXHJcbiAgICAgKiBAcGFyYW0gaWRcclxuICAgICAqIEBwYXJhbSBmb3JtRmlsZVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihtb2R1bGUsIGlkLCBmb3JtRmlsZSkge1xyXG4gICAgICAgIHN1cGVyKG1vZHVsZS5maWxlU3lzdGVtKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuaWQgPSAnJztcclxuICAgICAgICAvKipcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMubG9jYXRpb24gPSAnJztcclxuICAgICAgICAvKipcclxuICAgICAgICAgKlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuY2hhbmdlZCA9IDA7XHJcbiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgZm9ybSB0byBnZXQgdGhlIFxyXG4gICAgICAgIHRoaXMuZm9ybSA9IGZvcm1GaWxlKG1vZHVsZSwgaWQpO1xyXG4gICAgICAgIHRoaXMubW9kdWxlID0gbW9kdWxlO1xyXG4gICAgICAgIHRoaXMuaWQgPSB0aGlzLmZvcm0uaW5mby5pZDtcclxuICAgICAgICB0aGlzLmxvY2F0aW9uID0gdGhpcy5mb3JtLmluZm8ubG9jYXRpb247XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGxvYWRWYWx1ZXMoKSB7XHJcbiAgICAgICAgbGV0IHZhbHVlcyA9IHt9O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHZhbHVlcyA9IGF3YWl0IHRoaXMuZmlsZVN5c3RlbS5yZWFkSlNPTihgJHt0aGlzLm1vZHVsZS5wYXRofXZhbHVlcy9mb3JtLiR7dGhpcy5pZH0uanNvbmApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKGAke3RoaXMubW9kdWxlLnBhdGh9dmFsdWVzL2Zvcm0uJHt0aGlzLmlkfS5qc29uYCwgSlNPTi5zdHJpbmdpZnkoe30pKTtcclxuICAgICAgICAgICAgLypcclxuICAgICAgICAgICAgICogQXQgdGhpcyBwb2ludCB3ZSBrbm93IHRoYXQgdGhlcmUgaXMgbm90aGluZyBpbiB0aGUgZmlsZVN5c3RlbSBhYm91dCB0aGlzIGZpbGUuXHJcbiAgICAgICAgICAgICAqIFNvIGl0J3Mgb2sgdG8gc2V0IHZhbHVlIGVtcHR5LlxyXG4gICAgICAgICAgICAgKi9cclxuICAgICAgICAgICAgdmFsdWVzID0ge307XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh2YWx1ZXMgPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgICAgIHJldHVybiB2YWx1ZXM7XHJcbiAgICB9XHJcbiAgICA7XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGJ1aWxkKCkge1xyXG4gICAgICAgIGxldCB2YWx1ZXMgPSBhd2FpdCB0aGlzLmxvYWRWYWx1ZXMoKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5mb3JtLmJ1aWxkKHZhbHVlcyk7XHJcbiAgICB9XHJcbiAgICA7XHJcbiAgICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWVzXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHZhbGlkYXRlKHZhbHVlcykge1xyXG4gICAgICAgIHRoaXMuZm9ybS52YWxpZGF0ZSh2YWx1ZXMpO1xyXG4gICAgfVxyXG4gICAgO1xyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHZhbHVlc1xyXG4gICAgICovXHJcbiAgICBhc3luYyBzdWJtaXQodmFsdWVzKSB7XHJcbiAgICAgICAgdmFsdWVzID0gdGhpcy5mb3JtLnN1Ym1pdCh2YWx1ZXMpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZShgJHt0aGlzLm1vZHVsZS5wYXRofXZhbHVlcy9mb3JtLiR7dGhpcy5pZH0uanNvbmAsIEpTT04uc3RyaW5naWZ5KHZhbHVlcykpO1xyXG4gICAgfVxyXG4gICAgO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../common/lib/Form.js\n");

/***/ }),

/***/ "../common/lib/Helper.js":
/*!*******************************!*\
  !*** ../common/lib/Helper.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Helper; });\nclass Helper {\n    constructor(fileSystem) {\n        this.fileSystem = fileSystem;\n    }\n    fallback(object, item, fallback) {\n        // Check if item exists if not use the fallback.\n        if (item in object) {\n            return object[item];\n        }\n        return fallback;\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9IZWxwZXIuanM/OTI5MCJdLCJuYW1lcyI6WyJIZWxwZXIiLCJjb25zdHJ1Y3RvciIsImZpbGVTeXN0ZW0iLCJmYWxsYmFjayIsIm9iamVjdCIsIml0ZW0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBZSxNQUFNQSxNQUFOLENBQWE7QUFDeEJDLGdCQUFZQyxVQUFaLEVBQXdCO0FBQ3BCLGFBQUtBLFVBQUwsR0FBa0JBLFVBQWxCO0FBQ0g7QUFDREMsYUFBU0MsTUFBVCxFQUFpQkMsSUFBakIsRUFBdUJGLFFBQXZCLEVBQWlDO0FBQzdCO0FBQ0EsWUFBSUUsUUFBUUQsTUFBWixFQUFvQjtBQUNoQixtQkFBT0EsT0FBT0MsSUFBUCxDQUFQO0FBQ0g7QUFDRCxlQUFPRixRQUFQO0FBQ0g7QUFWdUIiLCJmaWxlIjoiLi4vY29tbW9uL2xpYi9IZWxwZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBIZWxwZXIge1xyXG4gICAgY29uc3RydWN0b3IoZmlsZVN5c3RlbSkge1xyXG4gICAgICAgIHRoaXMuZmlsZVN5c3RlbSA9IGZpbGVTeXN0ZW07XHJcbiAgICB9XHJcbiAgICBmYWxsYmFjayhvYmplY3QsIGl0ZW0sIGZhbGxiYWNrKSB7XHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgaXRlbSBleGlzdHMgaWYgbm90IHVzZSB0aGUgZmFsbGJhY2suXHJcbiAgICAgICAgaWYgKGl0ZW0gaW4gb2JqZWN0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBvYmplY3RbaXRlbV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxsYmFjaztcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../common/lib/Helper.js\n");

/***/ }),

/***/ "../common/lib/Info.js":
/*!*****************************!*\
  !*** ../common/lib/Info.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Info; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Console */ \"../common/lib/Console.js\");\n\nclass Info extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param module {Module}\r\n   * @param info {Object}\r\n   */\n  constructor(module, info) {\n    super(module.fileSystem);\n    /**\r\n     * Contains the module name.\r\n     */\n    this.name = '';\n    /**\r\n     * Contains the module description.\r\n     */\n    this.description = '';\n    /**\r\n     * Defines in what group the module belongs. (core, theme)\r\n     */\n    this.group = '';\n    /**\r\n     * Defines what the module implements on a very basic level.\r\n     */\n    this.type = '';\n    /**\r\n     * Defines the current version of the module.\r\n     */\n    this.version = '';\n    /**\r\n     * Defines the module dependencies.\r\n     */\n    this.dependencies = [];\n    // Match all items.\n    this.name = this.fallback(info, 'name', 'undefined');\n    this.description = this.fallback(info, 'description', 'undefined');\n    this.group = this.fallback(info, 'group', 'undefined');\n    this.type = this.fallback(info, 'type', 'undefined');\n    this.version = this.fallback(info, 'version', 'undefined');\n    this.dependencies = this.fallback(info, 'dependencies', []);\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9JbmZvLmpzP2MwZmEiXSwibmFtZXMiOlsiSW5mbyIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsIm1vZHVsZSIsImluZm8iLCJmaWxlU3lzdGVtIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZ3JvdXAiLCJ0eXBlIiwidmVyc2lvbiIsImRlcGVuZGVuY2llcyIsImZhbGxiYWNrIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNlLE1BQU1BLElBQU4sU0FBbUJDLGdEQUFuQixDQUEyQjtBQUN0Qzs7Ozs7O0FBTUFDLGNBQVlDLE1BQVosRUFBb0JDLElBQXBCLEVBQTBCO0FBQ3RCLFVBQU1ELE9BQU9FLFVBQWI7QUFDQTs7O0FBR0EsU0FBS0MsSUFBTCxHQUFZLEVBQVo7QUFDQTs7O0FBR0EsU0FBS0MsV0FBTCxHQUFtQixFQUFuQjtBQUNBOzs7QUFHQSxTQUFLQyxLQUFMLEdBQWEsRUFBYjtBQUNBOzs7QUFHQSxTQUFLQyxJQUFMLEdBQVksRUFBWjtBQUNBOzs7QUFHQSxTQUFLQyxPQUFMLEdBQWUsRUFBZjtBQUNBOzs7QUFHQSxTQUFLQyxZQUFMLEdBQW9CLEVBQXBCO0FBQ0E7QUFDQSxTQUFLTCxJQUFMLEdBQVksS0FBS00sUUFBTCxDQUFjUixJQUFkLEVBQW9CLE1BQXBCLEVBQTRCLFdBQTVCLENBQVo7QUFDQSxTQUFLRyxXQUFMLEdBQW1CLEtBQUtLLFFBQUwsQ0FBY1IsSUFBZCxFQUFvQixhQUFwQixFQUFtQyxXQUFuQyxDQUFuQjtBQUNBLFNBQUtJLEtBQUwsR0FBYSxLQUFLSSxRQUFMLENBQWNSLElBQWQsRUFBb0IsT0FBcEIsRUFBNkIsV0FBN0IsQ0FBYjtBQUNBLFNBQUtLLElBQUwsR0FBWSxLQUFLRyxRQUFMLENBQWNSLElBQWQsRUFBb0IsTUFBcEIsRUFBNEIsV0FBNUIsQ0FBWjtBQUNBLFNBQUtNLE9BQUwsR0FBZSxLQUFLRSxRQUFMLENBQWNSLElBQWQsRUFBb0IsU0FBcEIsRUFBK0IsV0FBL0IsQ0FBZjtBQUNBLFNBQUtPLFlBQUwsR0FBb0IsS0FBS0MsUUFBTCxDQUFjUixJQUFkLEVBQW9CLGNBQXBCLEVBQW9DLEVBQXBDLENBQXBCO0FBQ0g7QUF4Q3FDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvSW5mby5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb25zb2xlIGZyb20gXCIuL0NvbnNvbGVcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5mbyBleHRlbmRzIENvbnNvbGUge1xyXG4gICAgLyoqXHJcbiAgICAgKiBDb25zdHJ1Y3Rvci5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gbW9kdWxlIHtNb2R1bGV9XHJcbiAgICAgKiBAcGFyYW0gaW5mbyB7T2JqZWN0fVxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihtb2R1bGUsIGluZm8pIHtcclxuICAgICAgICBzdXBlcihtb2R1bGUuZmlsZVN5c3RlbSk7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ29udGFpbnMgdGhlIG1vZHVsZSBuYW1lLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMubmFtZSA9ICcnO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENvbnRhaW5zIHRoZSBtb2R1bGUgZGVzY3JpcHRpb24uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9ICcnO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIERlZmluZXMgaW4gd2hhdCBncm91cCB0aGUgbW9kdWxlIGJlbG9uZ3MuIChjb3JlLCB0aGVtZSlcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmdyb3VwID0gJyc7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogRGVmaW5lcyB3aGF0IHRoZSBtb2R1bGUgaW1wbGVtZW50cyBvbiBhIHZlcnkgYmFzaWMgbGV2ZWwuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy50eXBlID0gJyc7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogRGVmaW5lcyB0aGUgY3VycmVudCB2ZXJzaW9uIG9mIHRoZSBtb2R1bGUuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy52ZXJzaW9uID0gJyc7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogRGVmaW5lcyB0aGUgbW9kdWxlIGRlcGVuZGVuY2llcy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmRlcGVuZGVuY2llcyA9IFtdO1xyXG4gICAgICAgIC8vIE1hdGNoIGFsbCBpdGVtcy5cclxuICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLmZhbGxiYWNrKGluZm8sICduYW1lJywgJ3VuZGVmaW5lZCcpO1xyXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLmZhbGxiYWNrKGluZm8sICdkZXNjcmlwdGlvbicsICd1bmRlZmluZWQnKTtcclxuICAgICAgICB0aGlzLmdyb3VwID0gdGhpcy5mYWxsYmFjayhpbmZvLCAnZ3JvdXAnLCAndW5kZWZpbmVkJyk7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdGhpcy5mYWxsYmFjayhpbmZvLCAndHlwZScsICd1bmRlZmluZWQnKTtcclxuICAgICAgICB0aGlzLnZlcnNpb24gPSB0aGlzLmZhbGxiYWNrKGluZm8sICd2ZXJzaW9uJywgJ3VuZGVmaW5lZCcpO1xyXG4gICAgICAgIHRoaXMuZGVwZW5kZW5jaWVzID0gdGhpcy5mYWxsYmFjayhpbmZvLCAnZGVwZW5kZW5jaWVzJywgW10pO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../common/lib/Info.js\n");

/***/ }),

/***/ "../common/lib/Installer.js":
/*!**********************************!*\
  !*** ../common/lib/Installer.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Installer; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Console */ \"../common/lib/Console.js\");\n\nclass Installer extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(fileSystem) {\n        super(fileSystem);\n    }\n    async install() {\n        await this.fileSystem.write('/modules/core/core.components.json', '{\\r\\n  \"regions\": {\\r\\n    \"content\": {\\r\\n      \"title\": \"Content\",\\r\\n      \"description\": \"Is used to display data.\",\\r\\n      \"path\": \"src/regions/Content.js\"\\r\\n    },\\r\\n    \"form\": {\\r\\n      \"title\": \"Form\",\\r\\n      \"description\": \"Is used to alter data.\",\\r\\n      \"path\": \"src/regions/Form.js\"\\r\\n    }\\r\\n  },\\r\\n  \"containers\": {\\r\\n    \"accordion\": {\\r\\n      \"title\": \"Accordion\",\\r\\n      \"description\": \"An element which contains elements in a specific arrangement.\",\\r\\n      \"path\": \"src/containers/Accordion.js\"\\r\\n    },\\r\\n    \"list\": {\\r\\n      \"title\": \"List\",\\r\\n      \"description\": \"An element which contains elements in a specific arrangement.\",\\r\\n      \"path\": \"src/containers/List.js\"\\r\\n    },\\r\\n    \"tab\": {\\r\\n      \"title\": \"Tab\",\\r\\n      \"description\": \"An element which contains elements in a specific arrangement.\",\\r\\n      \"path\": \"src/containers/Tab.js\"\\r\\n    },\\r\\n    \"two_column\": {\\r\\n      \"title\": \"Two Column\",\\r\\n      \"description\": \"An element which enables to split content on the left and content on the right.\",\\r\\n      \"path\": \"src/containers/layouts/TwoColumn.js\"\\r\\n    },\\r\\n    \"one_column\": {\\r\\n      \"title\": \"One Column\",\\r\\n      \"description\": \"An element which enables to split content on the left and content on the right.\",\\r\\n      \"path\": \"src/containers/layouts/OneColumn.js\"\\r\\n    },\\r\\n    \"add-tile-button\": {\\r\\n      \"title\": \"Add Tile Button\",\\r\\n      \"description\": \"An element which enables the user to upload files.\",\\r\\n      \"path\": \"src/elements/custom/tile/AddTileButton.js\"\\r\\n    }\\r\\n  },\\r\\n  \"elements\": {\\r\\n    \"tile\": {\\r\\n      \"title\": \"Tile\",\\r\\n      \"description\": \"Displays the tile.\",\\r\\n      \"path\": \"src/elements/custom/Tile.js\"\\r\\n    },\\r\\n    \"textfield\": {\\r\\n      \"title\": \"Textfield\",\\r\\n      \"description\": \"An element which changes information.\",\\r\\n      \"path\": \"src/elements/Textfield.js\"\\r\\n    },\\r\\n    \"button\": {\\r\\n      \"title\": \"Button\",\\r\\n      \"description\": \"An element which changes information.\",\\r\\n      \"path\": \"src/elements/Button.js\"\\r\\n    },\\r\\n    \"redirect_button\": {\\r\\n      \"title\": \"Redirect Button\",\\r\\n      \"description\": \"This button takes all current work and redirects the user and the content the user edited.\",\\r\\n      \"path\": \"src/elements/RedirectButton.js\"\\r\\n    },\\r\\n    \"textarea\": {\\r\\n      \"title\": \"Textarea\",\\r\\n      \"description\": \"An element which changes information.\",\\r\\n      \"path\": \"src/elements/Textarea.js\"\\r\\n    },\\r\\n    \"colorpicker\": {\\r\\n      \"title\": \"Color Picker\",\\r\\n      \"description\": \"An element which changes information.\",\\r\\n      \"path\": \"src/elements/Colorpicker.js\"\\r\\n    },\\r\\n    \"switch\": {\\r\\n      \"title\": \"Switch\",\\r\\n      \"description\": \"An element which changes information.\",\\r\\n      \"path\": \"src/elements/Switch.js\"\\r\\n    },\\r\\n    \"headline\": {\\r\\n      \"title\": \"Headline\",\\r\\n      \"description\": \"An element which should resemble the headline.\",\\r\\n      \"path\": \"src/elements/Headline.js\"\\r\\n    },\\r\\n    \"paragraph\": {\\r\\n      \"title\": \"Paragraph\",\\r\\n      \"description\": \"An element which should resemble a paragraph.\",\\r\\n      \"path\": \"src/elements/Paragraph.js\"\\r\\n    },\\r\\n    \"dropdown\": {\\r\\n      \"title\": \"Dropdown\",\\r\\n      \"description\": \"An element which should resemble a paragraph.\",\\r\\n      \"path\": \"src/elements/Dropdown.js\"\\r\\n    },\\r\\n    \"upload\": {\\r\\n      \"title\": \"Upload\",\\r\\n      \"description\": \"An element which enables the user to upload files.\",\\r\\n      \"path\": \"src/elements/Upload.js\"\\r\\n    },\\r\\n    \"sound\": {\\r\\n      \"title\": \"Sound\",\\r\\n      \"description\": \"An element which enables the user to upload files.\",\\r\\n      \"path\": \"src/elements/Sound.js\"\\r\\n    },\\r\\n    \"image\": {\\r\\n      \"title\": \"Image\",\\r\\n      \"description\": \"An element which enables the user to upload files.\",\\r\\n      \"path\": \"src/elements/Image.js\"\\r\\n    },\\r\\n    \"tile_template\": {\\r\\n      \"title\": \"TileTemplate\",\\r\\n      \"description\": \"An element which enables the user to upload files.\",\\r\\n      \"path\": \"src/elements/custom/tile/TileTemplate.js\"\\r\\n    }\\r\\n  }\\r\\n}');\n        await this.fileSystem.write('/modules/core/core.info.json', '{\\r\\n  \"name\": \"Klickbait - Mymodule\",\\r\\n  \"description\": \"This module is supposed to be an example module.\",\\r\\n  \"group\": \"klickbait\",\\r\\n  \"type\": \"module\",\\r\\n  \"version\": \"1.0.0\",\\r\\n  \"dependencies\": []\\r\\n}');\n        await this.fileSystem.write('/modules/core/core.routing.json', '{\\r\\n  \"core.board\": {\\r\\n    \"path\": \"/core/board\",\\r\\n    \"title\": \"Board\",\\r\\n    \"description\": \"Board where the tiles are located at.\",\\r\\n    \"hide\": false,\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"content\",\\r\\n        \"title\": \"Tile display\",\\r\\n        \"description\": \"This part displays the currently edited / added tile.\",\\r\\n        \"path\": \"src/regions/content/Board.js\",\\r\\n        \"icon\": \"home\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"core.settings\": {\\r\\n    \"path\": \"/core/settings\",\\r\\n    \"title\": \"Settings\",\\r\\n    \"description\": \"Default settings\",\\r\\n    \"hide\": false,\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"form\",\\r\\n        \"title\": \"Tile form\",\\r\\n        \"description\": \"Edit / add current tile.\",\\r\\n        \"path\": \"src/regions/form/Settings.js\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"core.modules\": {\\r\\n    \"path\": \"/core/modules\",\\r\\n    \"title\": \"Modules\",\\r\\n    \"description\": \"This displays all modules.\",\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"content\",\\r\\n        \"title\": \"\",\\r\\n        \"description\": \"\",\\r\\n        \"path\": \"src/regions/content/Modules.js\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"tile.templates\": {\\r\\n    \"path\": \"/tile/templates\",\\r\\n    \"title\": \"Templates\",\\r\\n    \"description\": \"Here you choose your tiles before adding your final stuff.\",\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"form\",\\r\\n        \"title\": \"\",\\r\\n        \"description\": \"\",\\r\\n        \"path\": \"src/regions/form/TileTemplates.js\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"core.sound\": {\\r\\n    \"path\": \"/tile/sound\",\\r\\n    \"title\": \"Sound\",\\r\\n    \"description\": \"Here you choose your tiles before adding your final stuff.\",\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"form\",\\r\\n        \"title\": \"\",\\r\\n        \"description\": \"\",\\r\\n        \"path\": \"src/regions/form/EditSound.js\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"add.tile.image\": {\\r\\n    \"path\": \"/tile/image\",\\r\\n    \"title\": \"Image\",\\r\\n    \"description\": \"Here you choose your tiles before adding your final stuff.\",\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"form\",\\r\\n        \"title\": \"\",\\r\\n        \"description\": \"\",\\r\\n        \"path\": \"src/regions/form/EditImage.js\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"add.tile\": {\\r\\n    \"path\": \"/add/tile\",\\r\\n    \"title\": \"Add Tile\",\\r\\n    \"description\": \"Default settings\",\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"form\",\\r\\n        \"title\": \"Tile form\",\\r\\n        \"description\": \"Edit / add current tile.\",\\r\\n        \"path\": \"src/regions/form/tile/AddTile.js\"\\r\\n      }\\r\\n    ]\\r\\n  },\\r\\n  \"add.tile.text\": {\\r\\n    \"path\": \"/add/tile/text\",\\r\\n    \"title\": \"Tile Text\",\\r\\n    \"description\": \"Here you choose the text style for your tile.\",\\r\\n    \"regions\": [\\r\\n      {\\r\\n        \"type\": \"form\",\\r\\n        \"title\": \"\",\\r\\n        \"description\": \"\",\\r\\n        \"path\": \"src/regions/form/tile/TileText.js\"\\r\\n      }\\r\\n    ]\\r\\n  }\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/containers/Accordion.js', 'Module => {\\r\\n    const data = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    const component = {\\r\\n        name: \\'S-Accordion\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'  <v-expansion-panels :accordion=\"accordion\"\\\\n\\' +\\r\\n            \\'                      :popout=\"popout\"\\\\n\\' +\\r\\n            \\'                      :inset=\"inset\"\\\\n\\' +\\r\\n            \\'                      :multiple=\"multiple\"\\\\n\\' +\\r\\n            \\'                      :focusable=\"focusable\"\\\\n\\' +\\r\\n            \\'                      :disabled=\"disabled\"\\\\n\\' +\\r\\n            \\'                      :readonly=\"readonly\"\\\\n\\' +\\r\\n            \\'                      :flat=\"flat\"\\\\n\\' +\\r\\n            \\'                      :hover=\"hover\"\\\\n\\' +\\r\\n            \\'                      :tile=\"tile\">\\\\n\\' +\\r\\n            \\'    <v-expansion-panel v-for=\"(panel, key) in panels\" :key=\"`${key}-accordion-${panels.length}`\">\\\\n\\' +\\r\\n            \\'      <v-expansion-panel-header>{{ panel[\\\\\\'#title\\\\\\'] }}</v-expansion-panel-header>\\\\n\\' +\\r\\n            \\'\\\\n\\' +\\r\\n            \\'      <v-expansion-panel-content>\\\\n\\' +\\r\\n            \\'        <component v-for=\"(renderElement, element) in panel[\\\\\\'#content\\\\\\']\"\\\\n\\' +\\r\\n            \\'                   :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\\\n\\' +\\r\\n            \\'                   :renderElement=\"renderElement\"\\\\n\\' +\\r\\n            \\'                   :element=\"element\"\\\\n\\' +\\r\\n            \\'                   :key=\"`${element}.${changed}`\"\\\\n\\' +\\r\\n            \\'                   :region=\"region\"/>\\\\n\\' +\\r\\n            \\'      </v-expansion-panel-content>\\\\n\\' +\\r\\n            \\'    </v-expansion-panel>\\\\n\\' +\\r\\n            \\'  </v-expansion-panels>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            region: Object\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                panels: {},\\r\\n                accordion: true,\\r\\n                popout: false,\\r\\n                inset: false,\\r\\n                multiple: false,\\r\\n                disabled: false,\\r\\n                readonly: false,\\r\\n                focusable: false,\\r\\n                flat: true,\\r\\n                hover: false,\\r\\n                tile: false,\\r\\n                changed: 0,\\r\\n            };\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n\\r\\n            this.panels = this.element[\\'#panels\\'];\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/containers/css/Accordion.css`, component.name);\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/containers/css/Accordion.css', '.v-expansion-panels {\\r\\n    z-index: 0 !important;\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.v-expansion-panels :before {\\r\\n    border: solid 1px var(--accent);\\r\\n    box-shadow: none !important;\\r\\n}\\r\\n.v-expansion-panels :first-child:before {\\r\\n    border-bottom: none;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/containers/css/List.css', '.v-expansion-panels {\\r\\n    z-index: 0 !important;\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.v-expansion-panels :before {\\r\\n    border: solid 1px var(--accent);\\r\\n    box-shadow: none !important;\\r\\n}\\r\\n.v-expansion-panels :first-child:before {\\r\\n    border-bottom: none;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/containers/css/Tab.css', '.v-tabs {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n.v-tabs .v-tabs-slider {\\r\\n    background-color: var(--accent) !important;\\r\\n}\\r\\n.v-tabs .v-tabs-bar {\\r\\n    background-color: var(--secondary) !important;\\r\\n}\\r\\n.v-tabs .v-tabs-bar .v-tab {\\r\\n    color: var(--font) !important;\\r\\n}\\r\\n\\r\\n.v-window {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.v-window .v-card {\\r\\n    background-color: var(--primary) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/containers/layouts/css/OneColumn.css', '.one-column {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.one-column .tile {\\r\\n\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/containers/layouts/css/TwoColumn.css', '.two-column {\\r\\n    display: grid;\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: auto;\\r\\n    column-gap: 10px;\\r\\n    grid-template-areas:\\r\\n              \"first second\";\\r\\n}\\r\\n\\r\\n.first-column {\\r\\n    grid-area: first;\\r\\n}\\r\\n\\r\\n.second-column {\\r\\n    grid-area: second;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/containers/layouts/OneColumn.js', 'Module => {\\r\\n    const data = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    const component = {\\r\\n        name: \\'TileContainer\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'<div class=\"one-column\">\\' +\\r\\n            \\'   <component v-for=\"(renderElement, element) in content\"\\' +\\r\\n            \\'              :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\' +\\r\\n            \\'              :renderElement=\"renderElement\"\\' +\\r\\n            \\'              :element=\"element\"\\' +\\r\\n            \\'              :key=\"`${element}.${changed}`\"\\' +\\r\\n            \\'              :region=\"region\"/>\\' +\\r\\n            \\'</div>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            region: Object\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                content: {},\\r\\n                changed: 0\\r\\n            };\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n        updated: async function () {\\r\\n            const containers = document.querySelector(\\'.one-column\\');\\r\\n            const computedWidth = containers.offsetWidth;\\r\\n\\r\\n            console.log(computedWidth)\\r\\n\\r\\n            /*const sortable = new Draggable.Swappable(containers, {\\r\\n                draggable: \\'.tile\\',\\r\\n                mirror: {\\r\\n                    appendTo: \\'.one-column\\',\\r\\n                    constrainDimensions: true,\\r\\n                },\\r\\n                plugins: [Draggable.Plugins.SwapAnimation],\\r\\n                sortAnimation: {\\r\\n                    duration: 200,\\r\\n                },\\r\\n            });*/\\r\\n        }\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/containers/layouts/css/OneColumn.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/containers/layouts/TwoColumn.js', 'Module => {\\r\\n    const data = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    const component = {\\r\\n        name: \\'S-TwoColumn\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'<div class=\"two-column mt-2\">\\' +\\r\\n            \\'   <v-card class=\"first-column\" flat>\\' +\\r\\n            \\'       <v-card-text>\\' +\\r\\n            \\'             <component v-for=\"(renderElement, element) in first\"\\' +\\r\\n            \\'                        :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\' +\\r\\n            \\'                        :renderElement=\"renderElement\"\\' +\\r\\n            \\'                        :element=\"element\"\\' +\\r\\n            \\'                        :key=\"`${element}.${changed}`\"\\' +\\r\\n            \\'                        :region=\"region\"/>\\' +\\r\\n            \\'       </v-card-text>\\' +\\r\\n            \\'   </v-card>\\' +\\r\\n            \\'   <v-card class=\"second-column\" flat>\\' +\\r\\n            \\'       <v-card-text>\\' +\\r\\n            \\'             <component v-for=\"(renderElement, element) in second\"\\' +\\r\\n            \\'                        :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\' +\\r\\n            \\'                        :renderElement=\"renderElement\"\\' +\\r\\n            \\'                        :element=\"element\"\\' +\\r\\n            \\'                        :key=\"`${element}.${changed}`\"\\' +\\r\\n            \\'                        :region=\"region\"/>\\' +\\r\\n            \\'       </v-card-text>\\' +\\r\\n            \\'   </v-card>\\' +\\r\\n            \\'</div>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            region: Object\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                first: {},\\r\\n                second: {},\\r\\n                changed: 0\\r\\n            };\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // this.first = Module.fallback(this.element, \\'#first\\', {});\\r\\n            // this.second = Module.fallback(this.element, \\'#second\\', {});\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/containers/layouts/css/TwoColumn.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/containers/List.js', 'Module => {\\r\\n    const data = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    const component = {\\r\\n        name: \\'S-List\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'  <v-list\\\\n\\' +\\r\\n            \\'      :disabled=\"disabled\"\\\\n\\' +\\r\\n            \\'      :dense=\"dense\"\\\\n\\' +\\r\\n            \\'      :two-line=\"twoLine\"\\\\n\\' +\\r\\n            \\'      :three-line=\"threeLine\"\\\\n\\' +\\r\\n            \\'      :shaped=\"shaped\"\\\\n\\' +\\r\\n            \\'      :flat=\"flat\"\\\\n\\' +\\r\\n            \\'      :subheader=\"subheader\"\\\\n\\' +\\r\\n            \\'      :sub-group=\"subGroup\"\\\\n\\' +\\r\\n            \\'      :nav=\"nav\"\\\\n\\' +\\r\\n            \\'      :avatar=\"avatar\"\\\\n\\' +\\r\\n            \\'      :rounded=\"rounded\">\\\\n\\' +\\r\\n            \\'\\\\n\\' +\\r\\n            \\'    <v-list-item v-for=\"(panel, key) in panels\" :key=\"`${key}-list-${panels.length}`\">\\\\n\\' +\\r\\n            \\'      <v-list-item-content>\\\\n\\' +\\r\\n            \\'        <component v-for=\"(renderElement, element) in panel[\\\\\\'#content\\\\\\']\"\\\\n\\' +\\r\\n            \\'                  :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\\\n\\' +\\r\\n            \\'                   :renderElement=\"renderElement\"\\\\n\\' +\\r\\n            \\'                   :element=\"element\"\\\\n\\' +\\r\\n            \\'                   :key=\"`${element}.${changed}`\"\\\\n\\' +\\r\\n            \\'                   :region=\"region\"/>\\\\n\\' +\\r\\n            \\'      </v-list-item-content>\\\\n\\' +\\r\\n            \\'    </v-list-item>\\\\n\\' +\\r\\n            \\'  </v-list>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            region: Object\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                panels: {},\\r\\n                disabled: false,\\r\\n                dense: false,\\r\\n                twoLine: false,\\r\\n                threeLine: false,\\r\\n                shaped: false,\\r\\n                flat: false,\\r\\n                subheader: false,\\r\\n                inactive: false,\\r\\n                subGroup: false,\\r\\n                nav: false,\\r\\n                avatar: false,\\r\\n                rounded: false,\\r\\n                changed: 0,\\r\\n            };\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n\\r\\n            this.panels = this.element[\\'#panels\\'];\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/containers/css/List.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/containers/Tab.js', 'Module => {\\r\\n    const data = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    const component = {\\r\\n        name: \\'S-Tab\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'  <v-card>\\\\n\\' +\\r\\n            \\'    <v-tabs v-model=\"panel\"\\\\n\\' +\\r\\n            \\'            :centered=\"centered\"\\\\n\\' +\\r\\n            \\'            :grow=\"grow\"\\\\n\\' +\\r\\n            \\'            :vertical=\"vertical\"\\\\n\\' +\\r\\n            \\'            :right=\"right\">\\\\n\\' +\\r\\n            \\'      <v-tab v-for=\"(panel, key) in panels\" :key=\"`${key}-tab-header-${panels.length}`\">\\\\n\\' +\\r\\n            \\'        {{ panel[\\\\\\'#title\\\\\\'] }}\\\\n\\' +\\r\\n            \\'      </v-tab>\\\\n\\' +\\r\\n            \\'    </v-tabs>\\\\n\\' +\\r\\n            \\'\\\\n\\' +\\r\\n            \\'    <v-tabs-items v-model=\"panel\">\\\\n\\' +\\r\\n            \\'      <v-tab-item v-for=\"(panel, key) in panels\" :key=\"`${key}-tab-content-${panels.length}`\">\\\\n\\' +\\r\\n            \\'        <v-card flat>\\\\n\\' +\\r\\n            \\'          <v-card-text>\\\\n\\' +\\r\\n            \\'            <component v-for=\"(renderElement, element) in panel[\\\\\\'#content\\\\\\']\"\\\\n\\' +\\r\\n            \\'                       :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\\\n\\' +\\r\\n            \\'                       :renderElement=\"renderElement\"\\\\n\\' +\\r\\n            \\'                       :element=\"element\"\\\\n\\' +\\r\\n            \\'                       :key=\"`${element}.${changed}`\"\\\\n\\' +\\r\\n            \\'                       :region=\"region\"/>\\\\n\\' +\\r\\n            \\'          </v-card-text>\\\\n\\' +\\r\\n            \\'        </v-card>\\\\n\\' +\\r\\n            \\'      </v-tab-item>\\\\n\\' +\\r\\n            \\'    </v-tabs-items>\\\\n\\' +\\r\\n            \\'  </v-card>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            region: Object\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                panels: {},\\r\\n                panel: 1,\\r\\n                centered: false,\\r\\n                grow: true,\\r\\n                vertical: false,\\r\\n                right: false,\\r\\n                changed: 0,\\r\\n            };\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n\\r\\n            this.panels = this.element[\\'#panels\\'];\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n    Module.appendStyle(`src/containers/css/Tab.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Button.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'S-Button\\',\\r\\n        template:\\r\\n            \\'<v-btn\\' +\\r\\n            \\'   :absolute=\"absolute\"\\' +\\r\\n            \\'   :active-class=\"activeClass\"\\' +\\r\\n            \\'   :append=\"append\"\\' +\\r\\n            \\'   :block=\"block\"\\' +\\r\\n            \\'   :bottom=\"bottom\"\\' +\\r\\n            \\'   :color=\"color\"\\' +\\r\\n            \\'   :dark=\"dark\"\\' +\\r\\n            \\'   :depressed=\"depressed\"\\' +\\r\\n            \\'   :disabled=\"disabled\"\\' +\\r\\n            \\'   :elevation=\"elevation\"\\' +\\r\\n            \\'   :exact=\"exact\"\\' +\\r\\n            \\'   :exact-active-class=\"exactActiveClass\"\\' +\\r\\n            \\'   :fab=\"fab\"\\' +\\r\\n            \\'   :fixed=\"fixed\"\\' +\\r\\n            \\'   :height=\"height\"\\' +\\r\\n            \\'   :href=\"href\"\\' +\\r\\n            \\'   :icon=\"icon\"\\' +\\r\\n            \\'   :input-value=\"inputValue\"\\' +\\r\\n            \\'   :large=\"large\"\\' +\\r\\n            \\'   :left=\"left\"\\' +\\r\\n            \\'   :light=\"light\"\\' +\\r\\n            \\'   :link=\"link\"\\' +\\r\\n            \\'   :loading=\"loading\"\\' +\\r\\n            \\'   :max-height=\"maxHeight\"\\' +\\r\\n            \\'   :max-width=\"maxWidth\"\\' +\\r\\n            \\'   :min-height=\"minHeight\"\\' +\\r\\n            \\'   :min-width=\"minWidth\"\\' +\\r\\n            \\'   :nuxt=\"nuxt\"\\' +\\r\\n            \\'   :outlined=\"outlined\"\\' +\\r\\n            \\'   :replace=\"replace\"\\' +\\r\\n            \\'   :retain-focus-on-click=\"retainFocusOnClick\"\\' +\\r\\n            \\'   :right=\"right\"\\' +\\r\\n            \\'   :ripple=\"ripple\"\\' +\\r\\n            \\'   :rounded=\"rounded\"\\' +\\r\\n            \\'   :shaped=\"shaped\"\\' +\\r\\n            \\'   :small=\"small\"\\' +\\r\\n            \\'   :tag=\"tag\"\\' +\\r\\n            \\'   :target=\"target\"\\' +\\r\\n            \\'   :text=\"text\"\\' +\\r\\n            \\'   :tile=\"tile\"\\' +\\r\\n            \\'   :to=\"to\"\\' +\\r\\n            \\'   :top=\"top\"\\' +\\r\\n            \\'   :type=\"type\"\\' +\\r\\n            \\'   :value=\"value\"\\' +\\r\\n            \\'   :width=\"width\"\\' +\\r\\n            \\'   :x-large=\"xLarge\"\\' +\\r\\n            \\'   :x-small=\"xSmall\">\\' +\\r\\n            \\'       <v-icon left v-if=\"appendIcon\">{{ appendIcon }}</v-icon>\\' +\\r\\n            \\'       {{ title }}\\' +\\r\\n            \\'       <v-icon right v-if=\"prependIcon\">{{ prependIcon }}</v-icon>\\' +\\r\\n            \\'</v-btn>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                title: \"\",\\r\\n                appendIcon: false,\\r\\n                prependIcon: false,\\r\\n                absolute: false,\\r\\n                activeClass: \\'\\',\\r\\n                append: false,\\r\\n                block: false,\\r\\n                bottom: false,\\r\\n                color: undefined,\\r\\n                dark: false,\\r\\n                depressed: false,\\r\\n                disabled: false,\\r\\n                elevation: undefined,\\r\\n                exact: false,\\r\\n                exactActiveClass: undefined,\\r\\n                fab: false,\\r\\n                fixed: false,\\r\\n                height: undefined,\\r\\n                href: undefined,\\r\\n                icon: false,\\r\\n                inputValue: undefined,\\r\\n                large: false,\\r\\n                left: false,\\r\\n                light: false,\\r\\n                link: false,\\r\\n                loading: false,\\r\\n                maxHeight: undefined,\\r\\n                maxWidth: undefined,\\r\\n                minHeight: undefined,\\r\\n                minWidth: undefined,\\r\\n                nuxt: false,\\r\\n                outlined: false,\\r\\n                replace: false,\\r\\n                retainFocusOnClick: false,\\r\\n                right: false,\\r\\n                ripple: undefined,\\r\\n                rounded: false,\\r\\n                shaped: false,\\r\\n                small: false,\\r\\n                tag: \"button\",\\r\\n                target: undefined,\\r\\n                text: false,\\r\\n                tile: false,\\r\\n                to: undefined,\\r\\n                top: false,\\r\\n                type: \"button\",\\r\\n                value: undefined,\\r\\n                width: undefined,\\r\\n                xLarge: false,\\r\\n                xSmall: false,\\r\\n            };\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n    Module.appendStyle(`src/elements/css/Button.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Colorpicker.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'Color-Picker\\',\\r\\n        template:\\r\\n            \\'<v-color-picker\\' +\\r\\n            \\'      :style=\"style\" \\' +\\r\\n            \\'      :class=\"classCSS\" \\' +\\r\\n            \\'      v-model=\"value\"\\' +\\r\\n            \\'      :canvas-height=\"canvasHeight\"\\' +\\r\\n            \\'      :hide-canvas=\"hideCanvas\"\\' +\\r\\n            \\'      :hide-inputs=\"hideInputs\"\\' +\\r\\n            \\'      :hide-mode-switch=\"hideModeSwitch\"\\' +\\r\\n            \\'      :mode=\"mode\"\\' +\\r\\n            \\'      :show-swatches=\"showSwatches\"\\' +\\r\\n            \\'      :swatches=\"swatches\"\\' +\\r\\n            \\'      :swatches-max-height=\"swatchesMaxHeight\"\\' +\\r\\n            \\'      :width=\"canvasHeight\"\\' +\\r\\n            \\'  />\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                value: {},\\r\\n                canvasHeight: \"\",\\r\\n                hideCanvas: false,\\r\\n                hideModeSwitch: false,\\r\\n                hideInputs: false,\\r\\n                mode: \\'rgba\\',\\r\\n                showSwatches: false,\\r\\n                swatches: undefined,\\r\\n                swatchesMaxHeight: 150,\\r\\n                width: 300,\\r\\n                info: {},\\r\\n                style: {},\\r\\n                classCSS: {},\\r\\n            };\\r\\n        },\\r\\n        watch: {\\r\\n            value: {\\r\\n                handler: function (value) {\\r\\n                    this.$route.params[this.element] = value;\\r\\n                    this.$trigger(\\'input_change\\', this.element);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n\\r\\n            this.info = this.region.regionRaw.info;\\r\\n\\r\\n            this.$route.params[this.element] = this.value;\\r\\n        },\\r\\n    };\\r\\n    Module.appendStyle(`src/elements/css/Colorpicker.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/css/Button.css', 'div.v-text-field {\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot {\\r\\n  background-color: var(--background) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot input,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot label.v-label,\\r\\ndiv.v-text-field > .v-input__control div.v-messages {\\r\\n  color: var(--font) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot button.v-icon,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:before,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:after,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot > fieldset {\\r\\n  color: var(--accent) !important;\\r\\n  border-color: var(--accent) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Colorpicker.css', 'div.v-text-field > .v-input__control > .v-input__slot {\\r\\n    background-color: var(--background) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot input,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot label.v-label,\\r\\ndiv.v-text-field > .v-input__control div.v-messages {\\r\\n    color: var(--font) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot button.v-icon,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:before,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:after,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot > fieldset {\\r\\n    color: var(--accent) !important;\\r\\n    border-color: var(--accent) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Image.css', '.tile-image-editor #tile-image {\\r\\n    display: block;\\r\\n    max-width: 100%;\\r\\n}\\r\\n.tile-image-editor .image-editor-item {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Paragraph.css', 'div.v-text-field {\\r\\n  margin-top: 20px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot {\\r\\n  background-color: var(--background) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot input,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot label.v-label,\\r\\ndiv.v-text-field > .v-input__control div.v-messages {\\r\\n  color: var(--font) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot button.v-icon,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:before,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:after,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot > fieldset {\\r\\n  color: var(--accent) !important;\\r\\n  border-color: var(--accent) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Sound.css', '.cursor {\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.selection.segment {\\r\\n    background-color: rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n\\r\\n.selection.point {\\r\\n    background-color: red;\\r\\n}\\r\\n\\r\\n> h2 {\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    border-bottom: 1px solid;\\r\\n    font-weight: initial;\\r\\n    padding-bottom: 5px;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Switch.css', 'div.v-input--switch {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ndiv.v-input--switch > .v-input__control > .v-input__slot {\\r\\n    background-color: var(--background) !important;\\r\\n}\\r\\n\\r\\ndiv.v-input--switch > .v-input__control > .v-input__slot label.v-label,\\r\\ndiv.v-input--switch > .v-input__control div.v-messages {\\r\\n    color: var(--font) !important;\\r\\n}\\r\\n\\r\\ndiv.v-input--switch > .v-input__control > .v-input__slot button.v-icon,\\r\\ndiv.v-input--switch > .v-input__control > .v-input__slot .primary--text {\\r\\n    color: var(--accent) !important;\\r\\n    border-color: var(--accent) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Textarea.css', 'div.v-textarea {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\ndiv.v-textarea > .v-input__control > .v-input__slot {\\r\\n    background-color: var(--background) !important;\\r\\n}\\r\\ndiv.v-textarea > .v-input__control > .v-input__slot textarea, div.v-textarea > .v-input__control > .v-input__slot label, div.v-textarea > .v-input__control > .v-input__slot div.v-messages {\\r\\n    color: var(--font) !important;\\r\\n}\\r\\ndiv.v-textarea > .v-input__control > .v-input__slot button.v-icon, div.v-textarea > .v-input__control > .v-input__slot > fieldset {\\r\\n    color: var(--accent) !important;\\r\\n    border-color: var(--accent) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Textfield.css', 'div.v-text-field {\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot {\\r\\n    background-color: var(--background) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot input,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot label.v-label,\\r\\ndiv.v-text-field > .v-input__control div.v-messages {\\r\\n    color: var(--font) !important;\\r\\n}\\r\\n\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot button.v-icon,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:before,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot:after,\\r\\ndiv.v-text-field > .v-input__control > .v-input__slot > fieldset {\\r\\n    color: var(--accent) !important;\\r\\n    border-color: var(--accent) !important;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/css/Tile.css', '.tile {\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n/*\\r\\n Default tile.\\r\\n*/\\r\\n\\r\\n.tile.default {\\r\\n    display: grid;\\r\\n    grid-template-areas:\\r\\n            \\'text text\\'\\r\\n            \\'text text\\';\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: 50% 50%;\\r\\n}\\r\\n\\r\\n.tile.default > .v-card__text {\\r\\n    grid-area: text;\\r\\n}\\r\\n\\r\\n.tile.default > .v-image {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n/*\\r\\n Image tile.\\r\\n*/\\r\\n\\r\\n.tile.image {\\r\\n    background-color: transparent !important;\\r\\n    box-shadow: none !important;\\r\\n\\r\\n    display: grid;\\r\\n    grid-template-areas:\\r\\n            \\'image image\\'\\r\\n            \\'image image\\';\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: 50% 50%;\\r\\n}\\r\\n\\r\\n.tile.image > .v-card__text {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.tile.image > .v-image {\\r\\n    grid-area: image;\\r\\n}\\r\\n\\r\\n\\r\\n/*\\r\\n Image tile.\\r\\n*/\\r\\n\\r\\n.tile.horizontal-50-50 {\\r\\n    display: grid;\\r\\n    grid-template-areas:\\r\\n            \\'text text\\'\\r\\n            \\'image image\\';\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: 50% 50%;\\r\\n}\\r\\n\\r\\n.tile.horizontal-50-50 > .v-card__text {\\r\\n    grid-area: text;\\r\\n}\\r\\n\\r\\n.tile.horizontal-50-50 > .v-image {\\r\\n    grid-area: image;\\r\\n}\\r\\n\\r\\n\\r\\n/*\\r\\n Image tile.\\r\\n*/\\r\\n\\r\\n.tile.vertical-50-50 {\\r\\n    display: grid;\\r\\n    grid-template-areas:\\r\\n            \\'text image\\'\\r\\n            \\'text image\\';\\r\\n    grid-template-columns: 50% 50%;\\r\\n    grid-template-rows: 50% 50%;\\r\\n}\\r\\n\\r\\n.tile.vertical-50-50 > .v-card__text {\\r\\n    grid-area: text;\\r\\n}\\r\\n\\r\\n.tile.vertical-50-50 > .v-image {\\r\\n    grid-area: image;\\r\\n}');\n        await this.fileSystem.write('/modules/core/src/elements/custom/Tile.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'Tile\\',\\r\\n        template:\\r\\n            \\'<v-card \\' +\\r\\n            \\'       v-ripple\\' +\\r\\n            \\'       v-touch:tap=\"click\"\\' +\\r\\n            \\'       width=\"150px\" \\' +\\r\\n            \\'       height=\"150px\" \\' +\\r\\n            \\'       :color=\"backgroundColor\" \\' +\\r\\n            \\'       class=\"tile\" \\' +\\r\\n            \\'       :class=\"classes\">\\' +\\r\\n            \\'   <v-card-text :style=\"{ color: textColor }\">{{ title }}</v-card-text>\\' +\\r\\n            \\'   <v-img v-if=\"src !== undefined\" :src=\"src\" width=\"150px\" height=\"150px\" :color=\"backgroundColor\">\\' +\\r\\n            \\'   </v-img>\\' +\\r\\n            \\'</v-card>\\',\\r\\n        data() {\\r\\n            return {\\r\\n                title: \\'\\',\\r\\n                backgroundColor: \\'\\',\\r\\n                textColor: \\'#000000\\',\\r\\n                changed: 0,\\r\\n                src: undefined,\\r\\n                audio: [],\\r\\n                classes: [\\'default\\'],\\r\\n                images: [],\\r\\n                sounds: [],\\r\\n                update: [],\\r\\n            };\\r\\n        },\\r\\n        watch: {\\r\\n            images: {\\r\\n                handler: function (value) {\\r\\n                    if (value.length === 0) {\\r\\n                        this.src = \\'\\';\\r\\n                        return;\\r\\n                    }\\r\\n                    const fileReader = new FileReader()\\r\\n                    fileReader.onload = () => {\\r\\n                        this.src = fileReader.result;\\r\\n                    }\\r\\n                    fileReader.readAsDataURL(value[0]);\\r\\n                },\\r\\n                deep: true\\r\\n            },\\r\\n            sounds: {\\r\\n                handler: function (value) {\\r\\n                    if (value.length === 0) {\\r\\n                        this.src = \\'\\';\\r\\n                        return;\\r\\n                    }\\r\\n                    const fileReader = new FileReader()\\r\\n                    fileReader.onload = () => {\\r\\n                        this.audio = new Audio(fileReader.result);\\r\\n                    }\\r\\n                    fileReader.readAsDataURL(value[0]);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        events: {\\r\\n            input_change: function (event, value) {\\r\\n                const params = this.$route.params;\\r\\n\\r\\n                if (!(value in params)) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const update_length = Object.keys(this.update).length;\\r\\n                let found = undefined;\\r\\n                for (let i = 0; i < update_length; i++) {\\r\\n                    const update = this.update[i];\\r\\n\\r\\n                    if (update.value === value) {\\r\\n                        found = update;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (found === undefined) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this[found.key] = params[value];\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                let value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                if (value.includes(\\'~\\')) {\\r\\n                    this.update.push({\\r\\n                        key: key.replace(\\'#\\', \\'\\'),\\r\\n                        value: value.replace(\\'~\\', \\'\\')\\r\\n                    });\\r\\n\\r\\n                    //continue;\\r\\n                    if (key.replace(\\'#\\', \\'\\') in this && value.replace(\\'~\\', \\'\\') in this.$route.params) {\\r\\n                        value = this.$route.params[value.replace(\\'~\\', \\'\\')];\\r\\n                    }\\r\\n                    else {\\r\\n                        continue;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n        methods: {\\r\\n            click: function () {\\r\\n                if (this.audio.constructor.name !== \\'HTMLAudioElement\\') {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this.audio.pause();\\r\\n                this.audio.currentTime = 0;\\r\\n                this.audio.play();\\r\\n            }\\r\\n        },\\r\\n        destroyed: function () {\\r\\n            if (this.audio.constructor.name !== \\'HTMLAudioElement\\') {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            this.audio.pause();\\r\\n        }\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/elements/css/Tile.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/custom/tile/AddTileButton.js', 'Module => {\\r\\n    const data = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    /** TODO: convert this into a container. */\\r\\n    const component = {\\r\\n        name: \\'SpeedDial\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'<v-speed-dial\\' +\\r\\n            \\'      v-model=\"fab\"\\' +\\r\\n            \\'      fixed\\' +\\r\\n            \\'      bottom\\' +\\r\\n            \\'      right\\' +\\r\\n            \\'      direction=\"top\"\\' +\\r\\n            \\'    >\\' +\\r\\n            \\'      <template v-slot:activator>\\' +\\r\\n            \\'        <v-btn\\' +\\r\\n            \\'          color=\"blue darken-2\"\\' +\\r\\n            \\'          outlined\\' +\\r\\n            \\'          dark\\' +\\r\\n            \\'          fab\\' +\\r\\n            \\'        >\\' +\\r\\n            \\'          <v-icon v-if=\"fab\">\\' +\\r\\n            \\'            close\\' +\\r\\n            \\'          </v-icon>\\' +\\r\\n            \\'          <v-icon v-else>\\' +\\r\\n            \\'            more_vert\\' +\\r\\n            \\'          </v-icon>\\' +\\r\\n            \\'        </v-btn>\\' +\\r\\n            \\'      </template>\\' +\\r\\n            \\'      <component v-for=\"(renderElement, element) in content\"\\' +\\r\\n            \\'              :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\' +\\r\\n            \\'              :renderElement=\"renderElement\"\\' +\\r\\n            \\'              :element=\"element\"\\' +\\r\\n            \\'              :key=\"`${element}.${changed}`\"\\' +\\r\\n            \\'              :region=\"region\"/>\\' +\\r\\n            \\'</v-speed-dial>\\',\\r\\n        data() {\\r\\n            return {\\r\\n                title: \\'\\',\\r\\n                backgroundColor: \\'\\',\\r\\n                content: [],\\r\\n                textColor: \\'#000000\\',\\r\\n                changed: 0,\\r\\n                src: undefined,\\r\\n                audio: [],\\r\\n                to: {},\\r\\n                classes: [\\'default\\'],\\r\\n                images: [],\\r\\n                update: [],\\r\\n                fab: false,\\r\\n            };\\r\\n        },\\r\\n        watch: {\\r\\n            images: {\\r\\n                handler: function (value) {\\r\\n                    if (value.length === 0) {\\r\\n                        this.src = \\'\\';\\r\\n                        return;\\r\\n                    }\\r\\n                    const fileReader = new FileReader()\\r\\n                    fileReader.onload = () => {\\r\\n                        this.src = fileReader.result;\\r\\n                    }\\r\\n                    fileReader.readAsDataURL(value[0]);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                let value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n        methods: {\\r\\n            addtile: function () {\\r\\n                let path;\\r\\n\\r\\n                if (\\'path\\' in this.$route.params) {\\r\\n                    path = this.$route.params[\\'path\\'] || \\'/soundboard\\';\\r\\n                }\\r\\n\\r\\n\\r\\n                if (\\'path\\' in this.$route.params) {\\r\\n                    path = this.$route.params[\\'path\\'] || \\'/soundboard\\';\\r\\n                }\\r\\n\\r\\n                this.$router.push({\\r\\n                    name: \"tile.templates\",\\r\\n                })\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/custom/tile/TileTemplate.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'TileTemplate\\',\\r\\n        template:\\r\\n            \\'<v-card \\' +\\r\\n            \\'       v-ripple\\' +\\r\\n            \\'       v-touch:tap=\"click\"\\' +\\r\\n            \\'       :width=\"size\" \\' +\\r\\n            \\'       :height=\"size\" \\' +\\r\\n            \\'       :color=\"backgroundColor\" \\' +\\r\\n            \\'       class=\"tile\" \\' +\\r\\n            \\'       :class=\"classes\"\\' +\\r\\n            \\'       :style=\"style\">\\' +\\r\\n            \\'   <v-card-text :style=\"{ color: textColor }\">{{ title }}</v-card-text>\\' +\\r\\n            \\'   <v-img v-if=\"src !== undefined\" :src=\"src\" width=\"150px\" height=\"150px\" :color=\"backgroundColor\">\\' +\\r\\n            \\'   </v-img>\\' +\\r\\n            \\'</v-card>\\',\\r\\n        data() {\\r\\n            return {\\r\\n                title: \\'\\',\\r\\n                backgroundColor: \\'\\',\\r\\n                size: `${window.innerWidth / 4}px`,\\r\\n                textColor: \\'#000000\\',\\r\\n                changed: 0,\\r\\n                src: undefined,\\r\\n                audio: [],\\r\\n                classes: [\\'default\\'],\\r\\n                style: {\\r\\n\\r\\n                },\\r\\n                images: [],\\r\\n                update: [],\\r\\n                to: [],\\r\\n            };\\r\\n        },\\r\\n        watch: {\\r\\n            images: {\\r\\n                handler: function (value) {\\r\\n                    if (value.length === 0) {\\r\\n                        this.src = \\'\\';\\r\\n                        return;\\r\\n                    }\\r\\n                    const fileReader = new FileReader()\\r\\n                    fileReader.onload = () => {\\r\\n                        this.src = fileReader.result;\\r\\n                    }\\r\\n                    fileReader.readAsDataURL(value[0]);\\r\\n                },\\r\\n                deep: true\\r\\n            },\\r\\n        },\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        events: {\\r\\n            input_change: function (event, value) {\\r\\n                const params = this.$route.params;\\r\\n\\r\\n                if (!(value in params)) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const update_length = Object.keys(this.update).length;\\r\\n                let found = undefined;\\r\\n                for (let i = 0; i < update_length; i++) {\\r\\n                    const update = this.update[i];\\r\\n\\r\\n                    if (update.value === value) {\\r\\n                        found = update;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (found === undefined) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this[found.key] = params[value];\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                let value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n        updated: async function () {\\r\\n            const containers = document.querySelector(\\'.one-column\\');\\r\\n            const computedWidth = containers.offsetWidth;\\r\\n\\r\\n            // todo: Look into this.\\r\\n            this.size = `${(window.innerWidth - 50)/ 4}px`\\r\\n            this.style.margin = \\'2px\\';\\r\\n\\r\\n            /*const sortable = new Draggable.Swappable(containers, {\\r\\n                draggable: \\'.tile\\',\\r\\n                mirror: {\\r\\n                    appendTo: \\'.one-column\\',\\r\\n                    constrainDimensions: true,\\r\\n                },\\r\\n                plugins: [Draggable.Plugins.SwapAnimation],\\r\\n                sortAnimation: {\\r\\n                    duration: 200,\\r\\n                },\\r\\n            });*/\\r\\n        },\\r\\n        methods: {\\r\\n            click: function () {\\r\\n                this.$router.push(this.to)\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/elements/css/Tile.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Dropdown.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'Dropdown\\',\\r\\n        template:\\r\\n            \\'<v-select\\' +\\r\\n            \\'   v-model=\"value\"\\' +\\r\\n            \\'   :label=\"title\"\\' +\\r\\n            \\'   :hint=\"description\"\\' +\\r\\n            \\'   :append-icon=\"appendIcon\"\\' +\\r\\n            \\'   :append-outer-icon=\"appendOuterIcon\"\\' +\\r\\n            \\'   :attach=\"attach\"\\' +\\r\\n            \\'   :autofocus=\"autofocus\"\\' +\\r\\n            \\'   :background-color=\"backgroundColor\"\\' +\\r\\n            \\'   :cache-items=\"cacheItems\"\\' +\\r\\n            \\'   :chips=\"chips\"\\' +\\r\\n            \\'   :clear-icon=\"clearIcon\"\\' +\\r\\n            \\'   :clearable=\"clearable\"\\' +\\r\\n            \\'   :color=\"color\"\\' +\\r\\n            \\'   :counter=\"counter\"\\' +\\r\\n            \\'   :counter-value=\"counterValue\"\\' +\\r\\n            \\'   :dark=\"dark\"\\' +\\r\\n            \\'   :deletable-chips=\"deletableChips\"\\' +\\r\\n            \\'   :dense=\"dense\"\\' +\\r\\n            \\'   :disable-lookup=\"disableLookup\"\\' +\\r\\n            \\'   :disabled=\"disabled\"\\' +\\r\\n            \\'   :eager=\"eager\"\\' +\\r\\n            \\'   :error=\"error\"\\' +\\r\\n            \\'   :error-count=\"errorCount\"\\' +\\r\\n            \\'   :error-messages=\"errorMessages\"\\' +\\r\\n            \\'   :filled=\"filled\"\\' +\\r\\n            \\'   :flat=\"flat\"\\' +\\r\\n            \\'   :full-width=\"fullWidth\"\\' +\\r\\n            \\'   :height=\"height\"\\' +\\r\\n            \\'   :hide-details=\"hideDetails\"\\' +\\r\\n            \\'   :hide-selected=\"hideSelected\"\\' +\\r\\n            \\'   :id=\"id\"\\' +\\r\\n            \\'   :item-color=\"itemColor\"\\' +\\r\\n            \\'   :item-disabled=\"itemDisabled\"\\' +\\r\\n            \\'   :item-text=\"itemText\"\\' +\\r\\n            \\'   :item-value=\"itemValue\"\\' +\\r\\n            \\'   :items=\"items\"\\' +\\r\\n            \\'   :light=\"light\"\\' +\\r\\n            \\'   :loader-height=\"loaderHeight\"\\' +\\r\\n            \\'   :loading=\"loading\"\\' +\\r\\n            \\'   :menu-props=\"menuProps\"\\' +\\r\\n            \\'   :messages=\"messages\"\\' +\\r\\n            \\'   :multiple=\"multiple\"\\' +\\r\\n            \\'   :no-data-text=\"noDataText\"\\' +\\r\\n            \\'   :open-on-clear=\"openOnClear\"\\' +\\r\\n            \\'   :outlined=\"outlined\"\\' +\\r\\n            \\'   :persistent-hint=\"persistentHint\"\\' +\\r\\n            \\'   :placeholder=\"placeholder\"\\' +\\r\\n            \\'   :prefix=\"prefix\"\\' +\\r\\n            \\'   :prepend-icon=\"prependIcon\"\\' +\\r\\n            \\'   :prepend-inner-icon=\"prependInnerIcon\"\\' +\\r\\n            \\'   :readonly=\"readonly\"\\' +\\r\\n            \\'   :return-object=\"returnObject\"\\' +\\r\\n            \\'   :reverse=\"reverse\"\\' +\\r\\n            \\'   :rounded=\"rounded\"\\' +\\r\\n            \\'   :rules=\"rules\"\\' +\\r\\n            \\'   :shaped=\"shaped\"\\' +\\r\\n            \\'   :single-line=\"singleLine\"\\' +\\r\\n            \\'   :small-chips=\"smallChips\"\\' +\\r\\n            \\'   :solo=\"solo\"\\' +\\r\\n            \\'   :solo-inverted=\"soloInverted\"\\' +\\r\\n            \\'   :success=\"success\"\\' +\\r\\n            \\'   :success-messages=\"successMessages\"\\' +\\r\\n            \\'   :suffix=\"suffix\"\\' +\\r\\n            \\'   :type=\"type\"\\' +\\r\\n            \\'   :validate-on-blur=\"validateOnBlur\"\\' +\\r\\n            \\'></v-select>\\',\\r\\n        data() {\\r\\n            return {\\r\\n                value: \"\",\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n                appendIcon: \\'$dropdown\\',\\r\\n                appendOuterIcon: undefined,\\r\\n                attach: false,\\r\\n                autofocus: false,\\r\\n                backgroundColor: undefined,\\r\\n                cacheItems: false,\\r\\n                chips: false,\\r\\n                clearIcon: \\'$clear\\',\\r\\n                clearable: false,\\r\\n                color: undefined,\\r\\n                counter: undefined,\\r\\n                counterValue: null,\\r\\n                dark: false,\\r\\n                deletableChips: false,\\r\\n                dense: false,\\r\\n                disableLookup: false,\\r\\n                disabled: false,\\r\\n                eager: false,\\r\\n                error: false,\\r\\n                errorCount: 1,\\r\\n                errorMessages: [],\\r\\n                filled: false,\\r\\n                flat: false,\\r\\n                fullWidth: false,\\r\\n                height: undefined,\\r\\n                hideDetails: undefined,\\r\\n                hideSelected: false,\\r\\n                hint: undefined,\\r\\n                id: undefined,\\r\\n                itemColor: \\'primary\\',\\r\\n                itemDisabled: \"disabled\",\\r\\n                itemText: \"text\",\\r\\n                itemValue: \"value\",\\r\\n                items: [],\\r\\n                label: undefined,\\r\\n                light: false,\\r\\n                loaderHeight: \"2\",\\r\\n                loading: false,\\r\\n                menuProps: {\\r\\n                    \\'closeOnClick\\': false,\\r\\n                    \\'closeOnContentClick\\': false,\\r\\n                    \\'disableKeys\\': true,\\r\\n                    \\'openOnClick\\': false,\\r\\n                    \\'maxHeight\\': 304\\r\\n                },\\r\\n                messages: [],\\r\\n                multiple: false,\\r\\n                noDataText: \\'$vuetify.noDataText\\',\\r\\n                openOnClear: false,\\r\\n                outlined: false,\\r\\n                persistentHint: true,\\r\\n                placeholder: undefined,\\r\\n                prefix: undefined,\\r\\n                prependIcon: undefined,\\r\\n                prependInnerIcon: undefined,\\r\\n                readonly: false,\\r\\n                returnObject: false,\\r\\n                reverse: false,\\r\\n                rounded: false,\\r\\n                rules: [],\\r\\n                shaped: false,\\r\\n                singleLine: false,\\r\\n                smallChips: false,\\r\\n                solo: false,\\r\\n                soloInverted: false,\\r\\n                success: false,\\r\\n                successMessages: [],\\r\\n                suffix: undefined,\\r\\n                type: \\'text\\',\\r\\n                validateOnBlur: false,\\r\\n            };\\r\\n        },\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        watch: {\\r\\n            value: {\\r\\n                handler: function (value) {\\r\\n                    this.$route.params[this.element] = value;\\r\\n                    this.$trigger(\\'input_change\\', this.element);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n\\r\\n            const info = this.region.regionRaw.info;\\r\\n\\r\\n            this.$route.params[this.element] = this.value;\\r\\n        },\\r\\n    };\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Headline.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'S-Headline\\',\\r\\n        template:\\r\\n            \\'<v-card flat>\\' +\\r\\n            \\'    <v-card-title v-if=\"title\" v-html=\"title\"/>\\' +\\r\\n            \\'    <v-card-subtitle v-if=\"description\" v-html=\"description\"/>\\' +\\r\\n            \\'</v-card>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n                size: 1,\\r\\n            };\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Image.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'S-ImageEditor\\',\\r\\n        template:\\r\\n            \\'<div class=\"tile-image-editor mb-5 px-2\">\\' +\\r\\n            \\'    <div>\\' +\\r\\n            \\'      <img id=\"tile-image\" :src=\"image\" @load=\"loaded\" />\\' +\\r\\n            \\'    </div>\\' +\\r\\n            \\'    <v-btn class=\"image-editor-item\" outlined :loading=\"loading\" block tile color=\"success\" @click=\"apply\">Apply</v-btn>\\' +\\r\\n            \\'  </div>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n                value: [],\\r\\n                cropper: null,\\r\\n                image: null,\\r\\n                files: [],\\r\\n                to: undefined,\\r\\n                loading: false,\\r\\n            };\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n\\r\\n            // Exit if empty.\\r\\n            if (!this.files.length) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            try {\\r\\n                this.image = URL.createObjectURL(this.files[0]);\\r\\n            } catch (error) {\\r\\n                console.log(error);\\r\\n                console.warn(\"Object url could not be read.\");\\r\\n            }\\r\\n        },\\r\\n        methods: {\\r\\n            submit: function () {\\r\\n                if (!(\\'params\\' in this.to)) {\\r\\n                    this.to.params = {};\\r\\n                }\\r\\n\\r\\n                this.to.params = Object.assign(\\r\\n                    this.to.params,\\r\\n                    this.$route.params\\r\\n                );\\r\\n                this.loading = false;\\r\\n                this.$router.push(this.to)\\r\\n            },\\r\\n            apply: function () {\\r\\n                if (!this.cropper) {\\r\\n                    return;\\r\\n                }\\r\\n                this.loading = true;\\r\\n\\r\\n                this.cropper.getCroppedCanvas({\\r\\n                    maxWidth: 4096,\\r\\n                    maxHeight: 4096,\\r\\n                    fillColor: \"#fff\",\\r\\n                    imageSmoothingEnabled: false,\\r\\n                    imageSmoothingQuality: \"high\"\\r\\n                });\\r\\n\\r\\n                this.cropper.getCroppedCanvas().toBlob(blob => {\\r\\n                    this.value = [\\r\\n                        new File([blob], `edited_image.${Date.now()}`)\\r\\n                    ];\\r\\n\\r\\n                    this.$route.params[this.element] = this.value;\\r\\n                    this.submit();\\r\\n                }, \\'image/png\\', 100);\\r\\n            },\\r\\n            loaded: function () {\\r\\n                this.cropper = new Cropper(document.querySelector(\"#tile-image\"), {\\r\\n                    aspectRatio: 1,\\r\\n                    viewMode: 1,\\r\\n                    autoCrop: true\\r\\n                });\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/elements/css/Image.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Paragraph.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'S-Paragraph\\',\\r\\n        template:\\r\\n            \\'  <v-card\\' +\\r\\n            \\'   :flat=\"flat\">\\' +\\r\\n            \\'    <v-card-title v-html=\"title\"/>\\' +\\r\\n            \\'    <v-card-subtitle v-html=\"description\"/>\\' +\\r\\n            \\'    <v-card-text :style=\"{ color: textColor }\" v-html=\"value\"/>\\' +\\r\\n            \\'  </v-card>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n                value: \"\",\\r\\n                flat: false,\\r\\n                textColor: \"\",\\r\\n                update: [],\\r\\n            };\\r\\n        },\\r\\n        events: {\\r\\n            input_change: function (event, value) {\\r\\n                const params = this.$route.params;\\r\\n\\r\\n                if (!(value in params)) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const update_length = Object.keys(this.update).length;\\r\\n                let found = undefined;\\r\\n                for (let i = 0; i < update_length; i++) {\\r\\n                    const update = this.update[i];\\r\\n\\r\\n                    if (update.value === value) {\\r\\n                        found = update;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (found === undefined) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this[found.key] = params[value];\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                if (value.constructor.name === \\'String\\' && value.includes(\\'~\\')) {\\r\\n                    this.update.push({\\r\\n                        key: key.replace(\\'#\\', \\'\\'),\\r\\n                        value: value.replace(\\'~\\', \\'\\')\\r\\n                    });\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n    };\\r\\n    \\r\\n    Module.appendStyle(`src/elements/css/Paragraph.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/RedirectButton.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'S-Redirect-Button\\',\\r\\n        template:\\r\\n            \\'<v-btn\\' +\\r\\n            \\'   v-if=\"show\"\\' +\\r\\n            \\'   @click=\"submit\"\\' +\\r\\n            \\'   :absolute=\"absolute\"\\' +\\r\\n            \\'   :active-class=\"activeClass\"\\' +\\r\\n            \\'   :append=\"append\"\\' +\\r\\n            \\'   :block=\"block\"\\' +\\r\\n            \\'   :bottom=\"bottom\"\\' +\\r\\n            \\'   :color=\"color\"\\' +\\r\\n            \\'   :dark=\"dark\"\\' +\\r\\n            \\'   :depressed=\"depressed\"\\' +\\r\\n            \\'   :disabled=\"disabled\"\\' +\\r\\n            \\'   :elevation=\"elevation\"\\' +\\r\\n            \\'   :exact=\"exact\"\\' +\\r\\n            \\'   :exact-active-class=\"exactActiveClass\"\\' +\\r\\n            \\'   :fab=\"fab\"\\' +\\r\\n            \\'   :fixed=\"fixed\"\\' +\\r\\n            \\'   :height=\"height\"\\' +\\r\\n            \\'   :href=\"href\"\\' +\\r\\n            \\'   :icon=\"icon\"\\' +\\r\\n            \\'   :input-value=\"inputValue\"\\' +\\r\\n            \\'   :large=\"large\"\\' +\\r\\n            \\'   :left=\"left\"\\' +\\r\\n            \\'   :light=\"light\"\\' +\\r\\n            \\'   :link=\"link\"\\' +\\r\\n            \\'   :loading=\"loading\"\\' +\\r\\n            \\'   :max-height=\"maxHeight\"\\' +\\r\\n            \\'   :max-width=\"maxWidth\"\\' +\\r\\n            \\'   :min-height=\"minHeight\"\\' +\\r\\n            \\'   :min-width=\"minWidth\"\\' +\\r\\n            \\'   :nuxt=\"nuxt\"\\' +\\r\\n            \\'   :outlined=\"outlined\"\\' +\\r\\n            \\'   :replace=\"replace\"\\' +\\r\\n            \\'   :retain-focus-on-click=\"retainFocusOnClick\"\\' +\\r\\n            \\'   :right=\"right\"\\' +\\r\\n            \\'   :ripple=\"ripple\"\\' +\\r\\n            \\'   :rounded=\"rounded\"\\' +\\r\\n            \\'   :shaped=\"shaped\"\\' +\\r\\n            \\'   :small=\"small\"\\' +\\r\\n            \\'   :tag=\"tag\"\\' +\\r\\n            \\'   :target=\"target\"\\' +\\r\\n            \\'   :text=\"text\"\\' +\\r\\n            \\'   :tile=\"tile\"\\' +\\r\\n            \\'   :top=\"top\"\\' +\\r\\n            \\'   :type=\"type\"\\' +\\r\\n            \\'   :value=\"value\"\\' +\\r\\n            \\'   :width=\"width\"\\' +\\r\\n            \\'   :x-large=\"xLarge\"\\' +\\r\\n            \\'   :x-small=\"xSmall\">\\' +\\r\\n            \\'       <v-icon left v-if=\"appendIcon\">{{ appendIcon }}</v-icon>\\' +\\r\\n            \\'       <v-icon v-if=\"centerIcon\">{{ centerIcon }}</v-icon>\\' +\\r\\n            \\'       <div v-else>{{ title }}</div>\\' +\\r\\n            \\'       <v-icon right v-if=\"prependIcon\">{{ prependIcon }}</v-icon>\\' +\\r\\n            \\'</v-btn>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n        },\\r\\n        events: {\\r\\n            input_change: function (event, value) {\\r\\n                const params = this.$route.params;\\r\\n\\r\\n                if (!(value in params)) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                const update_length = Object.keys(this.update).length;\\r\\n                let found = undefined;\\r\\n                for (let i = 0; i < update_length; i++) {\\r\\n                    const update = this.update[i];\\r\\n\\r\\n                    if (update.value === value) {\\r\\n                        found = update;\\r\\n                        break;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                if (found === undefined) {\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                this[found.key] = params[value];\\r\\n            }\\r\\n        },\\r\\n        watch: {\\r\\n            vif: {\\r\\n                handler: function (value) {\\r\\n                    if (Array.isArray(value)) {\\r\\n                        this.show = value.length !== 0;\\r\\n                    }\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                title: \"\",\\r\\n                vif: true,\\r\\n                show: true,\\r\\n                appendIcon: false,\\r\\n                prependIcon: false,\\r\\n                centerIcon: false,\\r\\n                absolute: false,\\r\\n                activeClass: \\'\\',\\r\\n                append: false,\\r\\n                block: false,\\r\\n                bottom: false,\\r\\n                color: undefined,\\r\\n                dark: false,\\r\\n                depressed: false,\\r\\n                disabled: false,\\r\\n                elevation: undefined,\\r\\n                exact: false,\\r\\n                exactActiveClass: undefined,\\r\\n                fab: false,\\r\\n                fixed: false,\\r\\n                height: undefined,\\r\\n                href: undefined,\\r\\n                icon: false,\\r\\n                inputValue: undefined,\\r\\n                large: false,\\r\\n                left: false,\\r\\n                light: false,\\r\\n                link: false,\\r\\n                loading: false,\\r\\n                maxHeight: undefined,\\r\\n                maxWidth: undefined,\\r\\n                minHeight: undefined,\\r\\n                minWidth: undefined,\\r\\n                nuxt: false,\\r\\n                outlined: false,\\r\\n                replace: false,\\r\\n                retainFocusOnClick: false,\\r\\n                right: false,\\r\\n                ripple: undefined,\\r\\n                rounded: false,\\r\\n                shaped: false,\\r\\n                small: false,\\r\\n                tag: \"button\",\\r\\n                target: undefined,\\r\\n                text: false,\\r\\n                tile: false,\\r\\n                to: undefined,\\r\\n                top: false,\\r\\n                type: \"button\",\\r\\n                value: undefined,\\r\\n                width: undefined,\\r\\n                xLarge: false,\\r\\n                xSmall: false,\\r\\n                update: []\\r\\n            };\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                let value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                if (value.constructor.name === \\'String\\' && value.includes(\\'~\\')) {\\r\\n                    this.update.push({\\r\\n                        key: key.replace(\\'#\\', \\'\\'),\\r\\n                        value: value.replace(\\'~\\', \\'\\')\\r\\n                    });\\r\\n\\r\\n                    if (key.replace(\\'#\\', \\'\\') in this && value.replace(\\'~\\', \\'\\') in this.$route.params) {\\r\\n                        value = this.$route.params[value.replace(\\'~\\', \\'\\')];\\r\\n                    } else {\\r\\n                        continue;\\r\\n                    }\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n        },\\r\\n        methods: {\\r\\n            submit: function () {\\r\\n                if (!(\\'params\\' in this.to)) {\\r\\n                    this.to.params = {};\\r\\n                }\\r\\n\\r\\n                this.to.params = Object.assign(\\r\\n                    this.to.params,\\r\\n                    this.$route.params\\r\\n                );\\r\\n                this.$router.push(this.to)\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n    Module.appendStyle(`src/elements/css/Button.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Sound.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'S-Sound\\',\\r\\n        template:\\r\\n            \\'<div>\\' +\\r\\n            \\'    <v-toolbar color=\"secondary\">\\' +\\r\\n            \\'      <v-btn v-if=\"state === \\\\\\'pause\\\\\\'\" icon @click=\"play\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">play_arrow</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'      <v-btn v-if=\"state === \\\\\\'play\\\\\\'\" icon @click=\"pause\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">pause</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'      <v-btn icon @click=\"stop\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">stop</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'\\' +\\r\\n            \\'      <v-spacer></v-spacer>\\' +\\r\\n            \\'\\' +\\r\\n            \\'      <v-btn v-if=\"cursor !== \\\\\\'cursor\\\\\\'\" icon @click=\"statechange(\\\\\\'cursor\\\\\\')\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">my_location</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'      <v-btn v-if=\"cursor !== \\\\\\'shift\\\\\\'\" icon @click=\"statechange(\\\\\\'shift\\\\\\')\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">open_with</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'\\' +\\r\\n            \\'      <v-btn v-if=\"cursor !== \\\\\\'select\\\\\\'\" icon @click=\"statechange(\\\\\\'select\\\\\\')\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">select_all</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'    </v-toolbar>\\' +\\r\\n            \\'\\' +\\r\\n            \\'   <div class=\"my-4\">\\' +\\r\\n            \\'    <v-slider\\' +\\r\\n            \\'        v-if=\"Playlist\"\\' +\\r\\n            \\'        class=\"my-10 audio-editor-item\"\\' +\\r\\n            \\'        color=\"accent\"\\' +\\r\\n            \\'        thumb-color=\"accent\"\\' +\\r\\n            \\'        track-fill-color=\"accent\"\\' +\\r\\n            \\'        append-icon=\"volume_up\"\\' +\\r\\n            \\'        prepend-icon=\"volume_down\"\\' +\\r\\n            \\'        v-model=\"MasterVolume\"\\' +\\r\\n            \\'        :min=\"1\"\\' +\\r\\n            \\'        :max=\"100\"\\' +\\r\\n            \\'        label=\"Volume\"\\' +\\r\\n            \\'        hint=\"Change the volume of the played tile.\"\\' +\\r\\n            \\'        persistent-hint\\' +\\r\\n            \\'    />\\' +\\r\\n            \\'   </div>\\' +\\r\\n            \\'\\' +\\r\\n            \\'    <div id=\"playlist\" class=\"mt-4 mb-10\"></div>\\' +\\r\\n            \\'\\' +\\r\\n            \\'   <div class=\"mt-3 mb-7\">\\' +\\r\\n            \\'    <v-slider\\' +\\r\\n            \\'        v-if=\"Playlist && cursor === \\\\\\'cursor\\\\\\'\"\\' +\\r\\n            \\'        class=\"audio-editor-item extra\"\\' +\\r\\n            \\'        v-model=\"CursorPosition\"\\' +\\r\\n            \\'        color=\"accent\"\\' +\\r\\n            \\'        thumb-color=\"accent\"\\' +\\r\\n            \\'        track-fill-color=\"accent\"\\' +\\r\\n            \\'        :min=\"0\"\\' +\\r\\n            \\'        :max=\"this.CursorPositionMax\"\\' +\\r\\n            \\'        :step=\"0.1\"\\' +\\r\\n            \\'        label=\"Cursor\"\\' +\\r\\n            \\'        hint=\"Set the cursor at the position you want to start playing from.\"\\' +\\r\\n            \\'        thumb-label=\"always\"\\' +\\r\\n            \\'        persistent-hint\\' +\\r\\n            \\'    />\\' +\\r\\n            \\'    <v-range-slider\\' +\\r\\n            \\'        v-if=\"Playlist && cursor === \\\\\\'select\\\\\\'\"\\' +\\r\\n            \\'        class=\"audio-editor-item extra\"\\' +\\r\\n            \\'        v-model=\"SelectionSegment\"\\' +\\r\\n            \\'        color=\"accent\"\\' +\\r\\n            \\'        thumb-color=\"accent\"\\' +\\r\\n            \\'        track-fill-color=\"accent\"\\' +\\r\\n            \\'        :min=\"0\"\\' +\\r\\n            \\'        :max=\"this.SelectionSegmentMax\"\\' +\\r\\n            \\'        :step=\"stepSize\"\\' +\\r\\n            \\'        label=\"Select\"\\' +\\r\\n            \\'        hint=\"Select the section you want to cut.\"\\' +\\r\\n            \\'        thumb-label=\"always\"\\' +\\r\\n            \\'        persistent-hint\\' +\\r\\n            \\'    />\\' +\\r\\n            \\'   </div>\\' +\\r\\n            \\'\\' +\\r\\n            \\'    <v-btn v-if=\"Playlist && cursor === \\\\\\'select\\\\\\'\" block depressed @click=\"trim\" color=\"secondary\">Trim</v-btn>\\' +\\r\\n            \\'\\' +\\r\\n            \\'    <v-toolbar v-if=\"cursor === \\\\\\'shift\\\\\\'\" class=\"audio-editor-item mt-6\" color=\"secondary\">\\' +\\r\\n            \\'      <v-btn icon @click=\"alignLeft\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">format_align_left</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'\\' +\\r\\n            \\'      <v-spacer></v-spacer>\\' +\\r\\n            \\'\\' +\\r\\n            \\'      <v-btn icon @click=\"moveLeft\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">chevron_left</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'      <v-btn icon @click=\"moveRight\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">chevron_right</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'    </v-toolbar>\\' +\\r\\n            \\'   <v-btn class=\"mb-3\" block color=\"success\" :loading=\"loading\" outlined @click=\"save\">\\' +\\r\\n            \\'       <v-icon left>save</v-icon>\\' +\\r\\n            \\'       Save\\' +\\r\\n            \\'   </v-btn>\\' +\\r\\n            \\'  </div>\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n\\r\\n                window,\\r\\n\\r\\n                /** @type {Document} */\\r\\n                document,\\r\\n                state: \"pause\",\\r\\n                cursor: \"cursor\",\\r\\n                stepSize: 0.1,\\r\\n                trimmed: [0, 0],\\r\\n                MasterVolume: 50,\\r\\n                CursorPosition: 0,\\r\\n                CursorPositionMax: 0,\\r\\n                SelectionSegment: [0, 0],\\r\\n                Playlist: null,\\r\\n                EventEmitter: null,\\r\\n                files: [],\\r\\n                loading: false,\\r\\n                to: undefined,\\r\\n            };\\r\\n        },\\r\\n        watch: {\\r\\n            MasterVolume: function (val) {\\r\\n                if (val && this.Playlist) {\\r\\n                    this.EventEmitter.emit(\"mastervolumechange\", val);\\r\\n                }\\r\\n            },\\r\\n            CursorPosition: function (val) {\\r\\n                if (val && this.Playlist) {\\r\\n                    this.EventEmitter.emit(\"setcursorposition\", val);\\r\\n                }\\r\\n            },\\r\\n            SelectionSegment: function (val) {\\r\\n                if (val && this.Playlist) {\\r\\n                    this.EventEmitter.emit(\"select\", val[0], val[1]);\\r\\n                }\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n\\r\\n            // FIXME: This was created by me.\\r\\n            // ee.on(\\'setcursorposition\\', function (start) {\\r\\n            //     _this2.setTimeSelection(start, start);\\r\\n            //     _this2.drawRequest();\\r\\n            // });\\r\\n\\r\\n            this.Playlist = WaveformPlaylist.init({\\r\\n                samplesPerPixel: 3000,\\r\\n                mono: true,\\r\\n                waveHeight: 70,\\r\\n                container: document.getElementById(\"playlist\"),\\r\\n                state: \"cursor\",\\r\\n                colors: {\\r\\n                    waveOutlineColor: \\'#0000FF\\',\\r\\n                    timeColor: \\'#FF00FF\\',\\r\\n                    fadeColor: \\'#000000\\'\\r\\n                },\\r\\n                seekStyle: \"line\",\\r\\n                zoomLevels: [\\r\\n                    500,\\r\\n                    1000,\\r\\n                    3000,\\r\\n                    5000\\r\\n                ]\\r\\n            });\\r\\n\\r\\n            window.Playlist = this.Playlist;\\r\\n\\r\\n            await this.Playlist.load([]);\\r\\n\\r\\n            this.Playlist.initExporter();\\r\\n            this.EventEmitter = this.Playlist.getEventEmitter();\\r\\n            this.CursorPositionMax = this.Playlist.duration;\\r\\n            this.SelectionSegmentMax = this.Playlist.duration;\\r\\n\\r\\n            this.EventEmitter.on(\"finished\", () => {\\r\\n                this.state = \"pause\";\\r\\n            });\\r\\n\\r\\n            this.EventEmitter.on(\"audiosourcesrendered\", () => {\\r\\n                this.CursorPositionMax = this.Playlist.duration;\\r\\n                this.SelectionSegmentMax = this.Playlist.duration;\\r\\n            });\\r\\n\\r\\n            this.EventEmitter.on(\"finished\", () => {\\r\\n                this.CursorPositionMax = this.Playlist.duration;\\r\\n                this.SelectionSegmentMax = this.Playlist.duration;\\r\\n            });\\r\\n\\r\\n            this.EventEmitter.on(\"shift\", (time, track) => {\\r\\n                this.trimmed[0] += time;\\r\\n                this.trimmed[1] += time;\\r\\n\\r\\n                this.CursorPositionMax = this.Playlist.duration;\\r\\n                this.SelectionSegmentMax = this.Playlist.duration;\\r\\n            });\\r\\n\\r\\n            for (let i = 0; i < this.files.length; i++) {\\r\\n                const file = this.files[i];\\r\\n                this.EventEmitter.emit(\"newtrack\", file);\\r\\n            }\\r\\n\\r\\n            this.EventEmitter.on(\"audiosourcesloaded\", () => {\\r\\n            });\\r\\n\\r\\n            this.EventEmitter.on(\"audiosourcesrendered\", () => {\\r\\n\\r\\n                // We need to set the color manually for the audio viewer.\\r\\n                /** @type {NodeListOf<HTMLElement>} */\\r\\n                const canvases = this.document.querySelectorAll(\\'.playlist .channel canvas\\');\\r\\n\\r\\n                /*for (let i = 0; i < canvases.length; i++) {\\r\\n                    const canvas = canvases[i];\\r\\n                    canvas.style.backgroundColor = this.settings.theme().accent;\\r\\n                }*/\\r\\n            });\\r\\n\\r\\n            this.EventEmitter.on(\"audiorenderingfinished\", (type, blob) => {\\r\\n                this.value = [\\r\\n                    new File(\\r\\n                        [blob],\\r\\n                        `edited_sound.${Date.now()}`, {\\r\\n                            type: `audio/${type}`\\r\\n                        })\\r\\n                ];\\r\\n                this.$route.params[this.element] = this.value;\\r\\n                this.submit();\\r\\n            });\\r\\n\\r\\n        },\\r\\n        methods: {\\r\\n            submit: function () {\\r\\n                if (!(\\'params\\' in this.to)) {\\r\\n                    this.to.params = {};\\r\\n                }\\r\\n\\r\\n                this.to.params = Object.assign(\\r\\n                    this.to.params,\\r\\n                    this.$route.params\\r\\n                );\\r\\n                this.$router.push(this.to)\\r\\n            },\\r\\n            play: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\"play\");\\r\\n                this.state = \"play\";\\r\\n            },\\r\\n            pause: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\"pause\");\\r\\n                this.state = \"pause\";\\r\\n            },\\r\\n            stop: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\"stop\");\\r\\n                this.state = \"pause\";\\r\\n            },\\r\\n            save: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.loading = true;\\r\\n                this.EventEmitter.emit(\"startaudiorendering\", \"wav\");\\r\\n            },\\r\\n            trim: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\"trim\");\\r\\n                this.trimmed = this.SelectionSegment;\\r\\n            },\\r\\n            alignLeft: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\\r\\n                    \"shift\",\\r\\n                    this.trimmed[0] * -1,\\r\\n                    this.Playlist.activeTrack || this.Playlist.tracks[0]\\r\\n                );\\r\\n            },\\r\\n            moveLeft: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\\r\\n                    \"shift\",\\r\\n                    this.stepSize * -1,\\r\\n                    this.Playlist.activeTrack || this.Playlist.tracks[0]\\r\\n                );\\r\\n            },\\r\\n            moveRight: function () {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\\r\\n                    \"shift\",\\r\\n                    this.stepSize,\\r\\n                    this.Playlist.activeTrack || this.Playlist.tracks[0]\\r\\n                );\\r\\n            },\\r\\n            statechange: function (state) {\\r\\n                if (!this.Playlist) {\\r\\n                    return;\\r\\n                }\\r\\n                this.EventEmitter.emit(\"statechange\", state);\\r\\n                this.cursor = state;\\r\\n                if (this.cursor === \"select\") {\\r\\n                    this.SelectionSegment = [0, this.CursorPosition];\\r\\n                }\\r\\n            },\\r\\n            leave: function () {\\r\\n                Module.emit(\"tile.editor\");\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/elements/css/Sound.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Switch.js', 'Module => {\\r\\n  const component = {\\r\\n    name: \\'S-Switch\\',\\r\\n    template:\\r\\n        \\'<v-switch\\\\n\\' +\\r\\n        \\'      v-model=\"value\"\\\\n\\' +\\r\\n        \\'      :label=\"title\"\\\\n\\' +\\r\\n        \\'      :hint=\"description\"\\\\n\\' +\\r\\n        \\'      :persistent-hint=\"persistentHint\"/>\\',\\r\\n    props: {\\r\\n\\r\\n      /**\\r\\n       * @description Render element. Usually an array with key value pairs for options.\\r\\n       */\\r\\n      renderElement: Object,\\r\\n\\r\\n      /**\\r\\n       * @description Element key. The key provided to map submitted values.\\r\\n       */\\r\\n      element: String,\\r\\n\\r\\n      /**\\r\\n       * @description Form id to identify events.\\r\\n       */\\r\\n      region: Object,\\r\\n    },\\r\\n    watch: {\\r\\n      value: {\\r\\n        handler: function (value) {\\r\\n          this.$route.params[this.element] = value;\\r\\n        },\\r\\n        deep: true\\r\\n      }\\r\\n    },\\r\\n    data() {\\r\\n      return {\\r\\n        value: false,\\r\\n        title: \"\",\\r\\n        description: \"\",\\r\\n        persistentHint: true,\\r\\n      };\\r\\n    },\\r\\n    mounted: async function () {\\r\\n\\r\\n      // Iterate trough all items and set them.\\r\\n      const keys = Object.keys(this.renderElement);\\r\\n\\r\\n      for (let i = 0; i < keys.length; i++) {\\r\\n        const key = keys[i];\\r\\n        const value = this.renderElement[key];\\r\\n        const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n        // Check if data is mappable.\\r\\n        if (!this.hasOwnProperty(dataKey)) {\\r\\n          continue;\\r\\n        }\\r\\n\\r\\n        // Check if element is empty.\\r\\n        if (!value || value === false || value === undefined || value === null) {\\r\\n          continue;\\r\\n        }\\r\\n\\r\\n        // Set the new value.\\r\\n        this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n      }\\r\\n\\r\\n      const info = this.region.regionRaw.info;\\r\\n\\r\\n      this.$route.params[this.element] = this.value;\\r\\n    },\\r\\n  };\\r\\n\\r\\n  Module.appendStyle(`src/elements/css/Switch.css`, component.name);\\r\\n  \\r\\n  return component;\\r\\n};\\r\\n');\n        await this.fileSystem.write('/modules/core/src/elements/Textarea.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'Textarea\\',\\r\\n        template:\\r\\n            \\'<v-textarea\\\\n\\' +\\r\\n            \\'      v-model=\"value\"\\\\n\\' +\\r\\n            \\'      :label=\"title\"\\\\n\\' +\\r\\n            \\'      :hint=\"description\"\\\\n\\' +\\r\\n            \\'      :placeholder=\"placeholder\"\\\\n\\' +\\r\\n            \\'      :auto-grow=\"autoGrow\"\\\\n\\' +\\r\\n            \\'      :clearable=\"clearable\"\\\\n\\' +\\r\\n            \\'      :filled=\"filled\"\\\\n\\' +\\r\\n            \\'      :flat=\"flat\"\\\\n\\' +\\r\\n            \\'      :no-resize=\"noResize\"\\\\n\\' +\\r\\n            \\'      :outlined=\"outlined\"\\\\n\\' +\\r\\n            \\'      :persistent-hint=\"persistentHint\"\\\\n\\' +\\r\\n            \\'      :rounded=\"rounded\"\\\\n\\' +\\r\\n            \\'      :row-height=\"rowHeight\"\\\\n\\' +\\r\\n            \\'      :rows=\"rows\"\\\\n\\' +\\r\\n            \\'      :shaped=\"shaped\"\\\\n\\' +\\r\\n            \\'      :single-line=\"singleLine\"\\\\n\\' +\\r\\n            \\'      :solo=\"solo\"\\\\n\\' +\\r\\n            \\'  />\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                value: \"\",\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n                placeholder: \"\",\\r\\n                autoGrow: false,\\r\\n                autofocus: true,\\r\\n                clearable: false,\\r\\n                filled: false,\\r\\n                flat: false,\\r\\n                noResize: false,\\r\\n                outlined: false,\\r\\n                persistentHint: true,\\r\\n                rounded: false,\\r\\n                rowHeight: 24,\\r\\n                rows: 1,\\r\\n                shaped: false,\\r\\n                singleLine: false,\\r\\n                solo: false,\\r\\n            };\\r\\n        },\\r\\n        watch: {\\r\\n            value: {\\r\\n                handler: function (value) {\\r\\n                    this.$route.params[this.element] = value;\\r\\n                    this.$trigger(\\'input_change\\', this.element);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n\\r\\n            const info = this.region.regionRaw.info;\\r\\n\\r\\n            this.$route.params[this.element] = this.value;\\r\\n        },\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/elements/Textfield.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};\\r\\n');\n        await this.fileSystem.write('/modules/core/src/elements/Textfield.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'Textfield\\',\\r\\n        template:\\r\\n            \\'  <v-text-field\\' +\\r\\n            \\'      v-model=\"value\"\\' +\\r\\n            \\'      :label=\"title\"\\' +\\r\\n            \\'      :hint=\"description\"\\' +\\r\\n            \\'      :placeholder=\"placeholder\"\\' +\\r\\n            \\'      :min=\"min\"\\' +\\r\\n            \\'      :max=\"max\"\\' +\\r\\n            \\'      :persistent-hint=\"persistentHint\"\\' +\\r\\n            \\'  />\\',\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        watch: {\\r\\n            value: {\\r\\n                handler: function (value) {\\r\\n                    this.$route.params[this.element] = value;\\r\\n                    this.$trigger(\\'input_change\\', this.element);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                value: \"\",\\r\\n                title: \"\",\\r\\n                description: \"\",\\r\\n                placeholder: \"\",\\r\\n                min: 0,\\r\\n                max: 16,\\r\\n                persistentHint: true\\r\\n            };\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n\\r\\n            const info = this.region.regionRaw.info;\\r\\n\\r\\n            this.$route.params[this.element] = this.value;\\r\\n        },\\r\\n    };\\r\\n\\r\\n    Module.appendStyle(`src/elements/Textfield.css`, component.name);\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/elements/Upload.js', 'Module => {\\r\\n    const component = {\\r\\n        name: \\'Upload\\',\\r\\n        template: \\r\\n            \\'<v-file-input\\' +\\r\\n            \\'   v-model=\"value\"\\' +\\r\\n            \\'   :label=\"title\"\\' +\\r\\n            \\'   :hint=\"description\"\\' +\\r\\n            \\'   :append-icon=\"appendIcon\"\\' +\\r\\n            \\'   :append-outer-icon=\"appendOuterIcon\"\\' +\\r\\n            \\'   :autofocus=\"autofocus\"\\' +\\r\\n            \\'   :background-color=\"backgroundColor\"\\' +\\r\\n            \\'   :chips=\"chips\"\\' +\\r\\n            \\'   :clear-icon=\"clearIcon\"\\' +\\r\\n            \\'   :clearable=\"clearable\"\\' +\\r\\n            \\'   :color=\"color\"\\' +\\r\\n            \\'   :counter=\"counter\"\\' +\\r\\n            \\'   :counter-size-string=\"counterSizeString\"\\' +\\r\\n            \\'   :counter-string=\"counterString\"\\' +\\r\\n            \\'   :counter-value=\"counterValue\"\\' +\\r\\n            \\'   :dark=\"dark\"\\' +\\r\\n            \\'   :dense=\"dense\"\\' +\\r\\n            \\'   :disabled=\"disabled\"\\' +\\r\\n            \\'   :error=\"error\"\\' +\\r\\n            \\'   :error-count=\"errorCount\"\\' +\\r\\n            \\'   :error-messages=\"errorMessages\"\\' +\\r\\n            \\'   :filled=\"filled\"\\' +\\r\\n            \\'   :flat=\"flat\"\\' +\\r\\n            \\'   :full-width=\"fullWidth\"\\' +\\r\\n            \\'   :height=\"height\"\\' +\\r\\n            \\'   :hide-details=\"hideDetails\"\\' +\\r\\n            \\'   :hide-input=\"hideInput\"\\' +\\r\\n            \\'   :light=\"light\"\\' +\\r\\n            \\'   :loader-height=\"loaderHeight\"\\' +\\r\\n            \\'   :loading=\"loading\"\\' +\\r\\n            \\'   :messages=\"messages\"\\' +\\r\\n            \\'   :multiple=\"multiple\"\\' +\\r\\n            \\'   :outlined=\"outlined\"\\' +\\r\\n            \\'   :persistent-hint=\"persistentHint\"\\' +\\r\\n            \\'   :placeholder=\"placeholder\"\\' +\\r\\n            \\'   :prefix=\"prefix\"\\' +\\r\\n            \\'   :prepend-icon=\"prependIcon\"\\' +\\r\\n            \\'   :prepend-inner-icon=\"prependInnerIcon\"\\' +\\r\\n            \\'   :readonly=\"readonly\"\\' +\\r\\n            \\'   :reverse=\"reverse\"\\' +\\r\\n            \\'   :rounded=\"rounded\"\\' +\\r\\n            \\'   :rules=\"rules\"\\' +\\r\\n            \\'   :shaped=\"shaped\"\\' +\\r\\n            \\'   :show-size=\"showSize\"\\' +\\r\\n            \\'   :single-line=\"singleLine\"\\' +\\r\\n            \\'   :small-chips=\"smallChips\"\\' +\\r\\n            \\'   :solo=\"solo\"\\' +\\r\\n            \\'   :solo-inverted=\"soloInverted\"\\' +\\r\\n            \\'   :success=\"success\"\\' +\\r\\n            \\'   :success-messages=\"successMessages\"\\' +\\r\\n            \\'   :suffix=\"suffix\"\\' +\\r\\n            \\'   :truncate-length=\"truncateLength\">\\' +\\r\\n            \\' <div>{{description}}</div>\\' +\\r\\n            \\'</v-file-input>\\',\\r\\n        data() {\\r\\n            return {\\r\\n                title: undefined,\\r\\n                description: undefined,\\r\\n                value: undefined,\\r\\n                appendIcon: undefined,\\r\\n                appendOuterIcon: undefined,\\r\\n                autofocus: false,\\r\\n                backgroundColor: undefined,\\r\\n                chips: false,\\r\\n                clearIcon: \\'$clear\\',\\r\\n                clearable: true,\\r\\n                color: undefined,\\r\\n                counter: undefined,\\r\\n                counterSizeString: \\'$vuetify.fileInput.counterSize\\',\\r\\n                counterString: \\'$vuetify.fileInput.counter\\',\\r\\n                counterValue: null,\\r\\n                dark: false,\\r\\n                dense: false,\\r\\n                disabled: false,\\r\\n                error: false,\\r\\n                errorCount: 1,\\r\\n                errorMessages: [],\\r\\n                filled: false,\\r\\n                flat: false,\\r\\n                fullWidth: false,\\r\\n                height: undefined,\\r\\n                hideDetails: undefined,\\r\\n                hideInput: false,\\r\\n                light: false,\\r\\n                loaderHeight: 2,\\r\\n                loading: false,\\r\\n                messages: [],\\r\\n                multiple: false,\\r\\n                outlined: false,\\r\\n                persistentHint: true,\\r\\n                placeholder: undefined,\\r\\n                prefix: undefined,\\r\\n                prependIcon: \\'$file\\',\\r\\n                prependInnerIcon: undefined,\\r\\n                readonly: false,\\r\\n                reverse: false,\\r\\n                rounded: false,\\r\\n                rules: [],\\r\\n                shaped: false,\\r\\n                showSize: false,\\r\\n                singleLine: false,\\r\\n                smallChips: false,\\r\\n                solo: false,\\r\\n                soloInverted: false,\\r\\n                success: false,\\r\\n                successMessages: [],\\r\\n                suffix: undefined,\\r\\n                truncateLength: 22,\\r\\n            };\\r\\n        },\\r\\n        props: {\\r\\n\\r\\n            /**\\r\\n             * @description Render element. Usually an array with key value pairs for options.\\r\\n             */\\r\\n            renderElement: Object,\\r\\n\\r\\n            /**\\r\\n             * @description Element key. The key provided to map submitted values.\\r\\n             */\\r\\n            element: String,\\r\\n\\r\\n            /**\\r\\n             * @description Form id to identify events.\\r\\n             */\\r\\n            region: Object,\\r\\n        },\\r\\n        watch: {\\r\\n            value: {\\r\\n                handler: function (value) {\\r\\n                    this.$route.params[this.element] = value;\\r\\n                    this.$trigger(\\'input_change\\', this.element);\\r\\n                },\\r\\n                deep: true\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Iterate trough all items and set them.\\r\\n            const keys = Object.keys(this.renderElement);\\r\\n\\r\\n            for (let i = 0; i < keys.length; i++) {\\r\\n                const key = keys[i];\\r\\n                const value = this.renderElement[key];\\r\\n                const dataKey = key.replace(\\'#\\', \\'\\');\\r\\n\\r\\n                // Check if data is mappable.\\r\\n                if (!this.hasOwnProperty(dataKey)) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Check if element is empty.\\r\\n                if (!value || value === false || value === undefined || value === null) {\\r\\n                    continue;\\r\\n                }\\r\\n\\r\\n                // Set the new value.\\r\\n                this[key.replace(\\'#\\', \\'\\')] = value;\\r\\n            }\\r\\n            this.$route.params[this.element] = this.value;\\r\\n        },\\r\\n    };\\r\\n\\r\\n    return component;\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/regions/Content.js', 'Module => {\\r\\n    const elements = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const containers = window.Manager.componentManager.getComponentsByType(\\'containers\\');\\r\\n    const data = [...elements, ...containers];\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        name: \\'Content\\',\\r\\n        components,\\r\\n        template:\\r\\n            \\'<v-sheet>\\' +\\r\\n            \\'  <component v-for=\"(renderElement, element) in renderArray\"\\' +\\r\\n            \\'             :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\' +\\r\\n            \\'             :renderElement=\"renderElement\"\\' +\\r\\n            \\'             :element=\"element\"\\' +\\r\\n            \\'             :key=\"`element-${renderElement[\\\\\\'#type\\\\\\']}-${element}`\"/>\\' +\\r\\n            \\'</v-sheet>\\',\\r\\n        props: {\\r\\n            route: Object,\\r\\n            region: Object,\\r\\n        },\\r\\n        data() {\\r\\n            return {\\r\\n                renderArray: {},\\r\\n            }\\r\\n        },\\r\\n        mounted: async function () {\\r\\n\\r\\n            // Load the render array.\\r\\n            await this.region.load();\\r\\n            this.renderArray = await this.region.regionRaw.build(this.region.module, this.$route);\\r\\n        },\\r\\n    };\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/regions/content/Board.js', 'const Board = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    info: {\\r\\n        title: \"Tile Board\",\\r\\n        description: \"Configure your settings here.\",\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param Module\\r\\n     * @param VueRouter\\r\\n     * @returns {{}}\\r\\n     */\\r\\n     build: async (Module, VueRoute) => {\\r\\n        let build = {};\\r\\n        const params = VueRoute.params;\\r\\n\\r\\n        const prefix = \\'/soundboard\\';\\r\\n\\r\\n        // Determine the path.\\r\\n        const path = \\'board\\' in params ? params.build : \\'\\';\\r\\n        const elements = await Module.fileSystem.list(`${prefix}/${path}`);\\r\\n\\r\\n        build.tile_column = {\\r\\n            \\'#type\\': \\'one_column\\',\\r\\n            \\'#content\\': {},\\r\\n        };\\r\\n\\r\\n        for (let i = 0; i < elements.length; i++) {\\r\\n            const path = elements[i];\\r\\n            const content = await Module.fileSystem.readJSON(path);\\r\\n\\r\\n            build.tile_column[\\'#content\\'][path] = {\\r\\n                \\'#type\\': \\'tile\\',\\r\\n                \\'#title\\': Module.fallback(content, \\'tile_title\\', \\'\\'),\\r\\n                \\'#backgroundColor\\': Module.fallback(content, \\'tile_color\\', \\'#000000\\')\\r\\n            };\\r\\n        }\\r\\n\\r\\n        build.addTileButton = {\\r\\n            \\'#type\\': \\'add-tile-button\\',\\r\\n            \\'#content\\': {\\r\\n                add_tile: {\\r\\n                    \\'#type\\': \\'redirect_button\\',\\r\\n                    \\'#fab\\': true,\\r\\n                    \\'#outlined\\': true,\\r\\n                    \\'#color\\': \\'green\\',\\r\\n                    \\'#centerIcon\\': \\'add\\',\\r\\n                    \\'#to\\': {\\r\\n                        name: \\'tile.templates\\',\\r\\n                        params: {\\r\\n                            path,\\r\\n                        }\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Board;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/content/Modules.js', 'const Modules = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    info: {\\r\\n        title: \"Tile Board\",\\r\\n        description: \"Configure your settings here.\",\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param Module\\r\\n     * @param values\\r\\n     * @returns {{}}\\r\\n     */\\r\\n    build: (Module) => {\\r\\n        let build = {};\\r\\n\\r\\n        build.headline = {\\r\\n            \\'#type\\': \\'headline\\',\\r\\n            \\'#title\\': \\'Modules\\',\\r\\n            \\'#description\\': \\'Shows the current installed modules.\\',\\r\\n        };\\r\\n\\r\\n        const modules = Module.moduleManager.modules;\\r\\n\\r\\n        for (let i = 0; i < modules.length; i++) {\\r\\n            const module = modules[i];\\r\\n\\r\\n            build[`${module.id}-module-list`] = {\\r\\n                \\'#type\\': \\'paragraph\\',\\r\\n                \\'#title\\': module.info.name,\\r\\n                \\'#description\\': module.info.description,\\r\\n                \\'#value\\': `Version: ${module.info.version}`\\r\\n            };\\r\\n        }\\r\\n\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Modules;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/Form.js', 'Module => {\\r\\n    const elements = window.Manager.componentManager.getComponentsByType(\\'elements\\');\\r\\n    const containers = window.Manager.componentManager.getComponentsByType(\\'containers\\');\\r\\n    const data = [...elements, ...containers];\\r\\n    const components = {};\\r\\n\\r\\n    for (let i = 0; i < data.length; i++) {\\r\\n        const component = data[i];\\r\\n        components[`as-${component.id}`] = component.getComponent();\\r\\n    }\\r\\n\\r\\n    return {\\r\\n        name: \\'Form\\',\\r\\n        template: \\r\\n            \\'<v-form class=\"pa-4 my-4\">\\' +\\r\\n            \\'    <br v-if=\"region.title || region.description\"/>\\' +\\r\\n            \\'    <h2 v-if=\"region.title\">{{ region.title }}</h2>\\' +\\r\\n            \\'    <h6 v-if=\"region.description\">{{ region.description }}</h6>\\' +\\r\\n            \\'\\' +\\r\\n            \\'    <component v-for=\"(renderElement, element) in renderArray\"\\' +\\r\\n            \\'               :is=\"`as-${renderElement[\\\\\\'#type\\\\\\']}`\"\\' +\\r\\n            \\'               :renderElement=\"renderElement\"\\' +\\r\\n            \\'               :element=\"element\"\\' +\\r\\n            \\'               :key=\"`${element}.${changed}`\"\\' +\\r\\n            \\'               :region=\"region\"/>\\' +\\r\\n            \\'\\' +\\r\\n            \\'    <v-btn\\' +\\r\\n            \\'        v-if=\"info.submit === undefined || info.submit === true\"\\' +\\r\\n            \\'        block\\' +\\r\\n            \\'        tile\\' +\\r\\n            \\'        :loading=\"saving\"\\' +\\r\\n            \\'        color=\"success\"\\' +\\r\\n            \\'        @click=\"submit\">\\' +\\r\\n            \\'      Save\\' +\\r\\n            \\'      {{ info.submit }}\\' +\\r\\n            \\'    </v-btn>\\' +\\r\\n            \\'    <br/>\\' +\\r\\n            \\'    <v-divider/>\\' +\\r\\n            \\'\\' +\\r\\n            \\'    <v-snackbar v-model=\"snackbar\"\\' +\\r\\n            \\'                top\\' +\\r\\n            \\'                color=\"success\"\\' +\\r\\n            \\'                multi-line\\' +\\r\\n            \\'                timeout=\"3000\"\\' +\\r\\n            \\'                dismissible>\\' +\\r\\n            \\'      <v-icon color=\"accent\">done_all</v-icon>\\' +\\r\\n            \\'      Saved successfully :D\\' +\\r\\n            \\'\\' +\\r\\n            \\'      <v-btn color=\"transparent\" @click=\"snackbar = false\">\\' +\\r\\n            \\'        <v-icon color=\"accent\">close</v-icon>\\' +\\r\\n            \\'      </v-btn>\\' +\\r\\n            \\'    </v-snackbar>\\' +\\r\\n            \\'  </v-form>\\',\\r\\n        components,\\r\\n        data() {\\r\\n            return {\\r\\n                info: {},\\r\\n                renderArray: {},\\r\\n                values: {},\\r\\n                saving: false,\\r\\n                snackbar: false,\\r\\n                changed: 0,\\r\\n                registered: 0,\\r\\n            }\\r\\n        },\\r\\n\\r\\n        props: {\\r\\n            route: Object,\\r\\n            region: Object,\\r\\n        },\\r\\n\\r\\n        mounted: async function () {\\r\\n            await this.region.load();\\r\\n            this.info = this.region.regionRaw.info;\\r\\n\\r\\n            const values = await this.build();\\r\\n            this.renderArray = await this.region.regionRaw.build(this.region.module, values, this.$route.params);\\r\\n        },\\r\\n\\r\\n        methods: {\\r\\n\\r\\n            /**\\r\\n             *\\r\\n             */\\r\\n            build: async function () {\\r\\n                let values = {};\\r\\n\\r\\n                try {\\r\\n                    values = await this.region.fileSystem.readJSON(`${this.region.module.path}values/form.${this.info.id}.json`);\\r\\n                    console.log(`${this.region.module.path}values/form.${this.info.id}.json`)\\r\\n                } catch (error) {\\r\\n                    await this.region.fileSystem.write(`${this.region.module.path}values/form.${this.info.id}.json`, JSON.stringify({}));\\r\\n\\r\\n                    /*\\r\\n                     * At this point we know that there is nothing in the fileSystem about this file.\\r\\n                     * So it\\'s ok to set value empty.\\r\\n                     */\\r\\n                    values = {};\\r\\n                }\\r\\n\\r\\n                if (values === undefined) return {};\\r\\n                return values;\\r\\n            },\\r\\n\\r\\n            validate: async function () {\\r\\n\\r\\n            },\\r\\n\\r\\n            submit: async function () {\\r\\n                this.saving = true;\\r\\n\\r\\n                await this.save(this.$route.params);\\r\\n\\r\\n                //console.log(this.values)\\r\\n                this.saving = false;\\r\\n                this.snackbar = true;\\r\\n            },\\r\\n\\r\\n            /**\\r\\n             *\\r\\n             * @param values\\r\\n             */\\r\\n            save: async function (values) {\\r\\n\\r\\n                console.debug(\\'values - 1\\', values);\\r\\n                values = await this.region.regionRaw.submit(this.route.module, values);\\r\\n                console.debug(\\'values - 2\\', values);\\r\\n\\r\\n                if (\\'save\\' in this.info && this.info.save !== false) {\\r\\n                    //await this.region.fileSystem.write(`${this.router.module.path}values/form.${this.info.id}.json`, JSON.stringify(values));\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    };\\r\\n};');\n        await this.fileSystem.write('/modules/core/src/regions/form/EditImage.js', 'const Settings = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    \"info\": {\\r\\n        \"title\": \"Edit Sound\",\\r\\n        \"description\": \"This page is used to contain a big element wich\",\\r\\n        \"id\": \"image_edit\",\\r\\n        \"tab\": \"misc\",\\r\\n        \"location\": \"settings\",\\r\\n        \"submit\": false\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param {Module} Module\\r\\n     * @param {Object} values\\r\\n     * @param {Object} data\\r\\n     *\\r\\n     * @returns {{}}\\r\\n     */\\r\\n    \"build\": (Module, values, data) => {\\r\\n        let build = {};\\r\\n\\r\\n        build.image_upload = {\\r\\n            \\'#type\\': \\'image\\',\\r\\n            \\'#files\\': Module.fallback(data, \\'image_upload\\', []),\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile\\'\\r\\n            },\\r\\n        };\\r\\n\\r\\n        build.alter_tile = {\\r\\n            \\'#type\\': \\'redirect_button\\',\\r\\n            \\'#title\\': \\'cancel\\',\\r\\n            \\'#appendIcon\\': \\'clear\\',\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile\\'\\r\\n            },\\r\\n            \\'#block\\': true,\\r\\n            \\'#color\\': \\'red\\',\\r\\n            \\'#outlined\\': true\\r\\n        };\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n    validate: (Module, values) => {\\r\\n\\r\\n        /**\\r\\n         * Return key: value for error messages.\\r\\n         *\\r\\n         * key => Resembling the field id.\\r\\n         * value => Resembling the the error message.\\r\\n         */\\r\\n        return true;\\r\\n    },\\r\\n\\r\\n    submit: (Module, values) => {\\r\\n\\r\\n        // The submitted values of the user.\\r\\n        return values;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Settings;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/form/EditSound.js', 'const Settings = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    \"info\": {\\r\\n        \"title\": \"Edit Sound\",\\r\\n        \"description\": \"This page is used to contain a big element wich\",\\r\\n        \"id\": \"sound_edit\",\\r\\n        \"tab\": \"misc\",\\r\\n        \"location\": \"settings\",\\r\\n        \"submit\": false\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param {Module} Module\\r\\n     * @param {Object} values\\r\\n     * @param {Object} data\\r\\n     *\\r\\n     * @returns {{}}\\r\\n     */\\r\\n    \"build\": (Module, values, data) => {\\r\\n        let build = {};\\r\\n\\r\\n        build.sound_upload = {\\r\\n            \\'#type\\': \\'sound\\',\\r\\n            \\'#files\\': Module.fallback(data, \\'sound_upload\\', []),\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile\\'\\r\\n            },\\r\\n        };\\r\\n\\r\\n        build.alter_tile = {\\r\\n            \\'#type\\': \\'redirect_button\\',\\r\\n            \\'#title\\': \\'cancel\\',\\r\\n            \\'#appendIcon\\': \\'clear\\',\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile\\'\\r\\n            },\\r\\n            \\'#block\\': true,\\r\\n            \\'#color\\': \\'red\\',\\r\\n            \\'#outlined\\': true\\r\\n        };\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n    validate: (Module, values) => {\\r\\n\\r\\n        /**\\r\\n         * Return key: value for error messages.\\r\\n         *\\r\\n         * key => Resembling the field id.\\r\\n         * value => Resembling the the error message.\\r\\n         */\\r\\n        return true;\\r\\n    },\\r\\n\\r\\n    submit: (Module, values) => {\\r\\n\\r\\n        // The submitted values of the user.\\r\\n        return values;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Settings;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/form/Settings.js', 'const Settings = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    \"info\": {\\r\\n        \"title\": \"Tile Settings\",\\r\\n        \"description\": \"Configure your settings here.\",\\r\\n        \"id\": \"example_form\",\\r\\n        \"tab\": \"misc\",\\r\\n        \"location\": \"settings\"\\r\\n    },\\r\\n\\r\\n    \"build\": (Module, values, data) => {\\r\\n        let build = {};\\r\\n        build.two_column = {\\r\\n            \\'#type\\': \\'two_column\\',\\r\\n            \\'#first\\': {\\r\\n                tile: {\\r\\n                    \\'#type\\': \\'tile\\',\\r\\n                    \\'#title\\': \\'~tile_title\\',\\r\\n                    \\'#images\\': \\'~image_upload\\',\\r\\n                    \\'#sounds\\': \\'~sound_upload\\',\\r\\n                    \\'#classes\\': \\'~tile_style\\',\\r\\n                    \\'#backgroundColor\\': \\'~tile_color\\',\\r\\n                    \\'#textColor\\': Module.fallback(data, \\'text_color\\', \\'#000000\\'),\\r\\n                },\\r\\n            },\\r\\n            \\'#second\\': {\\r\\n                tile_color: {\\r\\n                    \\'#type\\': \\'colorpicker\\',\\r\\n                    \\'#title\\': \\'Color\\',\\r\\n                    \\'#hideModeSwitch\\': true,\\r\\n                    \\'#description\\': \\'This color will be the default color of the tile.\\',\\r\\n                    \\'#value\\': Module.fallback(data, \\'tile_color\\', \\'#32a852\\'),\\r\\n                }\\r\\n            },\\r\\n        };\\r\\n\\r\\n        build.tile_title = {\\r\\n            \\'#type\\': \\'textfield\\',\\r\\n            \\'#title\\': \\'Title\\',\\r\\n            \\'#description\\': \\'This is shown in the center of the tile.\\',\\r\\n            \\'#value\\': Module.fallback(data, \\'tile_title\\', \\'My sound!\\'),\\r\\n        };\\r\\n\\r\\n        build.tile_style = {\\r\\n            \\'#type\\': \\'dropdown\\',\\r\\n            \\'#title\\': \\'Tile Style\\',\\r\\n            \\'#description\\': \\'The style is used to make your tile look nice.\\',\\r\\n            \\'#value\\': Module.fallback(values, \\'tile_style\\', Module.fallback(data, \\'tile_style\\', [\\'default\\'])),\\r\\n            \\'#items\\': [\\r\\n                {\\r\\n                    \\'text\\': \\'Default\\',\\r\\n                    \\'value\\': [\\'default\\']\\r\\n                },\\r\\n                {\\r\\n                    \\'text\\': \\'Image Background\\',\\r\\n                    \\'value\\': [\\'image\\']\\r\\n                },\\r\\n                {\\r\\n                    \\'text\\': \\'Horizontal 50/50\\',\\r\\n                    \\'value\\': [\\'horizontal-50-50\\']\\r\\n                },\\r\\n                {\\r\\n                    \\'text\\': \\'Vertical 50/50\\',\\r\\n                    \\'value\\': [\\'vertical-50-50\\']\\r\\n                },\\r\\n            ]\\r\\n        }\\r\\n\\r\\n        build.alter_text = {\\r\\n            \\'#type\\': \\'redirect_button\\',\\r\\n            \\'#title\\': \\'Customize Text\\',\\r\\n            \\'#appendIcon\\': \\'text_format\\',\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile.text\\'\\r\\n            },\\r\\n            \\'#block\\': true,\\r\\n            \\'#color\\': \\'info\\',\\r\\n            \\'#outlined\\': true\\r\\n        };\\r\\n\\r\\n        build.advanced_settings = {\\r\\n            \\'#type\\': \\'accordion\\',\\r\\n            \\'#panels\\': [\\r\\n                {\\r\\n                    \\'#title\\': \\'Sound\\',\\r\\n                    \\'#content\\': {\\r\\n                        paragraph: {\\r\\n                            \\'#type\\': \\'paragraph\\',\\r\\n                            \\'#flat\\': true,\\r\\n                            \\'#title\\': \\'Description\\',\\r\\n                            \\'#description\\': \\'This is very cool\\',\\r\\n                            \\'#value\\': \\'Add your sound file, so we can start to edit :D\\'\\r\\n                        },\\r\\n                        sound_upload: {\\r\\n                            \\'#type\\': \\'upload\\',\\r\\n                            \\'#title\\': \\'Sound File\\',\\r\\n                            \\'#description\\': \\'Select your sound file.\\',\\r\\n                            \\'#value\\': Module.fallback(values, \\'sound_upload\\', Module.fallback(data, \\'sound_upload\\', [])),\\r\\n                        },\\r\\n                        sound_upload_edit: {\\r\\n                            \\'#type\\': \\'redirect_button\\',\\r\\n                            \\'#title\\': \\'Edit audio file\\',\\r\\n                            \\'#appendIcon\\': \\'audiotrack\\',\\r\\n                            \\'#vif\\': \\'~sound_upload\\',\\r\\n                            \\'#to\\': {\\r\\n                                name: \\'core.sound\\'\\r\\n                            },\\r\\n                            \\'#block\\': true,\\r\\n                            \\'#color\\': \\'info\\',\\r\\n                            \\'#outlined\\': true\\r\\n                        }\\r\\n                    }\\r\\n                },\\r\\n                {\\r\\n                    \\'#title\\': \\'Image\\',\\r\\n                    \\'#content\\': {\\r\\n                        image_upload: {\\r\\n                            \\'#type\\': \\'upload\\',\\r\\n                            \\'#title\\': \\'Image File\\',\\r\\n                            \\'#description\\': \\'Select your sound file.\\',\\r\\n                            \\'#persistentHint\\': true,\\r\\n                            \\'#value\\': Module.fallback(values, \\'image_upload\\', Module.fallback(data, \\'image_upload\\', [])),\\r\\n                        },\\r\\n\\r\\n                        image_upload_edit: {\\r\\n                            \\'#type\\': \\'redirect_button\\',\\r\\n                            \\'#title\\': \\'Edit image file\\',\\r\\n                            \\'#appendIcon\\': \\'crop_original\\',\\r\\n                            \\'#vif\\': \\'~image_upload\\',\\r\\n                            \\'#to\\': {\\r\\n                                name: \\'add.tile.image\\'\\r\\n                            },\\r\\n                            \\'#show\\': false,\\r\\n                            \\'#block\\': true,\\r\\n                            \\'#color\\': \\'info\\',\\r\\n                            \\'#outlined\\': true\\r\\n                        },\\r\\n                    }\\r\\n                },\\r\\n            ],\\r\\n        };\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n    validate: (Module, values) => {\\r\\n\\r\\n        /**\\r\\n         * Return key: value for error messages.\\r\\n         *\\r\\n         * key => Resembling the field id.\\r\\n         * value => Resembling the the error message.\\r\\n         */\\r\\n        return true;\\r\\n    },\\r\\n\\r\\n    submit: (Module, values) => {\\r\\n\\r\\n        // The submitted values of the user.\\r\\n        return values;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Settings;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/form/tile/AddTile.js', 'const Settings = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    \"info\": {\\r\\n        \"title\": \"Tile Settings\",\\r\\n        \"description\": \"Configure your settings here.\",\\r\\n        \"id\": \"example_form\",\\r\\n        \"tab\": \"misc\",\\r\\n        \"location\": \"settings\",\\r\\n        \"save\": false,\\r\\n    },\\r\\n\\r\\n    \"build\": (Module, values, data) => {\\r\\n        let build = {};\\r\\n        build.two_column = {\\r\\n            \\'#type\\': \\'two_column\\',\\r\\n            \\'#first\\': {\\r\\n                tile: {\\r\\n                    \\'#type\\': \\'tile\\',\\r\\n                    \\'#title\\': \\'~tile_title\\',\\r\\n                    \\'#images\\': \\'~image_upload\\',\\r\\n                    \\'#sounds\\': \\'~sound_upload\\',\\r\\n                    \\'#classes\\': \\'~tile_style\\',\\r\\n                    \\'#backgroundColor\\': \\'~tile_color\\',\\r\\n                    \\'#textColor\\': Module.fallback(data, \\'text_color\\', \\'#000000\\'),\\r\\n                },\\r\\n            },\\r\\n            \\'#second\\': {\\r\\n                tile_color: {\\r\\n                    \\'#type\\': \\'colorpicker\\',\\r\\n                    \\'#title\\': \\'Color\\',\\r\\n                    \\'#hideModeSwitch\\': true,\\r\\n                    \\'#description\\': \\'This color will be the default color of the tile.\\',\\r\\n                    \\'#value\\': Module.fallback(data, \\'tile_color\\', \\'#32a852\\'),\\r\\n                }\\r\\n            },\\r\\n        };\\r\\n\\r\\n        build.tile_title = {\\r\\n            \\'#type\\': \\'textfield\\',\\r\\n            \\'#title\\': \\'Title\\',\\r\\n            \\'#description\\': \\'This is shown in the center of the tile.\\',\\r\\n            \\'#value\\': Module.fallback(data, \\'tile_title\\', \\'My sound!\\'),\\r\\n        };\\r\\n\\r\\n        build.tile_style = {\\r\\n            \\'#type\\': \\'dropdown\\',\\r\\n            \\'#title\\': \\'Tile Style\\',\\r\\n            \\'#description\\': \\'The style is used to make your tile look nice.\\',\\r\\n            \\'#value\\': Module.fallback(values, \\'tile_style\\', Module.fallback(data, \\'tile_style\\', [\\'default\\'])),\\r\\n            \\'#items\\': [\\r\\n                {\\r\\n                    \\'text\\': \\'Default\\',\\r\\n                    \\'value\\': [\\'default\\']\\r\\n                },\\r\\n                {\\r\\n                    \\'text\\': \\'Image Background\\',\\r\\n                    \\'value\\': [\\'image\\']\\r\\n                },\\r\\n                {\\r\\n                    \\'text\\': \\'Horizontal 50/50\\',\\r\\n                    \\'value\\': [\\'horizontal-50-50\\']\\r\\n                },\\r\\n                {\\r\\n                    \\'text\\': \\'Vertical 50/50\\',\\r\\n                    \\'value\\': [\\'vertical-50-50\\']\\r\\n                },\\r\\n            ]\\r\\n        }\\r\\n\\r\\n        build.alter_text = {\\r\\n            \\'#type\\': \\'redirect_button\\',\\r\\n            \\'#title\\': \\'Customize Text\\',\\r\\n            \\'#appendIcon\\': \\'text_format\\',\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile.text\\'\\r\\n            },\\r\\n            \\'#block\\': true,\\r\\n            \\'#color\\': \\'info\\',\\r\\n            \\'#outlined\\': true\\r\\n        };\\r\\n\\r\\n        build.advanced_settings = {\\r\\n            \\'#type\\': \\'accordion\\',\\r\\n            \\'#panels\\': [\\r\\n                {\\r\\n                    \\'#title\\': \\'Sound\\',\\r\\n                    \\'#content\\': {\\r\\n                        paragraph: {\\r\\n                            \\'#type\\': \\'paragraph\\',\\r\\n                            \\'#flat\\': true,\\r\\n                            \\'#title\\': \\'Description\\',\\r\\n                            \\'#description\\': \\'This is very cool\\',\\r\\n                            \\'#value\\': \\'Add your sound file, so we can start to edit :D\\'\\r\\n                        },\\r\\n                        sound_upload: {\\r\\n                            \\'#type\\': \\'upload\\',\\r\\n                            \\'#title\\': \\'Sound File\\',\\r\\n                            \\'#description\\': \\'Select your sound file.\\',\\r\\n                            \\'#value\\': Module.fallback(values, \\'sound_upload\\', Module.fallback(data, \\'sound_upload\\', [])),\\r\\n                        },\\r\\n                        sound_upload_edit: {\\r\\n                            \\'#type\\': \\'redirect_button\\',\\r\\n                            \\'#title\\': \\'Edit audio file\\',\\r\\n                            \\'#appendIcon\\': \\'audiotrack\\',\\r\\n                            \\'#vif\\': \\'~sound_upload\\',\\r\\n                            \\'#to\\': {\\r\\n                                name: \\'core.sound\\'\\r\\n                            },\\r\\n                            \\'#block\\': true,\\r\\n                            \\'#color\\': \\'info\\',\\r\\n                            \\'#outlined\\': true\\r\\n                        }\\r\\n                    }\\r\\n                },\\r\\n                {\\r\\n                    \\'#title\\': \\'Image\\',\\r\\n                    \\'#content\\': {\\r\\n                        image_upload: {\\r\\n                            \\'#type\\': \\'upload\\',\\r\\n                            \\'#title\\': \\'Image File\\',\\r\\n                            \\'#description\\': \\'Select your sound file.\\',\\r\\n                            \\'#persistentHint\\': true,\\r\\n                            \\'#value\\': Module.fallback(values, \\'image_upload\\', Module.fallback(data, \\'image_upload\\', [])),\\r\\n                        },\\r\\n\\r\\n                        image_upload_edit: {\\r\\n                            \\'#type\\': \\'redirect_button\\',\\r\\n                            \\'#title\\': \\'Edit image file\\',\\r\\n                            \\'#appendIcon\\': \\'crop_original\\',\\r\\n                            \\'#vif\\': \\'~image_upload\\',\\r\\n                            \\'#to\\': {\\r\\n                                name: \\'add.tile.image\\'\\r\\n                            },\\r\\n                            \\'#show\\': false,\\r\\n                            \\'#block\\': true,\\r\\n                            \\'#color\\': \\'info\\',\\r\\n                            \\'#outlined\\': true\\r\\n                        },\\r\\n                    }\\r\\n                },\\r\\n            ],\\r\\n        };\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n    validate: (Module, values) => {\\r\\n\\r\\n        /**\\r\\n         * Return key: value for error messages.\\r\\n         *\\r\\n         * key => Resembling the field id.\\r\\n         * value => Resembling the the error message.\\r\\n         */\\r\\n        return true;\\r\\n    },\\r\\n\\r\\n    submit: async (Module, values) => {\\r\\n        const prefix = \\'/soundboard\\';\\r\\n        const path = `${prefix}${values.path}`;\\r\\n        const file_name = Date.now();\\r\\n\\r\\n        /** @var images {Array<File>} */\\r\\n        const images = Module.fallback(values, \\'image_upload\\', false);\\r\\n        if (images !== false) {\\r\\n            for (let i = 0; i < images; i++) {\\r\\n\\r\\n                /** @var image {File} */\\r\\n                const image = images[i];\\r\\n\\r\\n                const blob = new Blob([image], {\\r\\n                    type: image.mimeType\\r\\n                });\\r\\n\\r\\n                console.log(image.filename)\\r\\n                await Module.fileSystem.write(`${path}files/${file_name}_${image.filename}`, blob);\\r\\n            }\\r\\n        }\\r\\n\\r\\n\\r\\n        await Module.fileSystem.write(`${path}${file_name}.json`, JSON.stringify(values))\\r\\n\\r\\n        // The submitted values of the user.\\r\\n        return values;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Settings;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/form/tile/TileText.js', 'const Form = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    \"info\": {\\r\\n        \"title\": \"TEXT SETTINGS\",\\r\\n        \"description\": \"All you want in your text shall be here.\",\\r\\n        \"id\": \"tile_text\",\\r\\n        \"location\": \"settings\",\\r\\n        \"submit\": false,\\r\\n    },\\r\\n\\r\\n    \"build\": (Module, values, data) => {\\r\\n        let build = {};\\r\\n\\r\\n        build.text = {\\r\\n            \\'#type\\': \\'paragraph\\',\\r\\n            \\'#value\\': Module.fallback(data, \\'tile_title\\', \\'Lorem ipsum dolor sit amet\\'),\\r\\n            \\'#textColor\\': \\'~text_color\\',\\r\\n        };\\r\\n\\r\\n        build.text_color = {\\r\\n            \\'#type\\': \\'colorpicker\\',\\r\\n            \\'#title\\': \\'Color\\',\\r\\n            \\'#classCSS\\': [\\'mt-3\\', \\'mb-3\\'],\\r\\n            \\'#hideModeSwitch\\': true,\\r\\n            \\'#description\\': \\'This color will be the default color of the tile.\\',\\r\\n            \\'#value\\': Module.fallback(data, \\'text_color\\', \\'#32a852\\'),\\r\\n        }\\r\\n\\r\\n        build.alter_text = {\\r\\n            \\'#type\\': \\'redirect_button\\',\\r\\n            \\'#title\\': \\'Confirm\\',\\r\\n            \\'#prependIcon\\': \\'exit_to_app\\',\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile\\'\\r\\n            },\\r\\n            \\'#color\\': \\'green\\',\\r\\n            \\'#outlined\\': true,\\r\\n            \\'#block\\': true\\r\\n        };\\r\\n\\r\\n\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n    validate: (Module, values) => {\\r\\n\\r\\n        /**\\r\\n         * Return key: value for error messages.\\r\\n         *\\r\\n         * key => Resembling the field id.\\r\\n         * value => Resembling the the error message.\\r\\n         */\\r\\n        return true;\\r\\n    },\\r\\n\\r\\n    submit: (Module, values) => {\\r\\n\\r\\n        // The submitted values of the user.\\r\\n        return values;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Form;\\r\\n})();');\n        await this.fileSystem.write('/modules/core/src/regions/form/TileTemplates.js', 'const Settings = {\\r\\n\\r\\n    /**\\r\\n     * @type {Object}\\r\\n     * @description This holds information about the form.\\r\\n     */\\r\\n    \"info\": {\\r\\n        \"title\": \"Tile Templates\",\\r\\n        \"description\": \"Find and choose the tile templates you want to use.\",\\r\\n        \"id\": \"tile_templates\",\\r\\n        \"tab\": \"misc\",\\r\\n        \"location\": \"settings\",\\r\\n        \"submit\": false\\r\\n    },\\r\\n\\r\\n    /**\\r\\n     *\\r\\n     * @param {Module} Module\\r\\n     * @param {Object} values\\r\\n     * @param {Object} data\\r\\n     *\\r\\n     * @returns {{}}\\r\\n     */\\r\\n    \"build\": (Module, values, data) => {\\r\\n        let build = {};\\r\\n\\r\\n        build.title = {\\r\\n            \\'#type\\': \\'headline\\',\\r\\n            \\'#title\\': \\'Tile Templates\\',\\r\\n        };\\r\\n\\r\\n        build.tile_column = {\\r\\n            \\'#type\\': \\'one_column\\',\\r\\n            \\'#content\\': {\\r\\n                add_tile: {\\r\\n                    \\'#type\\': \\'tile_template\\',\\r\\n                    \\'#title\\': \\'Tile\\',\\r\\n                    \\'#to\\': {\\r\\n                        name: \\'add.tile\\',\\r\\n                        params: {\\r\\n                            tile_title: \"\",\\r\\n                            path: data.path,\\r\\n                        }\\r\\n                    },\\r\\n                    \\'#color\\': \\'info\\'\\r\\n                }\\r\\n            },\\r\\n        };\\r\\n\\r\\n        build.board = {\\r\\n            \\'#type\\': \\'headline\\',\\r\\n            \\'#title\\': \\'Board Templates\\',\\r\\n        };\\r\\n\\r\\n        build.add_board = {\\r\\n            \\'#type\\': \\'tile_template\\',\\r\\n            \\'#title\\': \\'Board\\',\\r\\n            \\'#to\\': {\\r\\n                name: \\'add.tile\\'\\r\\n            },\\r\\n            \\'#color\\': \\'info\\'\\r\\n        };\\r\\n\\r\\n        return build;\\r\\n    },\\r\\n    validate: (Module, values) => {\\r\\n\\r\\n        /**\\r\\n         * Return key: value for error messages.\\r\\n         *\\r\\n         * key => Resembling the field id.\\r\\n         * value => Resembling the the error message.\\r\\n         */\\r\\n        return true;\\r\\n    },\\r\\n\\r\\n    submit: (Module, values) => {\\r\\n\\r\\n        // The submitted values of the user.\\r\\n        return values;\\r\\n    },\\r\\n};\\r\\n\\r\\n(() => {\\r\\n    return Settings;\\r\\n})();');\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9JbnN0YWxsZXIuanM/ZDA5YiJdLCJuYW1lcyI6WyJJbnN0YWxsZXIiLCJDb25zb2xlIiwiY29uc3RydWN0b3IiLCJmaWxlU3lzdGVtIiwiaW5zdGFsbCIsIndyaXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNlLE1BQU1BLFNBQU4sU0FBd0JDLGdEQUF4QixDQUFnQztBQUMzQ0MsZ0JBQVlDLFVBQVosRUFBd0I7QUFDcEIsY0FBTUEsVUFBTjtBQUNIO0FBQ0QsVUFBTUMsT0FBTixHQUFnQjtBQUNaLGNBQU0sS0FBS0QsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0Isb0NBQXRCLEVBQTRELDRoSUFBNUQsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsOEJBQXRCLEVBQXNELHdOQUF0RCxDQUFOO0FBQ0EsY0FBTSxLQUFLRixVQUFMLENBQWdCRSxLQUFoQixDQUFzQixpQ0FBdEIsRUFBeUQsMjJGQUF6RCxDQUFOO0FBQ0EsY0FBTSxLQUFLRixVQUFMLENBQWdCRSxLQUFoQixDQUFzQiwyQ0FBdEIsRUFBbUUsKzFIQUFuRSxDQUFOO0FBQ0EsY0FBTSxLQUFLRixVQUFMLENBQWdCRSxLQUFoQixDQUFzQixnREFBdEIsRUFBd0UsK1NBQXhFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDJDQUF0QixFQUFtRSwrU0FBbkUsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsMENBQXRCLEVBQWtFLGdhQUFsRSxDQUFOO0FBQ0EsY0FBTSxLQUFLRixVQUFMLENBQWdCRSxLQUFoQixDQUFzQix3REFBdEIsRUFBZ0Ysc0dBQWhGLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHdEQUF0QixFQUFnRixvVEFBaEYsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsbURBQXRCLEVBQTJFLGtqR0FBM0UsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsbURBQXRCLEVBQTJFLGc3R0FBM0UsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0Isc0NBQXRCLEVBQThELDRySEFBOUQsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IscUNBQXRCLEVBQTZELHFvSEFBN0QsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0Isc0NBQXRCLEVBQThELCs3S0FBOUQsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsMkNBQXRCLEVBQW1FLDJyR0FBbkUsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsMkNBQXRCLEVBQW1FLDR4QkFBbkUsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsZ0RBQXRCLEVBQXdFLG90QkFBeEUsQ0FBTjtBQUNBLGNBQU0sS0FBS0YsVUFBTCxDQUFnQkUsS0FBaEIsQ0FBc0IsMENBQXRCLEVBQWtFLDJMQUFsRSxDQUFOO0FBQ0EsY0FBTSxLQUFLRixVQUFMLENBQWdCRSxLQUFoQixDQUFzQiw4Q0FBdEIsRUFBc0UsNHhCQUF0RSxDQUFOO0FBQ0EsY0FBTSxLQUFLRixVQUFMLENBQWdCRSxLQUFoQixDQUFzQiwwQ0FBdEIsRUFBa0UsNlZBQWxFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDJDQUF0QixFQUFtRSw2bkJBQW5FLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDZDQUF0QixFQUFxRSxncEJBQXJFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDhDQUF0QixFQUFzRSx3eUJBQXRFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHlDQUF0QixFQUFpRSx1cERBQWpFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDJDQUF0QixFQUFtRSxtcExBQW5FLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHlEQUF0QixFQUFpRiw4c0pBQWpGLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHdEQUF0QixFQUFnRiwwZ0tBQWhGLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHdDQUF0QixFQUFnRSwwdVBBQWhFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHdDQUF0QixFQUFnRSxxdkRBQWhFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHFDQUF0QixFQUE2RCx3aUlBQTdELENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHlDQUF0QixFQUFpRSxxcEdBQWpFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDhDQUF0QixFQUFzRSxxelBBQXRFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHFDQUF0QixFQUE2RCxzNWNBQTdELENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHNDQUF0QixFQUE4RCwrL0RBQTlELENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHdDQUF0QixFQUFnRSw2akhBQWhFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHlDQUF0QixFQUFpRSxvcUZBQWpFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHNDQUF0QixFQUE4RCxvNU1BQTlELENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLHNDQUF0QixFQUE4RCxrNkNBQTlELENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDRDQUF0QixFQUFvRSwwL0RBQXBFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDhDQUF0QixFQUFzRSwycENBQXRFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLG1DQUF0QixFQUEyRCxzbUtBQTNELENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDZDQUF0QixFQUFxRSx1c0RBQXJFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDZDQUF0QixFQUFxRSx1c0RBQXJFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLDRDQUF0QixFQUFvRSwyN01BQXBFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLGdEQUF0QixFQUF3RSx3eU9BQXhFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLGlEQUF0QixFQUF5RSwyNERBQXpFLENBQU47QUFDQSxjQUFNLEtBQUtGLFVBQUwsQ0FBZ0JFLEtBQWhCLENBQXNCLGlEQUF0QixFQUF5RSxrdEVBQXpFLENBQU47QUFDSDtBQXBEMEMiLCJmaWxlIjoiLi4vY29tbW9uL2xpYi9JbnN0YWxsZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi9Db25zb2xlXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEluc3RhbGxlciBleHRlbmRzIENvbnNvbGUge1xyXG4gICAgY29uc3RydWN0b3IoZmlsZVN5c3RlbSkge1xyXG4gICAgICAgIHN1cGVyKGZpbGVTeXN0ZW0pO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgaW5zdGFsbCgpIHtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvY29yZS5jb21wb25lbnRzLmpzb24nLCAne1xcclxcbiAgXCJyZWdpb25zXCI6IHtcXHJcXG4gICAgXCJjb250ZW50XCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiQ29udGVudFwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJJcyB1c2VkIHRvIGRpc3BsYXkgZGF0YS5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvcmVnaW9ucy9Db250ZW50LmpzXCJcXHJcXG4gICAgfSxcXHJcXG4gICAgXCJmb3JtXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiRm9ybVwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJJcyB1c2VkIHRvIGFsdGVyIGRhdGEuXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL3JlZ2lvbnMvRm9ybS5qc1wiXFxyXFxuICAgIH1cXHJcXG4gIH0sXFxyXFxuICBcImNvbnRhaW5lcnNcIjoge1xcclxcbiAgICBcImFjY29yZGlvblwiOiB7XFxyXFxuICAgICAgXCJ0aXRsZVwiOiBcIkFjY29yZGlvblwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIGNvbnRhaW5zIGVsZW1lbnRzIGluIGEgc3BlY2lmaWMgYXJyYW5nZW1lbnQuXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2NvbnRhaW5lcnMvQWNjb3JkaW9uLmpzXCJcXHJcXG4gICAgfSxcXHJcXG4gICAgXCJsaXN0XCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiTGlzdFwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIGNvbnRhaW5zIGVsZW1lbnRzIGluIGEgc3BlY2lmaWMgYXJyYW5nZW1lbnQuXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2NvbnRhaW5lcnMvTGlzdC5qc1wiXFxyXFxuICAgIH0sXFxyXFxuICAgIFwidGFiXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiVGFiXCIsXFxyXFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkFuIGVsZW1lbnQgd2hpY2ggY29udGFpbnMgZWxlbWVudHMgaW4gYSBzcGVjaWZpYyBhcnJhbmdlbWVudC5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvY29udGFpbmVycy9UYWIuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcInR3b19jb2x1bW5cIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJUd28gQ29sdW1uXCIsXFxyXFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkFuIGVsZW1lbnQgd2hpY2ggZW5hYmxlcyB0byBzcGxpdCBjb250ZW50IG9uIHRoZSBsZWZ0IGFuZCBjb250ZW50IG9uIHRoZSByaWdodC5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvY29udGFpbmVycy9sYXlvdXRzL1R3b0NvbHVtbi5qc1wiXFxyXFxuICAgIH0sXFxyXFxuICAgIFwib25lX2NvbHVtblwiOiB7XFxyXFxuICAgICAgXCJ0aXRsZVwiOiBcIk9uZSBDb2x1bW5cIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQW4gZWxlbWVudCB3aGljaCBlbmFibGVzIHRvIHNwbGl0IGNvbnRlbnQgb24gdGhlIGxlZnQgYW5kIGNvbnRlbnQgb24gdGhlIHJpZ2h0LlwiLFxcclxcbiAgICAgIFwicGF0aFwiOiBcInNyYy9jb250YWluZXJzL2xheW91dHMvT25lQ29sdW1uLmpzXCJcXHJcXG4gICAgfSxcXHJcXG4gICAgXCJhZGQtdGlsZS1idXR0b25cIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJBZGQgVGlsZSBCdXR0b25cIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQW4gZWxlbWVudCB3aGljaCBlbmFibGVzIHRoZSB1c2VyIHRvIHVwbG9hZCBmaWxlcy5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvY3VzdG9tL3RpbGUvQWRkVGlsZUJ1dHRvbi5qc1wiXFxyXFxuICAgIH1cXHJcXG4gIH0sXFxyXFxuICBcImVsZW1lbnRzXCI6IHtcXHJcXG4gICAgXCJ0aWxlXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiVGlsZVwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJEaXNwbGF5cyB0aGUgdGlsZS5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvY3VzdG9tL1RpbGUuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcInRleHRmaWVsZFwiOiB7XFxyXFxuICAgICAgXCJ0aXRsZVwiOiBcIlRleHRmaWVsZFwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIGNoYW5nZXMgaW5mb3JtYXRpb24uXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2VsZW1lbnRzL1RleHRmaWVsZC5qc1wiXFxyXFxuICAgIH0sXFxyXFxuICAgIFwiYnV0dG9uXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiQnV0dG9uXCIsXFxyXFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkFuIGVsZW1lbnQgd2hpY2ggY2hhbmdlcyBpbmZvcm1hdGlvbi5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvQnV0dG9uLmpzXCJcXHJcXG4gICAgfSxcXHJcXG4gICAgXCJyZWRpcmVjdF9idXR0b25cIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJSZWRpcmVjdCBCdXR0b25cIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiVGhpcyBidXR0b24gdGFrZXMgYWxsIGN1cnJlbnQgd29yayBhbmQgcmVkaXJlY3RzIHRoZSB1c2VyIGFuZCB0aGUgY29udGVudCB0aGUgdXNlciBlZGl0ZWQuXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2VsZW1lbnRzL1JlZGlyZWN0QnV0dG9uLmpzXCJcXHJcXG4gICAgfSxcXHJcXG4gICAgXCJ0ZXh0YXJlYVwiOiB7XFxyXFxuICAgICAgXCJ0aXRsZVwiOiBcIlRleHRhcmVhXCIsXFxyXFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkFuIGVsZW1lbnQgd2hpY2ggY2hhbmdlcyBpbmZvcm1hdGlvbi5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvVGV4dGFyZWEuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcImNvbG9ycGlja2VyXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiQ29sb3IgUGlja2VyXCIsXFxyXFxuICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkFuIGVsZW1lbnQgd2hpY2ggY2hhbmdlcyBpbmZvcm1hdGlvbi5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvQ29sb3JwaWNrZXIuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcInN3aXRjaFwiOiB7XFxyXFxuICAgICAgXCJ0aXRsZVwiOiBcIlN3aXRjaFwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIGNoYW5nZXMgaW5mb3JtYXRpb24uXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2VsZW1lbnRzL1N3aXRjaC5qc1wiXFxyXFxuICAgIH0sXFxyXFxuICAgIFwiaGVhZGxpbmVcIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJIZWFkbGluZVwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIHNob3VsZCByZXNlbWJsZSB0aGUgaGVhZGxpbmUuXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2VsZW1lbnRzL0hlYWRsaW5lLmpzXCJcXHJcXG4gICAgfSxcXHJcXG4gICAgXCJwYXJhZ3JhcGhcIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJQYXJhZ3JhcGhcIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQW4gZWxlbWVudCB3aGljaCBzaG91bGQgcmVzZW1ibGUgYSBwYXJhZ3JhcGguXCIsXFxyXFxuICAgICAgXCJwYXRoXCI6IFwic3JjL2VsZW1lbnRzL1BhcmFncmFwaC5qc1wiXFxyXFxuICAgIH0sXFxyXFxuICAgIFwiZHJvcGRvd25cIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJEcm9wZG93blwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIHNob3VsZCByZXNlbWJsZSBhIHBhcmFncmFwaC5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvRHJvcGRvd24uanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcInVwbG9hZFwiOiB7XFxyXFxuICAgICAgXCJ0aXRsZVwiOiBcIlVwbG9hZFwiLFxcclxcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJBbiBlbGVtZW50IHdoaWNoIGVuYWJsZXMgdGhlIHVzZXIgdG8gdXBsb2FkIGZpbGVzLlwiLFxcclxcbiAgICAgIFwicGF0aFwiOiBcInNyYy9lbGVtZW50cy9VcGxvYWQuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcInNvdW5kXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiU291bmRcIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQW4gZWxlbWVudCB3aGljaCBlbmFibGVzIHRoZSB1c2VyIHRvIHVwbG9hZCBmaWxlcy5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvU291bmQuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcImltYWdlXCI6IHtcXHJcXG4gICAgICBcInRpdGxlXCI6IFwiSW1hZ2VcIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQW4gZWxlbWVudCB3aGljaCBlbmFibGVzIHRoZSB1c2VyIHRvIHVwbG9hZCBmaWxlcy5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvSW1hZ2UuanNcIlxcclxcbiAgICB9LFxcclxcbiAgICBcInRpbGVfdGVtcGxhdGVcIjoge1xcclxcbiAgICAgIFwidGl0bGVcIjogXCJUaWxlVGVtcGxhdGVcIixcXHJcXG4gICAgICBcImRlc2NyaXB0aW9uXCI6IFwiQW4gZWxlbWVudCB3aGljaCBlbmFibGVzIHRoZSB1c2VyIHRvIHVwbG9hZCBmaWxlcy5cIixcXHJcXG4gICAgICBcInBhdGhcIjogXCJzcmMvZWxlbWVudHMvY3VzdG9tL3RpbGUvVGlsZVRlbXBsYXRlLmpzXCJcXHJcXG4gICAgfVxcclxcbiAgfVxcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvY29yZS5pbmZvLmpzb24nLCAne1xcclxcbiAgXCJuYW1lXCI6IFwiS2xpY2tiYWl0IC0gTXltb2R1bGVcIixcXHJcXG4gIFwiZGVzY3JpcHRpb25cIjogXCJUaGlzIG1vZHVsZSBpcyBzdXBwb3NlZCB0byBiZSBhbiBleGFtcGxlIG1vZHVsZS5cIixcXHJcXG4gIFwiZ3JvdXBcIjogXCJrbGlja2JhaXRcIixcXHJcXG4gIFwidHlwZVwiOiBcIm1vZHVsZVwiLFxcclxcbiAgXCJ2ZXJzaW9uXCI6IFwiMS4wLjBcIixcXHJcXG4gIFwiZGVwZW5kZW5jaWVzXCI6IFtdXFxyXFxufScpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9jb3JlLnJvdXRpbmcuanNvbicsICd7XFxyXFxuICBcImNvcmUuYm9hcmRcIjoge1xcclxcbiAgICBcInBhdGhcIjogXCIvY29yZS9ib2FyZFwiLFxcclxcbiAgICBcInRpdGxlXCI6IFwiQm9hcmRcIixcXHJcXG4gICAgXCJkZXNjcmlwdGlvblwiOiBcIkJvYXJkIHdoZXJlIHRoZSB0aWxlcyBhcmUgbG9jYXRlZCBhdC5cIixcXHJcXG4gICAgXCJoaWRlXCI6IGZhbHNlLFxcclxcbiAgICBcInJlZ2lvbnNcIjogW1xcclxcbiAgICAgIHtcXHJcXG4gICAgICAgIFwidHlwZVwiOiBcImNvbnRlbnRcIixcXHJcXG4gICAgICAgIFwidGl0bGVcIjogXCJUaWxlIGRpc3BsYXlcIixcXHJcXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJUaGlzIHBhcnQgZGlzcGxheXMgdGhlIGN1cnJlbnRseSBlZGl0ZWQgLyBhZGRlZCB0aWxlLlwiLFxcclxcbiAgICAgICAgXCJwYXRoXCI6IFwic3JjL3JlZ2lvbnMvY29udGVudC9Cb2FyZC5qc1wiLFxcclxcbiAgICAgICAgXCJpY29uXCI6IFwiaG9tZVwiXFxyXFxuICAgICAgfVxcclxcbiAgICBdXFxyXFxuICB9LFxcclxcbiAgXCJjb3JlLnNldHRpbmdzXCI6IHtcXHJcXG4gICAgXCJwYXRoXCI6IFwiL2NvcmUvc2V0dGluZ3NcIixcXHJcXG4gICAgXCJ0aXRsZVwiOiBcIlNldHRpbmdzXCIsXFxyXFxuICAgIFwiZGVzY3JpcHRpb25cIjogXCJEZWZhdWx0IHNldHRpbmdzXCIsXFxyXFxuICAgIFwiaGlkZVwiOiBmYWxzZSxcXHJcXG4gICAgXCJyZWdpb25zXCI6IFtcXHJcXG4gICAgICB7XFxyXFxuICAgICAgICBcInR5cGVcIjogXCJmb3JtXCIsXFxyXFxuICAgICAgICBcInRpdGxlXCI6IFwiVGlsZSBmb3JtXCIsXFxyXFxuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiRWRpdCAvIGFkZCBjdXJyZW50IHRpbGUuXCIsXFxyXFxuICAgICAgICBcInBhdGhcIjogXCJzcmMvcmVnaW9ucy9mb3JtL1NldHRpbmdzLmpzXCJcXHJcXG4gICAgICB9XFxyXFxuICAgIF1cXHJcXG4gIH0sXFxyXFxuICBcImNvcmUubW9kdWxlc1wiOiB7XFxyXFxuICAgIFwicGF0aFwiOiBcIi9jb3JlL21vZHVsZXNcIixcXHJcXG4gICAgXCJ0aXRsZVwiOiBcIk1vZHVsZXNcIixcXHJcXG4gICAgXCJkZXNjcmlwdGlvblwiOiBcIlRoaXMgZGlzcGxheXMgYWxsIG1vZHVsZXMuXCIsXFxyXFxuICAgIFwicmVnaW9uc1wiOiBbXFxyXFxuICAgICAge1xcclxcbiAgICAgICAgXCJ0eXBlXCI6IFwiY29udGVudFwiLFxcclxcbiAgICAgICAgXCJ0aXRsZVwiOiBcIlwiLFxcclxcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxcclxcbiAgICAgICAgXCJwYXRoXCI6IFwic3JjL3JlZ2lvbnMvY29udGVudC9Nb2R1bGVzLmpzXCJcXHJcXG4gICAgICB9XFxyXFxuICAgIF1cXHJcXG4gIH0sXFxyXFxuICBcInRpbGUudGVtcGxhdGVzXCI6IHtcXHJcXG4gICAgXCJwYXRoXCI6IFwiL3RpbGUvdGVtcGxhdGVzXCIsXFxyXFxuICAgIFwidGl0bGVcIjogXCJUZW1wbGF0ZXNcIixcXHJcXG4gICAgXCJkZXNjcmlwdGlvblwiOiBcIkhlcmUgeW91IGNob29zZSB5b3VyIHRpbGVzIGJlZm9yZSBhZGRpbmcgeW91ciBmaW5hbCBzdHVmZi5cIixcXHJcXG4gICAgXCJyZWdpb25zXCI6IFtcXHJcXG4gICAgICB7XFxyXFxuICAgICAgICBcInR5cGVcIjogXCJmb3JtXCIsXFxyXFxuICAgICAgICBcInRpdGxlXCI6IFwiXCIsXFxyXFxuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiXCIsXFxyXFxuICAgICAgICBcInBhdGhcIjogXCJzcmMvcmVnaW9ucy9mb3JtL1RpbGVUZW1wbGF0ZXMuanNcIlxcclxcbiAgICAgIH1cXHJcXG4gICAgXVxcclxcbiAgfSxcXHJcXG4gIFwiY29yZS5zb3VuZFwiOiB7XFxyXFxuICAgIFwicGF0aFwiOiBcIi90aWxlL3NvdW5kXCIsXFxyXFxuICAgIFwidGl0bGVcIjogXCJTb3VuZFwiLFxcclxcbiAgICBcImRlc2NyaXB0aW9uXCI6IFwiSGVyZSB5b3UgY2hvb3NlIHlvdXIgdGlsZXMgYmVmb3JlIGFkZGluZyB5b3VyIGZpbmFsIHN0dWZmLlwiLFxcclxcbiAgICBcInJlZ2lvbnNcIjogW1xcclxcbiAgICAgIHtcXHJcXG4gICAgICAgIFwidHlwZVwiOiBcImZvcm1cIixcXHJcXG4gICAgICAgIFwidGl0bGVcIjogXCJcIixcXHJcXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcXHJcXG4gICAgICAgIFwicGF0aFwiOiBcInNyYy9yZWdpb25zL2Zvcm0vRWRpdFNvdW5kLmpzXCJcXHJcXG4gICAgICB9XFxyXFxuICAgIF1cXHJcXG4gIH0sXFxyXFxuICBcImFkZC50aWxlLmltYWdlXCI6IHtcXHJcXG4gICAgXCJwYXRoXCI6IFwiL3RpbGUvaW1hZ2VcIixcXHJcXG4gICAgXCJ0aXRsZVwiOiBcIkltYWdlXCIsXFxyXFxuICAgIFwiZGVzY3JpcHRpb25cIjogXCJIZXJlIHlvdSBjaG9vc2UgeW91ciB0aWxlcyBiZWZvcmUgYWRkaW5nIHlvdXIgZmluYWwgc3R1ZmYuXCIsXFxyXFxuICAgIFwicmVnaW9uc1wiOiBbXFxyXFxuICAgICAge1xcclxcbiAgICAgICAgXCJ0eXBlXCI6IFwiZm9ybVwiLFxcclxcbiAgICAgICAgXCJ0aXRsZVwiOiBcIlwiLFxcclxcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIlwiLFxcclxcbiAgICAgICAgXCJwYXRoXCI6IFwic3JjL3JlZ2lvbnMvZm9ybS9FZGl0SW1hZ2UuanNcIlxcclxcbiAgICAgIH1cXHJcXG4gICAgXVxcclxcbiAgfSxcXHJcXG4gIFwiYWRkLnRpbGVcIjoge1xcclxcbiAgICBcInBhdGhcIjogXCIvYWRkL3RpbGVcIixcXHJcXG4gICAgXCJ0aXRsZVwiOiBcIkFkZCBUaWxlXCIsXFxyXFxuICAgIFwiZGVzY3JpcHRpb25cIjogXCJEZWZhdWx0IHNldHRpbmdzXCIsXFxyXFxuICAgIFwicmVnaW9uc1wiOiBbXFxyXFxuICAgICAge1xcclxcbiAgICAgICAgXCJ0eXBlXCI6IFwiZm9ybVwiLFxcclxcbiAgICAgICAgXCJ0aXRsZVwiOiBcIlRpbGUgZm9ybVwiLFxcclxcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkVkaXQgLyBhZGQgY3VycmVudCB0aWxlLlwiLFxcclxcbiAgICAgICAgXCJwYXRoXCI6IFwic3JjL3JlZ2lvbnMvZm9ybS90aWxlL0FkZFRpbGUuanNcIlxcclxcbiAgICAgIH1cXHJcXG4gICAgXVxcclxcbiAgfSxcXHJcXG4gIFwiYWRkLnRpbGUudGV4dFwiOiB7XFxyXFxuICAgIFwicGF0aFwiOiBcIi9hZGQvdGlsZS90ZXh0XCIsXFxyXFxuICAgIFwidGl0bGVcIjogXCJUaWxlIFRleHRcIixcXHJcXG4gICAgXCJkZXNjcmlwdGlvblwiOiBcIkhlcmUgeW91IGNob29zZSB0aGUgdGV4dCBzdHlsZSBmb3IgeW91ciB0aWxlLlwiLFxcclxcbiAgICBcInJlZ2lvbnNcIjogW1xcclxcbiAgICAgIHtcXHJcXG4gICAgICAgIFwidHlwZVwiOiBcImZvcm1cIixcXHJcXG4gICAgICAgIFwidGl0bGVcIjogXCJcIixcXHJcXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJcIixcXHJcXG4gICAgICAgIFwicGF0aFwiOiBcInNyYy9yZWdpb25zL2Zvcm0vdGlsZS9UaWxlVGV4dC5qc1wiXFxyXFxuICAgICAgfVxcclxcbiAgICBdXFxyXFxuICB9XFxyXFxufScpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvY29udGFpbmVycy9BY2NvcmRpb24uanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgZGF0YSA9IHdpbmRvdy5NYW5hZ2VyLmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5VHlwZShcXCdlbGVtZW50c1xcJyk7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudHMgPSB7fTtcXHJcXG5cXHJcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBkYXRhW2ldO1xcclxcbiAgICAgICAgY29tcG9uZW50c1tgYXMtJHtjb21wb25lbnQuaWR9YF0gPSBjb21wb25lbnQuZ2V0Q29tcG9uZW50KCk7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnUy1BY2NvcmRpb25cXCcsXFxyXFxuICAgICAgICBjb21wb25lbnRzLFxcclxcbiAgICAgICAgdGVtcGxhdGU6XFxyXFxuICAgICAgICAgICAgXFwnICA8di1leHBhbnNpb24tcGFuZWxzIDphY2NvcmRpb249XCJhY2NvcmRpb25cIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgICAgOnBvcG91dD1cInBvcG91dFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICA6aW5zZXQ9XCJpbnNldFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICA6bXVsdGlwbGU9XCJtdWx0aXBsZVwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICA6Zm9jdXNhYmxlPVwiZm9jdXNhYmxlXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD1cImRpc2FibGVkXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgIDpyZWFkb25seT1cInJlYWRvbmx5XCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgIDpmbGF0PVwiZmxhdFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICA6aG92ZXI9XCJob3ZlclwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICA6dGlsZT1cInRpbGVcIj5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LWV4cGFuc2lvbi1wYW5lbCB2LWZvcj1cIihwYW5lbCwga2V5KSBpbiBwYW5lbHNcIiA6a2V5PVwiYCR7a2V5fS1hY2NvcmRpb24tJHtwYW5lbHMubGVuZ3RofWBcIj5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj57eyBwYW5lbFtcXFxcXFwnI3RpdGxlXFxcXFxcJ10gfX08L3YtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50PlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDxjb21wb25lbnQgdi1mb3I9XCIocmVuZGVyRWxlbWVudCwgZWxlbWVudCkgaW4gcGFuZWxbXFxcXFxcJyNjb250ZW50XFxcXFxcJ11cIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgOmlzPVwiYGFzLSR7cmVuZGVyRWxlbWVudFtcXFxcXFwnI3R5cGVcXFxcXFwnXX1gXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgIDpyZW5kZXJFbGVtZW50PVwicmVuZGVyRWxlbWVudFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICA6ZWxlbWVudD1cImVsZW1lbnRcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgOmtleT1cImAke2VsZW1lbnR9LiR7Y2hhbmdlZH1gXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgIDpyZWdpb249XCJyZWdpb25cIi8+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDwvdi1leHBhbnNpb24tcGFuZWwtY29udGVudD5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDwvdi1leHBhbnNpb24tcGFuZWw+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgPC92LWV4cGFuc2lvbi1wYW5lbHM+XFwnLFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgICAgICAgcmVnaW9uOiBPYmplY3RcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHBhbmVsczoge30sXFxyXFxuICAgICAgICAgICAgICAgIGFjY29yZGlvbjogdHJ1ZSxcXHJcXG4gICAgICAgICAgICAgICAgcG9wb3V0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgaW5zZXQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBtdWx0aXBsZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcmVhZG9ubHk6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBmb2N1c2FibGU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBmbGF0OiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICBob3ZlcjogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHRpbGU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBjaGFuZ2VkOiAwLFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMucGFuZWxzID0gdGhpcy5lbGVtZW50W1xcJyNwYW5lbHNcXCddO1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG5cXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvY29udGFpbmVycy9jc3MvQWNjb3JkaW9uLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvY29udGFpbmVycy9jc3MvQWNjb3JkaW9uLmNzcycsICcudi1leHBhbnNpb24tcGFuZWxzIHtcXHJcXG4gICAgei1pbmRleDogMCAhaW1wb3J0YW50O1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcclxcbn1cXHJcXG4udi1leHBhbnNpb24tcGFuZWxzIDpiZWZvcmUge1xcclxcbiAgICBib3JkZXI6IHNvbGlkIDFweCB2YXIoLS1hY2NlbnQpO1xcclxcbiAgICBib3gtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcbi52LWV4cGFuc2lvbi1wYW5lbHMgOmZpcnN0LWNoaWxkOmJlZm9yZSB7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XFxyXFxufScpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvY29udGFpbmVycy9jc3MvTGlzdC5jc3MnLCAnLnYtZXhwYW5zaW9uLXBhbmVscyB7XFxyXFxuICAgIHotaW5kZXg6IDAgIWltcG9ydGFudDtcXHJcXG4gICAgbWFyZ2luLXRvcDogMjBweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXHJcXG59XFxyXFxuLnYtZXhwYW5zaW9uLXBhbmVscyA6YmVmb3JlIHtcXHJcXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggdmFyKC0tYWNjZW50KTtcXHJcXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG4udi1leHBhbnNpb24tcGFuZWxzIDpmaXJzdC1jaGlsZDpiZWZvcmUge1xcclxcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2NvbnRhaW5lcnMvY3NzL1RhYi5jc3MnLCAnLnYtdGFicyB7XFxyXFxuICAgIG1hcmdpbi10b3A6IDIwcHg7XFxyXFxufVxcclxcbi52LXRhYnMgLnYtdGFicy1zbGlkZXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1hY2NlbnQpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcbi52LXRhYnMgLnYtdGFicy1iYXIge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zZWNvbmRhcnkpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcbi52LXRhYnMgLnYtdGFicy1iYXIgLnYtdGFiIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWZvbnQpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbi52LXdpbmRvdyB7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XFxyXFxufVxcclxcbi52LXdpbmRvdyAudi1jYXJkIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSkgIWltcG9ydGFudDtcXHJcXG59Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9jb250YWluZXJzL2xheW91dHMvY3NzL09uZUNvbHVtbi5jc3MnLCAnLm9uZS1jb2x1bW4ge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxyXFxufVxcclxcblxcclxcbi5vbmUtY29sdW1uIC50aWxlIHtcXHJcXG5cXHJcXG59Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9jb250YWluZXJzL2xheW91dHMvY3NzL1R3b0NvbHVtbi5jc3MnLCAnLnR3by1jb2x1bW4ge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcXHJcXG4gICAgY29sdW1uLWdhcDogMTBweDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcXHJcXG4gICAgICAgICAgICAgIFwiZmlyc3Qgc2Vjb25kXCI7XFxyXFxufVxcclxcblxcclxcbi5maXJzdC1jb2x1bW4ge1xcclxcbiAgICBncmlkLWFyZWE6IGZpcnN0O1xcclxcbn1cXHJcXG5cXHJcXG4uc2Vjb25kLWNvbHVtbiB7XFxyXFxuICAgIGdyaWQtYXJlYTogc2Vjb25kO1xcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2NvbnRhaW5lcnMvbGF5b3V0cy9PbmVDb2x1bW4uanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgZGF0YSA9IHdpbmRvdy5NYW5hZ2VyLmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5VHlwZShcXCdlbGVtZW50c1xcJyk7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudHMgPSB7fTtcXHJcXG5cXHJcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBkYXRhW2ldO1xcclxcbiAgICAgICAgY29tcG9uZW50c1tgYXMtJHtjb21wb25lbnQuaWR9YF0gPSBjb21wb25lbnQuZ2V0Q29tcG9uZW50KCk7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnVGlsZUNvbnRhaW5lclxcJyxcXHJcXG4gICAgICAgIGNvbXBvbmVudHMsXFxyXFxuICAgICAgICB0ZW1wbGF0ZTpcXHJcXG4gICAgICAgICAgICBcXCc8ZGl2IGNsYXNzPVwib25lLWNvbHVtblwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPGNvbXBvbmVudCB2LWZvcj1cIihyZW5kZXJFbGVtZW50LCBlbGVtZW50KSBpbiBjb250ZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgOmlzPVwiYGFzLSR7cmVuZGVyRWxlbWVudFtcXFxcXFwnI3R5cGVcXFxcXFwnXX1gXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgOnJlbmRlckVsZW1lbnQ9XCJyZW5kZXJFbGVtZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgOmVsZW1lbnQ9XCJlbGVtZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgOmtleT1cImAke2VsZW1lbnR9LiR7Y2hhbmdlZH1gXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgOnJlZ2lvbj1cInJlZ2lvblwiLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJzwvZGl2PlxcJyxcXHJcXG4gICAgICAgIHByb3BzOiB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIFJlbmRlciBlbGVtZW50LiBVc3VhbGx5IGFuIGFycmF5IHdpdGgga2V5IHZhbHVlIHBhaXJzIGZvciBvcHRpb25zLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlbmRlckVsZW1lbnQ6IE9iamVjdCxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRWxlbWVudCBrZXkuIFRoZSBrZXkgcHJvdmlkZWQgdG8gbWFwIHN1Ym1pdHRlZCB2YWx1ZXMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgZWxlbWVudDogU3RyaW5nLFxcclxcblxcclxcbiAgICAgICAgICAgIHJlZ2lvbjogT2JqZWN0XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICBjb250ZW50OiB7fSxcXHJcXG4gICAgICAgICAgICAgICAgY2hhbmdlZDogMFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIHVwZGF0ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICBjb25zdCBjb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcXCcub25lLWNvbHVtblxcJyk7XFxyXFxuICAgICAgICAgICAgY29uc3QgY29tcHV0ZWRXaWR0aCA9IGNvbnRhaW5lcnMub2Zmc2V0V2lkdGg7XFxyXFxuXFxyXFxuICAgICAgICAgICAgY29uc29sZS5sb2coY29tcHV0ZWRXaWR0aClcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKmNvbnN0IHNvcnRhYmxlID0gbmV3IERyYWdnYWJsZS5Td2FwcGFibGUoY29udGFpbmVycywge1xcclxcbiAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IFxcJy50aWxlXFwnLFxcclxcbiAgICAgICAgICAgICAgICBtaXJyb3I6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGFwcGVuZFRvOiBcXCcub25lLWNvbHVtblxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0cmFpbkRpbWVuc2lvbnM6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIHBsdWdpbnM6IFtEcmFnZ2FibGUuUGx1Z2lucy5Td2FwQW5pbWF0aW9uXSxcXHJcXG4gICAgICAgICAgICAgICAgc29ydEFuaW1hdGlvbjoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMCxcXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICB9KTsqL1xcclxcbiAgICAgICAgfVxcclxcbiAgICB9O1xcclxcblxcclxcbiAgICBNb2R1bGUuYXBwZW5kU3R5bGUoYHNyYy9jb250YWluZXJzL2xheW91dHMvY3NzL09uZUNvbHVtbi5jc3NgLCBjb21wb25lbnQubmFtZSk7XFxyXFxuXFxyXFxuICAgIHJldHVybiBjb21wb25lbnQ7XFxyXFxufTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2NvbnRhaW5lcnMvbGF5b3V0cy9Ud29Db2x1bW4uanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgZGF0YSA9IHdpbmRvdy5NYW5hZ2VyLmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5VHlwZShcXCdlbGVtZW50c1xcJyk7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudHMgPSB7fTtcXHJcXG5cXHJcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBkYXRhW2ldO1xcclxcbiAgICAgICAgY29tcG9uZW50c1tgYXMtJHtjb21wb25lbnQuaWR9YF0gPSBjb21wb25lbnQuZ2V0Q29tcG9uZW50KCk7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnUy1Ud29Db2x1bW5cXCcsXFxyXFxuICAgICAgICBjb21wb25lbnRzLFxcclxcbiAgICAgICAgdGVtcGxhdGU6XFxyXFxuICAgICAgICAgICAgXFwnPGRpdiBjbGFzcz1cInR3by1jb2x1bW4gbXQtMlwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtY2FyZCBjbGFzcz1cImZpcnN0LWNvbHVtblwiIGZsYXQ+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgPHYtY2FyZC10ZXh0PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgIDxjb21wb25lbnQgdi1mb3I9XCIocmVuZGVyRWxlbWVudCwgZWxlbWVudCkgaW4gZmlyc3RcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgICAgOmlzPVwiYGFzLSR7cmVuZGVyRWxlbWVudFtcXFxcXFwnI3R5cGVcXFxcXFwnXX1gXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICAgIDpyZW5kZXJFbGVtZW50PVwicmVuZGVyRWxlbWVudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgICAgICA6ZWxlbWVudD1cImVsZW1lbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgICAgOmtleT1cImAke2VsZW1lbnR9LiR7Y2hhbmdlZH1gXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICAgIDpyZWdpb249XCJyZWdpb25cIi8+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgPC92LWNhcmQtdGV4dD5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDwvdi1jYXJkPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtY2FyZCBjbGFzcz1cInNlY29uZC1jb2x1bW5cIiBmbGF0PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgIDx2LWNhcmQtdGV4dD5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICA8Y29tcG9uZW50IHYtZm9yPVwiKHJlbmRlckVsZW1lbnQsIGVsZW1lbnQpIGluIHNlY29uZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgICAgICA6aXM9XCJgYXMtJHtyZW5kZXJFbGVtZW50W1xcXFxcXCcjdHlwZVxcXFxcXCddfWBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgICAgOnJlbmRlckVsZW1lbnQ9XCJyZW5kZXJFbGVtZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICAgIDplbGVtZW50PVwiZWxlbWVudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PVwiYCR7ZWxlbWVudH0uJHtjaGFuZ2VkfWBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgICAgOnJlZ2lvbj1cInJlZ2lvblwiLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA8L3YtY2FyZC10ZXh0PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPC92LWNhcmQ+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCc8L2Rpdj5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG5cXHJcXG4gICAgICAgICAgICByZWdpb246IE9iamVjdFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIGRhdGEoKSB7XFxyXFxuICAgICAgICAgICAgcmV0dXJuIHtcXHJcXG4gICAgICAgICAgICAgICAgZmlyc3Q6IHt9LFxcclxcbiAgICAgICAgICAgICAgICBzZWNvbmQ6IHt9LFxcclxcbiAgICAgICAgICAgICAgICBjaGFuZ2VkOiAwXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBtb3VudGVkOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gdGhpcy5maXJzdCA9IE1vZHVsZS5mYWxsYmFjayh0aGlzLmVsZW1lbnQsIFxcJyNmaXJzdFxcJywge30pO1xcclxcbiAgICAgICAgICAgIC8vIHRoaXMuc2Vjb25kID0gTW9kdWxlLmZhbGxiYWNrKHRoaXMuZWxlbWVudCwgXFwnI3NlY29uZFxcJywge30pO1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG5cXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvY29udGFpbmVycy9sYXlvdXRzL2Nzcy9Ud29Db2x1bW4uY3NzYCwgY29tcG9uZW50Lm5hbWUpO1xcclxcblxcclxcbiAgICByZXR1cm4gY29tcG9uZW50O1xcclxcbn07Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9jb250YWluZXJzL0xpc3QuanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgZGF0YSA9IHdpbmRvdy5NYW5hZ2VyLmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5VHlwZShcXCdlbGVtZW50c1xcJyk7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudHMgPSB7fTtcXHJcXG5cXHJcXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBkYXRhW2ldO1xcclxcbiAgICAgICAgY29tcG9uZW50c1tgYXMtJHtjb21wb25lbnQuaWR9YF0gPSBjb21wb25lbnQuZ2V0Q29tcG9uZW50KCk7XFxyXFxuICAgIH1cXHJcXG5cXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnUy1MaXN0XFwnLFxcclxcbiAgICAgICAgY29tcG9uZW50cyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJyAgPHYtbGlzdFxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6ZGlzYWJsZWQ9XCJkaXNhYmxlZFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpkZW5zZT1cImRlbnNlXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnR3by1saW5lPVwidHdvTGluZVwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDp0aHJlZS1saW5lPVwidGhyZWVMaW5lXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnNoYXBlZD1cInNoYXBlZFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpmbGF0PVwiZmxhdFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpzdWJoZWFkZXI9XCJzdWJoZWFkZXJcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6c3ViLWdyb3VwPVwic3ViR3JvdXBcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6bmF2PVwibmF2XCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOmF2YXRhcj1cImF2YXRhclwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpyb3VuZGVkPVwicm91bmRlZFwiPlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCdcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LWxpc3QtaXRlbSB2LWZvcj1cIihwYW5lbCwga2V5KSBpbiBwYW5lbHNcIiA6a2V5PVwiYCR7a2V5fS1saXN0LSR7cGFuZWxzLmxlbmd0aH1gXCI+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LWxpc3QtaXRlbS1jb250ZW50PlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDxjb21wb25lbnQgdi1mb3I9XCIocmVuZGVyRWxlbWVudCwgZWxlbWVudCkgaW4gcGFuZWxbXFxcXFxcJyNjb250ZW50XFxcXFxcJ11cIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICA6aXM9XCJgYXMtJHtyZW5kZXJFbGVtZW50W1xcXFxcXCcjdHlwZVxcXFxcXCddfWBcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgOnJlbmRlckVsZW1lbnQ9XCJyZW5kZXJFbGVtZW50XCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgIDplbGVtZW50PVwiZWxlbWVudFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICA6a2V5PVwiYCR7ZWxlbWVudH0uJHtjaGFuZ2VkfWBcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgOnJlZ2lvbj1cInJlZ2lvblwiLz5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LWxpc3QtaXRlbS1jb250ZW50PlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPC92LWxpc3QtaXRlbT5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICA8L3YtbGlzdD5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG5cXHJcXG4gICAgICAgICAgICByZWdpb246IE9iamVjdFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIGRhdGEoKSB7XFxyXFxuICAgICAgICAgICAgcmV0dXJuIHtcXHJcXG4gICAgICAgICAgICAgICAgcGFuZWxzOiB7fSxcXHJcXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBkZW5zZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHR3b0xpbmU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB0aHJlZUxpbmU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzaGFwZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBmbGF0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc3ViaGVhZGVyOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgaW5hY3RpdmU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzdWJHcm91cDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIG5hdjogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGF2YXRhcjogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHJvdW5kZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBjaGFuZ2VkOiAwLFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMucGFuZWxzID0gdGhpcy5lbGVtZW50W1xcJyNwYW5lbHNcXCddO1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG5cXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvY29udGFpbmVycy9jc3MvTGlzdC5jc3NgLCBjb21wb25lbnQubmFtZSk7XFxyXFxuXFxyXFxuICAgIHJldHVybiBjb21wb25lbnQ7XFxyXFxufTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2NvbnRhaW5lcnMvVGFiLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGRhdGEgPSB3aW5kb3cuTWFuYWdlci5jb21wb25lbnRNYW5hZ2VyLmdldENvbXBvbmVudHNCeVR5cGUoXFwnZWxlbWVudHNcXCcpO1xcclxcbiAgICBjb25zdCBjb21wb25lbnRzID0ge307XFxyXFxuXFxyXFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gZGF0YVtpXTtcXHJcXG4gICAgICAgIGNvbXBvbmVudHNbYGFzLSR7Y29tcG9uZW50LmlkfWBdID0gY29tcG9uZW50LmdldENvbXBvbmVudCgpO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1MtVGFiXFwnLFxcclxcbiAgICAgICAgY29tcG9uZW50cyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJyAgPHYtY2FyZD5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LXRhYnMgdi1tb2RlbD1cInBhbmVsXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgOmNlbnRlcmVkPVwiY2VudGVyZWRcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICA6Z3Jvdz1cImdyb3dcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICA6dmVydGljYWw9XCJ2ZXJ0aWNhbFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgIDpyaWdodD1cInJpZ2h0XCI+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LXRhYiB2LWZvcj1cIihwYW5lbCwga2V5KSBpbiBwYW5lbHNcIiA6a2V5PVwiYCR7a2V5fS10YWItaGVhZGVyLSR7cGFuZWxzLmxlbmd0aH1gXCI+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAge3sgcGFuZWxbXFxcXFxcJyN0aXRsZVxcXFxcXCddIH19XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDwvdi10YWI+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8L3YtdGFicz5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di10YWJzLWl0ZW1zIHYtbW9kZWw9XCJwYW5lbFwiPlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8di10YWItaXRlbSB2LWZvcj1cIihwYW5lbCwga2V5KSBpbiBwYW5lbHNcIiA6a2V5PVwiYCR7a2V5fS10YWItY29udGVudC0ke3BhbmVscy5sZW5ndGh9YFwiPlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDx2LWNhcmQgZmxhdD5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgIDx2LWNhcmQtdGV4dD5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgPGNvbXBvbmVudCB2LWZvcj1cIihyZW5kZXJFbGVtZW50LCBlbGVtZW50KSBpbiBwYW5lbFtcXFxcXFwnI2NvbnRlbnRcXFxcXFwnXVwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICAgOmlzPVwiYGFzLSR7cmVuZGVyRWxlbWVudFtcXFxcXFwnI3R5cGVcXFxcXFwnXX1gXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgICA6cmVuZGVyRWxlbWVudD1cInJlbmRlckVsZW1lbnRcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgICAgICAgIDplbGVtZW50PVwiZWxlbWVudFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICAgICAgICAgOmtleT1cImAke2VsZW1lbnR9LiR7Y2hhbmdlZH1gXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgICAgICAgICA6cmVnaW9uPVwicmVnaW9uXCIvPlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgPC92LWNhcmQtdGV4dD5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8L3YtY2FyZD5cXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LXRhYi1pdGVtPlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPC92LXRhYnMtaXRlbXM+XFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgPC92LWNhcmQ+XFwnLFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgICAgICAgcmVnaW9uOiBPYmplY3RcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHBhbmVsczoge30sXFxyXFxuICAgICAgICAgICAgICAgIHBhbmVsOiAxLFxcclxcbiAgICAgICAgICAgICAgICBjZW50ZXJlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGdyb3c6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgIHZlcnRpY2FsOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcmlnaHQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBjaGFuZ2VkOiAwLFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMucGFuZWxzID0gdGhpcy5lbGVtZW50W1xcJyNwYW5lbHNcXCddO1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvY29udGFpbmVycy9jc3MvVGFiLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvQnV0dG9uLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1MtQnV0dG9uXFwnLFxcclxcbiAgICAgICAgdGVtcGxhdGU6XFxyXFxuICAgICAgICAgICAgXFwnPHYtYnRuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YWJzb2x1dGU9XCJhYnNvbHV0ZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YWN0aXZlLWNsYXNzPVwiYWN0aXZlQ2xhc3NcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmFwcGVuZD1cImFwcGVuZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YmxvY2s9XCJibG9ja1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Ym90dG9tPVwiYm90dG9tXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpjb2xvcj1cImNvbG9yXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkYXJrPVwiZGFya1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZGVwcmVzc2VkPVwiZGVwcmVzc2VkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkaXNhYmxlZD1cImRpc2FibGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDplbGV2YXRpb249XCJlbGV2YXRpb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmV4YWN0PVwiZXhhY3RcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmV4YWN0LWFjdGl2ZS1jbGFzcz1cImV4YWN0QWN0aXZlQ2xhc3NcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmZhYj1cImZhYlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Zml4ZWQ9XCJmaXhlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aGVpZ2h0PVwiaGVpZ2h0XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpocmVmPVwiaHJlZlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aWNvbj1cImljb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmlucHV0LXZhbHVlPVwiaW5wdXRWYWx1ZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bGFyZ2U9XCJsYXJnZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bGVmdD1cImxlZnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxpZ2h0PVwibGlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxpbms9XCJsaW5rXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpsb2FkaW5nPVwibG9hZGluZ1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bWF4LWhlaWdodD1cIm1heEhlaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bWF4LXdpZHRoPVwibWF4V2lkdGhcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOm1pbi1oZWlnaHQ9XCJtaW5IZWlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOm1pbi13aWR0aD1cIm1pbldpZHRoXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpudXh0PVwibnV4dFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6b3V0bGluZWQ9XCJvdXRsaW5lZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmVwbGFjZT1cInJlcGxhY2VcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnJldGFpbi1mb2N1cy1vbi1jbGljaz1cInJldGFpbkZvY3VzT25DbGlja1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmlnaHQ9XCJyaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmlwcGxlPVwicmlwcGxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpyb3VuZGVkPVwicm91bmRlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6c2hhcGVkPVwic2hhcGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzbWFsbD1cInNtYWxsXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp0YWc9XCJ0YWdcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnRhcmdldD1cInRhcmdldFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6dGV4dD1cInRleHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnRpbGU9XCJ0aWxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp0bz1cInRvXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp0b3A9XCJ0b3BcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnR5cGU9XCJ0eXBlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp2YWx1ZT1cInZhbHVlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp3aWR0aD1cIndpZHRoXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp4LWxhcmdlPVwieExhcmdlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp4LXNtYWxsPVwieFNtYWxsXCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgPHYtaWNvbiBsZWZ0IHYtaWY9XCJhcHBlbmRJY29uXCI+e3sgYXBwZW5kSWNvbiB9fTwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgIHt7IHRpdGxlIH19XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgPHYtaWNvbiByaWdodCB2LWlmPVwicHJlcGVuZEljb25cIj57eyBwcmVwZW5kSWNvbiB9fTwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnPC92LWJ0bj5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBhcHBlbmRJY29uOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcHJlcGVuZEljb246IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBhYnNvbHV0ZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGFjdGl2ZUNsYXNzOiBcXCdcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGFwcGVuZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGJsb2NrOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgYm90dG9tOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgY29sb3I6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgZGFyazogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGRlcHJlc3NlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZWxldmF0aW9uOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGV4YWN0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZXhhY3RBY3RpdmVDbGFzczogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBmYWI6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBmaXhlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGhlaWdodDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBocmVmOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGljb246IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBpbnB1dFZhbHVlOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGxhcmdlOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbGVmdDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGxpZ2h0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbGluazogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBtYXhIZWlnaHQ6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgbWF4V2lkdGg6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgbWluSGVpZ2h0OiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIG1pbldpZHRoOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIG51eHQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBvdXRsaW5lZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHJlcGxhY2U6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByZXRhaW5Gb2N1c09uQ2xpY2s6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByaWdodDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHJpcHBsZTogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICByb3VuZGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc2hhcGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc21hbGw6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB0YWc6IFwiYnV0dG9uXCIsXFxyXFxuICAgICAgICAgICAgICAgIHRhcmdldDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICB0ZXh0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgdGlsZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHRvOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIHRvcDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHR5cGU6IFwiYnV0dG9uXCIsXFxyXFxuICAgICAgICAgICAgICAgIHZhbHVlOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIHdpZHRoOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIHhMYXJnZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHhTbWFsbDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuXFxyXFxuICAgICAgICBtb3VudGVkOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gSXRlcmF0ZSB0cm91Z2ggYWxsIGl0ZW1zIGFuZCBzZXQgdGhlbS5cXHJcXG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5yZW5kZXJFbGVtZW50KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnJlbmRlckVsZW1lbnRba2V5XTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUtleSA9IGtleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGRhdGEgaXMgbWFwcGFibGUuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5oYXNPd25Qcm9wZXJ0eShkYXRhS2V5KSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZWxlbWVudCBpcyBlbXB0eS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuZXcgdmFsdWUuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXNba2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKV0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICB9O1xcclxcbiAgICBNb2R1bGUuYXBwZW5kU3R5bGUoYHNyYy9lbGVtZW50cy9jc3MvQnV0dG9uLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvQ29sb3JwaWNrZXIuanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnQ29sb3ItUGlja2VyXFwnLFxcclxcbiAgICAgICAgdGVtcGxhdGU6XFxyXFxuICAgICAgICAgICAgXFwnPHYtY29sb3ItcGlja2VyXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6c3R5bGU9XCJzdHlsZVwiIFxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOmNsYXNzPVwiY2xhc3NDU1NcIiBcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIHYtbW9kZWw9XCJ2YWx1ZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6Y2FudmFzLWhlaWdodD1cImNhbnZhc0hlaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6aGlkZS1jYW52YXM9XCJoaWRlQ2FudmFzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpoaWRlLWlucHV0cz1cImhpZGVJbnB1dHNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOmhpZGUtbW9kZS1zd2l0Y2g9XCJoaWRlTW9kZVN3aXRjaFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6bW9kZT1cIm1vZGVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnNob3ctc3dhdGNoZXM9XCJzaG93U3dhdGNoZXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnN3YXRjaGVzPVwic3dhdGNoZXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnN3YXRjaGVzLW1heC1oZWlnaHQ9XCJzd2F0Y2hlc01heEhlaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6d2lkdGg9XCJjYW52YXNIZWlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAvPlxcJyxcXHJcXG4gICAgICAgIHByb3BzOiB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIFJlbmRlciBlbGVtZW50LiBVc3VhbGx5IGFuIGFycmF5IHdpdGgga2V5IHZhbHVlIHBhaXJzIGZvciBvcHRpb25zLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlbmRlckVsZW1lbnQ6IE9iamVjdCxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRWxlbWVudCBrZXkuIFRoZSBrZXkgcHJvdmlkZWQgdG8gbWFwIHN1Ym1pdHRlZCB2YWx1ZXMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgZWxlbWVudDogU3RyaW5nLFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBGb3JtIGlkIHRvIGlkZW50aWZ5IGV2ZW50cy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZWdpb246IE9iamVjdCxcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHZhbHVlOiB7fSxcXHJcXG4gICAgICAgICAgICAgICAgY2FudmFzSGVpZ2h0OiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBoaWRlQ2FudmFzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgaGlkZU1vZGVTd2l0Y2g6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBoaWRlSW5wdXRzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbW9kZTogXFwncmdiYVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgc2hvd1N3YXRjaGVzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc3dhdGNoZXM6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgc3dhdGNoZXNNYXhIZWlnaHQ6IDE1MCxcXHJcXG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwMCxcXHJcXG4gICAgICAgICAgICAgICAgaW5mbzoge30sXFxyXFxuICAgICAgICAgICAgICAgIHN0eWxlOiB7fSxcXHJcXG4gICAgICAgICAgICAgICAgY2xhc3NDU1M6IHt9LFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgd2F0Y2g6IHtcXHJcXG4gICAgICAgICAgICB2YWx1ZToge1xcclxcbiAgICAgICAgICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAodmFsdWUpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlLnBhcmFtc1t0aGlzLmVsZW1lbnRdID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLiR0cmlnZ2VyKFxcJ2lucHV0X2NoYW5nZVxcJywgdGhpcy5lbGVtZW50KTtcXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgZGVlcDogdHJ1ZVxcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBtb3VudGVkOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gSXRlcmF0ZSB0cm91Z2ggYWxsIGl0ZW1zIGFuZCBzZXQgdGhlbS5cXHJcXG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5yZW5kZXJFbGVtZW50KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnJlbmRlckVsZW1lbnRba2V5XTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUtleSA9IGtleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGRhdGEgaXMgbWFwcGFibGUuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5oYXNPd25Qcm9wZXJ0eShkYXRhS2V5KSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZWxlbWVudCBpcyBlbXB0eS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuZXcgdmFsdWUuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXNba2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKV0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgdGhpcy5pbmZvID0gdGhpcy5yZWdpb24ucmVnaW9uUmF3LmluZm87XFxyXFxuXFxyXFxuICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zW3RoaXMuZWxlbWVudF0gPSB0aGlzLnZhbHVlO1xcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvZWxlbWVudHMvY3NzL0NvbG9ycGlja2VyLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvY3NzL0J1dHRvbi5jc3MnLCAnZGl2LnYtdGV4dC1maWVsZCB7XFxyXFxuICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3Qge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZCkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgaW5wdXQsXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgbGFiZWwudi1sYWJlbCxcXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgZGl2LnYtbWVzc2FnZXMge1xcclxcbiAgY29sb3I6IHZhcigtLWZvbnQpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IGJ1dHRvbi52LWljb24sXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3Q6YmVmb3JlLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90OmFmdGVyLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90ID4gZmllbGRzZXQge1xcclxcbiAgY29sb3I6IHZhcigtLWFjY2VudCkgIWltcG9ydGFudDtcXHJcXG4gIGJvcmRlci1jb2xvcjogdmFyKC0tYWNjZW50KSAhaW1wb3J0YW50O1xcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL2Nzcy9Db2xvcnBpY2tlci5jc3MnLCAnZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3Qge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kKSAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBpbnB1dCxcXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBsYWJlbC52LWxhYmVsLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCBkaXYudi1tZXNzYWdlcyB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1mb250KSAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBidXR0b24udi1pY29uLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90OmJlZm9yZSxcXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdDphZnRlcixcXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCA+IGZpZWxkc2V0IHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWFjY2VudCkgIWltcG9ydGFudDtcXHJcXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hY2NlbnQpICFpbXBvcnRhbnQ7XFxyXFxufScpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvY3NzL0ltYWdlLmNzcycsICcudGlsZS1pbWFnZS1lZGl0b3IgI3RpbGUtaW1hZ2Uge1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xcclxcbn1cXHJcXG4udGlsZS1pbWFnZS1lZGl0b3IgLmltYWdlLWVkaXRvci1pdGVtIHtcXHJcXG4gICAgbWFyZ2luLXRvcDogMjBweDtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcXHJcXG59Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9lbGVtZW50cy9jc3MvUGFyYWdyYXBoLmNzcycsICdkaXYudi10ZXh0LWZpZWxkIHtcXHJcXG4gIG1hcmdpbi10b3A6IDIwcHg7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kKSAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBpbnB1dCxcXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBsYWJlbC52LWxhYmVsLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCBkaXYudi1tZXNzYWdlcyB7XFxyXFxuICBjb2xvcjogdmFyKC0tZm9udCkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgYnV0dG9uLnYtaWNvbixcXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdDpiZWZvcmUsXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3Q6YWZ0ZXIsXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgPiBmaWVsZHNldCB7XFxyXFxuICBjb2xvcjogdmFyKC0tYWNjZW50KSAhaW1wb3J0YW50O1xcclxcbiAgYm9yZGVyLWNvbG9yOiB2YXIoLS1hY2NlbnQpICFpbXBvcnRhbnQ7XFxyXFxufScpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvY3NzL1NvdW5kLmNzcycsICcuY3Vyc29yIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxyXFxufVxcclxcblxcclxcbi5zZWxlY3Rpb24uc2VnbWVudCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcXHJcXG59XFxyXFxuXFxyXFxuLnNlbGVjdGlvbi5wb2ludCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXHJcXG59XFxyXFxuXFxyXFxuPiBoMiB7XFxyXFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XFxyXFxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZDtcXHJcXG4gICAgZm9udC13ZWlnaHQ6IGluaXRpYWw7XFxyXFxuICAgIHBhZGRpbmctYm90dG9tOiA1cHg7XFxyXFxufScpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvY3NzL1N3aXRjaC5jc3MnLCAnZGl2LnYtaW5wdXQtLXN3aXRjaCB7XFxyXFxuICAgIG1hcmdpbi10b3A6IDIwcHg7XFxyXFxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XFxyXFxufVxcclxcblxcclxcbmRpdi52LWlucHV0LS1zd2l0Y2ggPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZCkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LnYtaW5wdXQtLXN3aXRjaCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgbGFiZWwudi1sYWJlbCxcXHJcXG5kaXYudi1pbnB1dC0tc3dpdGNoID4gLnYtaW5wdXRfX2NvbnRyb2wgZGl2LnYtbWVzc2FnZXMge1xcclxcbiAgICBjb2xvcjogdmFyKC0tZm9udCkgIWltcG9ydGFudDtcXHJcXG59XFxyXFxuXFxyXFxuZGl2LnYtaW5wdXQtLXN3aXRjaCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgYnV0dG9uLnYtaWNvbixcXHJcXG5kaXYudi1pbnB1dC0tc3dpdGNoID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCAucHJpbWFyeS0tdGV4dCB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1hY2NlbnQpICFpbXBvcnRhbnQ7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tYWNjZW50KSAhaW1wb3J0YW50O1xcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL2Nzcy9UZXh0YXJlYS5jc3MnLCAnZGl2LnYtdGV4dGFyZWEge1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcclxcbn1cXHJcXG5kaXYudi10ZXh0YXJlYSA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3Qge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kKSAhaW1wb3J0YW50O1xcclxcbn1cXHJcXG5kaXYudi10ZXh0YXJlYSA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgdGV4dGFyZWEsIGRpdi52LXRleHRhcmVhID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBsYWJlbCwgZGl2LnYtdGV4dGFyZWEgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IGRpdi52LW1lc3NhZ2VzIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWZvbnQpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcbmRpdi52LXRleHRhcmVhID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCBidXR0b24udi1pY29uLCBkaXYudi10ZXh0YXJlYSA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3QgPiBmaWVsZHNldCB7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1hY2NlbnQpICFpbXBvcnRhbnQ7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tYWNjZW50KSAhaW1wb3J0YW50O1xcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL2Nzcy9UZXh0ZmllbGQuY3NzJywgJ2Rpdi52LXRleHQtZmllbGQge1xcclxcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5kaXYudi10ZXh0LWZpZWxkID4gLnYtaW5wdXRfX2NvbnRyb2wgPiAudi1pbnB1dF9fc2xvdCB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IGlucHV0LFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IGxhYmVsLnYtbGFiZWwsXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sIGRpdi52LW1lc3NhZ2VzIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWZvbnQpICFpbXBvcnRhbnQ7XFxyXFxufVxcclxcblxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90IGJ1dHRvbi52LWljb24sXFxyXFxuZGl2LnYtdGV4dC1maWVsZCA+IC52LWlucHV0X19jb250cm9sID4gLnYtaW5wdXRfX3Nsb3Q6YmVmb3JlLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90OmFmdGVyLFxcclxcbmRpdi52LXRleHQtZmllbGQgPiAudi1pbnB1dF9fY29udHJvbCA+IC52LWlucHV0X19zbG90ID4gZmllbGRzZXQge1xcclxcbiAgICBjb2xvcjogdmFyKC0tYWNjZW50KSAhaW1wb3J0YW50O1xcclxcbiAgICBib3JkZXItY29sb3I6IHZhcigtLWFjY2VudCkgIWltcG9ydGFudDtcXHJcXG59Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9lbGVtZW50cy9jc3MvVGlsZS5jc3MnLCAnLnRpbGUge1xcclxcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcclxcbn1cXHJcXG5cXHJcXG4vKlxcclxcbiBEZWZhdWx0IHRpbGUuXFxyXFxuKi9cXHJcXG5cXHJcXG4udGlsZS5kZWZhdWx0IHtcXHJcXG4gICAgZGlzcGxheTogZ3JpZDtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcXHJcXG4gICAgICAgICAgICBcXCd0ZXh0IHRleHRcXCdcXHJcXG4gICAgICAgICAgICBcXCd0ZXh0IHRleHRcXCc7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MCUgNTAlO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS5kZWZhdWx0ID4gLnYtY2FyZF9fdGV4dCB7XFxyXFxuICAgIGdyaWQtYXJlYTogdGV4dDtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUuZGVmYXVsdCA+IC52LWltYWdlIHtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuXFxyXFxuLypcXHJcXG4gSW1hZ2UgdGlsZS5cXHJcXG4qL1xcclxcblxcclxcbi50aWxlLmltYWdlIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcXHJcXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xcclxcblxcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxcclxcbiAgICAgICAgICAgIFxcJ2ltYWdlIGltYWdlXFwnXFxyXFxuICAgICAgICAgICAgXFwnaW1hZ2UgaW1hZ2VcXCc7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MCUgNTAlO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS5pbWFnZSA+IC52LWNhcmRfX3RleHQge1xcclxcbiAgICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS5pbWFnZSA+IC52LWltYWdlIHtcXHJcXG4gICAgZ3JpZC1hcmVhOiBpbWFnZTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuLypcXHJcXG4gSW1hZ2UgdGlsZS5cXHJcXG4qL1xcclxcblxcclxcbi50aWxlLmhvcml6b250YWwtNTAtNTAge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxcclxcbiAgICAgICAgICAgIFxcJ3RleHQgdGV4dFxcJ1xcclxcbiAgICAgICAgICAgIFxcJ2ltYWdlIGltYWdlXFwnO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNTAlIDUwJTtcXHJcXG59XFxyXFxuXFxyXFxuLnRpbGUuaG9yaXpvbnRhbC01MC01MCA+IC52LWNhcmRfX3RleHQge1xcclxcbiAgICBncmlkLWFyZWE6IHRleHQ7XFxyXFxufVxcclxcblxcclxcbi50aWxlLmhvcml6b250YWwtNTAtNTAgPiAudi1pbWFnZSB7XFxyXFxuICAgIGdyaWQtYXJlYTogaW1hZ2U7XFxyXFxufVxcclxcblxcclxcblxcclxcbi8qXFxyXFxuIEltYWdlIHRpbGUuXFxyXFxuKi9cXHJcXG5cXHJcXG4udGlsZS52ZXJ0aWNhbC01MC01MCB7XFxyXFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6XFxyXFxuICAgICAgICAgICAgXFwndGV4dCBpbWFnZVxcJ1xcclxcbiAgICAgICAgICAgIFxcJ3RleHQgaW1hZ2VcXCc7XFxyXFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcXHJcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MCUgNTAlO1xcclxcbn1cXHJcXG5cXHJcXG4udGlsZS52ZXJ0aWNhbC01MC01MCA+IC52LWNhcmRfX3RleHQge1xcclxcbiAgICBncmlkLWFyZWE6IHRleHQ7XFxyXFxufVxcclxcblxcclxcbi50aWxlLnZlcnRpY2FsLTUwLTUwID4gLnYtaW1hZ2Uge1xcclxcbiAgICBncmlkLWFyZWE6IGltYWdlO1xcclxcbn0nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL2N1c3RvbS9UaWxlLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1RpbGVcXCcsXFxyXFxuICAgICAgICB0ZW1wbGF0ZTpcXHJcXG4gICAgICAgICAgICBcXCc8di1jYXJkIFxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgIHYtcmlwcGxlXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgdi10b3VjaDp0YXA9XCJjbGlja1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgd2lkdGg9XCIxNTBweFwiIFxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgIGhlaWdodD1cIjE1MHB4XCIgXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgOmNvbG9yPVwiYmFja2dyb3VuZENvbG9yXCIgXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgY2xhc3M9XCJ0aWxlXCIgXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgOmNsYXNzPVwiY2xhc3Nlc1wiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtY2FyZC10ZXh0IDpzdHlsZT1cInsgY29sb3I6IHRleHRDb2xvciB9XCI+e3sgdGl0bGUgfX08L3YtY2FyZC10ZXh0PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtaW1nIHYtaWY9XCJzcmMgIT09IHVuZGVmaW5lZFwiIDpzcmM9XCJzcmNcIiB3aWR0aD1cIjE1MHB4XCIgaGVpZ2h0PVwiMTUwcHhcIiA6Y29sb3I9XCJiYWNrZ3JvdW5kQ29sb3JcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDwvdi1pbWc+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCc8L3YtY2FyZD5cXCcsXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcXCdcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXFwnXFwnLFxcclxcbiAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6IFxcJyMwMDAwMDBcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGNoYW5nZWQ6IDAsXFxyXFxuICAgICAgICAgICAgICAgIHNyYzogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBhdWRpbzogW10sXFxyXFxuICAgICAgICAgICAgICAgIGNsYXNzZXM6IFtcXCdkZWZhdWx0XFwnXSxcXHJcXG4gICAgICAgICAgICAgICAgaW1hZ2VzOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgc291bmRzOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgdXBkYXRlOiBbXSxcXHJcXG4gICAgICAgICAgICB9O1xcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIHdhdGNoOiB7XFxyXFxuICAgICAgICAgICAgaW1hZ2VzOiB7XFxyXFxuICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICh2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3JjID0gXFwnXFwnO1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpXFxyXFxuICAgICAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9ICgpID0+IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNyYyA9IGZpbGVSZWFkZXIucmVzdWx0O1xcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNEYXRhVVJMKHZhbHVlWzBdKTtcXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgZGVlcDogdHJ1ZVxcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgc291bmRzOiB7XFxyXFxuICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICh2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCA9PT0gMCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3JjID0gXFwnXFwnO1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVSZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpXFxyXFxuICAgICAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLm9ubG9hZCA9ICgpID0+IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvID0gbmV3IEF1ZGlvKGZpbGVSZWFkZXIucmVzdWx0KTtcXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTCh2YWx1ZVswXSk7XFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIGRlZXA6IHRydWVcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEZvcm0gaWQgdG8gaWRlbnRpZnkgZXZlbnRzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlZ2lvbjogT2JqZWN0LFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIGV2ZW50czoge1xcclxcbiAgICAgICAgICAgIGlucHV0X2NoYW5nZTogZnVuY3Rpb24gKGV2ZW50LCB2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiRyb3V0ZS5wYXJhbXM7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghKHZhbHVlIGluIHBhcmFtcykpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICBjb25zdCB1cGRhdGVfbGVuZ3RoID0gT2JqZWN0LmtleXModGhpcy51cGRhdGUpLmxlbmd0aDtcXHJcXG4gICAgICAgICAgICAgICAgbGV0IGZvdW5kID0gdW5kZWZpbmVkO1xcclxcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVwZGF0ZV9sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlID0gdGhpcy51cGRhdGVbaV07XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgICAgICBpZiAodXBkYXRlLnZhbHVlID09PSB2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdXBkYXRlO1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGlmIChmb3VuZCA9PT0gdW5kZWZpbmVkKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1tmb3VuZC5rZXldID0gcGFyYW1zW3ZhbHVlXTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHRoaXMucmVuZGVyRWxlbWVudFtrZXldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0ga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KGRhdGFLZXkpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbGVtZW50IGlzIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUuaW5jbHVkZXMoXFwnflxcJykpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlLnB1c2goe1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleToga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUucmVwbGFjZShcXCd+XFwnLCBcXCdcXCcpXFxyXFxuICAgICAgICAgICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgICAgIC8vY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgICAgICBpZiAoa2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKSBpbiB0aGlzICYmIHZhbHVlLnJlcGxhY2UoXFwnflxcJywgXFwnXFwnKSBpbiB0aGlzLiRyb3V0ZS5wYXJhbXMpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMuJHJvdXRlLnBhcmFtc1t2YWx1ZS5yZXBsYWNlKFxcJ35cXCcsIFxcJ1xcJyldO1xcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuZXcgdmFsdWUuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXNba2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKV0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbWV0aG9kczoge1xcclxcbiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XFxyXFxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmF1ZGlvLmNvbnN0cnVjdG9yLm5hbWUgIT09IFxcJ0hUTUxBdWRpb0VsZW1lbnRcXCcpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvLnBhdXNlKCk7XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuYXVkaW8uY3VycmVudFRpbWUgPSAwO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLmF1ZGlvLnBsYXkoKTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGVzdHJveWVkOiBmdW5jdGlvbiAoKSB7XFxyXFxuICAgICAgICAgICAgaWYgKHRoaXMuYXVkaW8uY29uc3RydWN0b3IubmFtZSAhPT0gXFwnSFRNTEF1ZGlvRWxlbWVudFxcJykge1xcclxcbiAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMuYXVkaW8ucGF1c2UoKTtcXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfTtcXHJcXG5cXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvZWxlbWVudHMvY3NzL1RpbGUuY3NzYCwgY29tcG9uZW50Lm5hbWUpO1xcclxcblxcclxcbiAgICByZXR1cm4gY29tcG9uZW50O1xcclxcbn07Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9lbGVtZW50cy9jdXN0b20vdGlsZS9BZGRUaWxlQnV0dG9uLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGRhdGEgPSB3aW5kb3cuTWFuYWdlci5jb21wb25lbnRNYW5hZ2VyLmdldENvbXBvbmVudHNCeVR5cGUoXFwnZWxlbWVudHNcXCcpO1xcclxcbiAgICBjb25zdCBjb21wb25lbnRzID0ge307XFxyXFxuXFxyXFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gZGF0YVtpXTtcXHJcXG4gICAgICAgIGNvbXBvbmVudHNbYGFzLSR7Y29tcG9uZW50LmlkfWBdID0gY29tcG9uZW50LmdldENvbXBvbmVudCgpO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIC8qKiBUT0RPOiBjb252ZXJ0IHRoaXMgaW50byBhIGNvbnRhaW5lci4gKi9cXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnU3BlZWREaWFsXFwnLFxcclxcbiAgICAgICAgY29tcG9uZW50cyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJzx2LXNwZWVkLWRpYWxcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIHYtbW9kZWw9XCJmYWJcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgZml4ZWRcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIGJvdHRvbVxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgcmlnaHRcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIGRpcmVjdGlvbj1cInRvcFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDx2LWJ0blxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgIGNvbG9yPVwiYmx1ZSBkYXJrZW4tMlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgb3V0bGluZWRcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICBkYXJrXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgZmFiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgID5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICA8di1pY29uIHYtaWY9XCJmYWJcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgIGNsb3NlXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgPC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgPHYtaWNvbiB2LWVsc2U+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICBtb3JlX3ZlcnRcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICA8L3YtaWNvbj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgPC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDwvdGVtcGxhdGU+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8Y29tcG9uZW50IHYtZm9yPVwiKHJlbmRlckVsZW1lbnQsIGVsZW1lbnQpIGluIGNvbnRlbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICA6aXM9XCJgYXMtJHtyZW5kZXJFbGVtZW50W1xcXFxcXCcjdHlwZVxcXFxcXCddfWBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICA6cmVuZGVyRWxlbWVudD1cInJlbmRlckVsZW1lbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICA6ZWxlbWVudD1cImVsZW1lbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICA6a2V5PVwiYCR7ZWxlbWVudH0uJHtjaGFuZ2VkfWBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICA6cmVnaW9uPVwicmVnaW9uXCIvPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnPC92LXNwZWVkLWRpYWw+XFwnLFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICB0aXRsZTogXFwnXFwnLFxcclxcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFxcJ1xcJyxcXHJcXG4gICAgICAgICAgICAgICAgY29udGVudDogW10sXFxyXFxuICAgICAgICAgICAgICAgIHRleHRDb2xvcjogXFwnIzAwMDAwMFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgY2hhbmdlZDogMCxcXHJcXG4gICAgICAgICAgICAgICAgc3JjOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGF1ZGlvOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgdG86IHt9LFxcclxcbiAgICAgICAgICAgICAgICBjbGFzc2VzOiBbXFwnZGVmYXVsdFxcJ10sXFxyXFxuICAgICAgICAgICAgICAgIGltYWdlczogW10sXFxyXFxuICAgICAgICAgICAgICAgIHVwZGF0ZTogW10sXFxyXFxuICAgICAgICAgICAgICAgIGZhYjogZmFsc2UsXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICB3YXRjaDoge1xcclxcbiAgICAgICAgICAgIGltYWdlczoge1xcclxcbiAgICAgICAgICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAodmFsdWUpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNyYyA9IFxcJ1xcJztcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWxlUmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxcclxcbiAgICAgICAgICAgICAgICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zcmMgPSBmaWxlUmVhZGVyLnJlc3VsdDtcXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIucmVhZEFzRGF0YVVSTCh2YWx1ZVswXSk7XFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIGRlZXA6IHRydWVcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEZvcm0gaWQgdG8gaWRlbnRpZnkgZXZlbnRzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlZ2lvbjogT2JqZWN0LFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBJdGVyYXRlIHRyb3VnaCBhbGwgaXRlbXMgYW5kIHNldCB0aGVtLlxcclxcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnJlbmRlckVsZW1lbnQpO1xcclxcblxcclxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLnJlbmRlckVsZW1lbnRba2V5XTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUtleSA9IGtleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGRhdGEgaXMgbWFwcGFibGUuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5oYXNPd25Qcm9wZXJ0eShkYXRhS2V5KSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZWxlbWVudCBpcyBlbXB0eS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuZXcgdmFsdWUuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXNba2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKV0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbWV0aG9kczoge1xcclxcbiAgICAgICAgICAgIGFkZHRpbGU6IGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgbGV0IHBhdGg7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGlmIChcXCdwYXRoXFwnIGluIHRoaXMuJHJvdXRlLnBhcmFtcykge1xcclxcbiAgICAgICAgICAgICAgICAgICAgcGF0aCA9IHRoaXMuJHJvdXRlLnBhcmFtc1tcXCdwYXRoXFwnXSB8fCBcXCcvc291bmRib2FyZFxcJztcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAoXFwncGF0aFxcJyBpbiB0aGlzLiRyb3V0ZS5wYXJhbXMpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHBhdGggPSB0aGlzLiRyb3V0ZS5wYXJhbXNbXFwncGF0aFxcJ10gfHwgXFwnL3NvdW5kYm9hcmRcXCc7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goe1xcclxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJ0aWxlLnRlbXBsYXRlc1wiLFxcclxcbiAgICAgICAgICAgICAgICB9KVxcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfTtcXHJcXG5cXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvY3VzdG9tL3RpbGUvVGlsZVRlbXBsYXRlLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1RpbGVUZW1wbGF0ZVxcJyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJzx2LWNhcmQgXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgdi1yaXBwbGVcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICB2LXRvdWNoOnRhcD1cImNsaWNrXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA6d2lkdGg9XCJzaXplXCIgXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgOmhlaWdodD1cInNpemVcIiBcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA6Y29sb3I9XCJiYWNrZ3JvdW5kQ29sb3JcIiBcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICBjbGFzcz1cInRpbGVcIiBcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA6Y2xhc3M9XCJjbGFzc2VzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA6c3R5bGU9XCJzdHlsZVwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtY2FyZC10ZXh0IDpzdHlsZT1cInsgY29sb3I6IHRleHRDb2xvciB9XCI+e3sgdGl0bGUgfX08L3YtY2FyZC10ZXh0PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtaW1nIHYtaWY9XCJzcmMgIT09IHVuZGVmaW5lZFwiIDpzcmM9XCJzcmNcIiB3aWR0aD1cIjE1MHB4XCIgaGVpZ2h0PVwiMTUwcHhcIiA6Y29sb3I9XCJiYWNrZ3JvdW5kQ29sb3JcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDwvdi1pbWc+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCc8L3YtY2FyZD5cXCcsXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcXCdcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXFwnXFwnLFxcclxcbiAgICAgICAgICAgICAgICBzaXplOiBgJHt3aW5kb3cuaW5uZXJXaWR0aCAvIDR9cHhgLFxcclxcbiAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6IFxcJyMwMDAwMDBcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGNoYW5nZWQ6IDAsXFxyXFxuICAgICAgICAgICAgICAgIHNyYzogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBhdWRpbzogW10sXFxyXFxuICAgICAgICAgICAgICAgIGNsYXNzZXM6IFtcXCdkZWZhdWx0XFwnXSxcXHJcXG4gICAgICAgICAgICAgICAgc3R5bGU6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgaW1hZ2VzOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgdXBkYXRlOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgdG86IFtdLFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgd2F0Y2g6IHtcXHJcXG4gICAgICAgICAgICBpbWFnZXM6IHtcXHJcXG4gICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKHZhbHVlKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zcmMgPSBcXCdcXCc7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKClcXHJcXG4gICAgICAgICAgICAgICAgICAgIGZpbGVSZWFkZXIub25sb2FkID0gKCkgPT4ge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3JjID0gZmlsZVJlYWRlci5yZXN1bHQ7XFxyXFxuICAgICAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgICAgICBmaWxlUmVhZGVyLnJlYWRBc0RhdGFVUkwodmFsdWVbMF0pO1xcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICBkZWVwOiB0cnVlXFxyXFxuICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRm9ybSBpZCB0byBpZGVudGlmeSBldmVudHMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVnaW9uOiBPYmplY3QsXFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZXZlbnRzOiB7XFxyXFxuICAgICAgICAgICAgaW5wdXRfY2hhbmdlOiBmdW5jdGlvbiAoZXZlbnQsIHZhbHVlKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuJHJvdXRlLnBhcmFtcztcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCEodmFsdWUgaW4gcGFyYW1zKSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHVwZGF0ZV9sZW5ndGggPSBPYmplY3Qua2V5cyh0aGlzLnVwZGF0ZSkubGVuZ3RoO1xcclxcbiAgICAgICAgICAgICAgICBsZXQgZm91bmQgPSB1bmRlZmluZWQ7XFxyXFxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXBkYXRlX2xlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb25zdCB1cGRhdGUgPSB0aGlzLnVwZGF0ZVtpXTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgICAgIGlmICh1cGRhdGUudmFsdWUgPT09IHZhbHVlKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgZm91bmQgPSB1cGRhdGU7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XFxyXFxuICAgICAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKGZvdW5kID09PSB1bmRlZmluZWQpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2ZvdW5kLmtleV0gPSBwYXJhbXNbdmFsdWVdO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBtb3VudGVkOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gSXRlcmF0ZSB0cm91Z2ggYWxsIGl0ZW1zIGFuZCBzZXQgdGhlbS5cXHJcXG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5yZW5kZXJFbGVtZW50KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcXHJcXG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIHVwZGF0ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICBjb25zdCBjb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcXCcub25lLWNvbHVtblxcJyk7XFxyXFxuICAgICAgICAgICAgY29uc3QgY29tcHV0ZWRXaWR0aCA9IGNvbnRhaW5lcnMub2Zmc2V0V2lkdGg7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gdG9kbzogTG9vayBpbnRvIHRoaXMuXFxyXFxuICAgICAgICAgICAgdGhpcy5zaXplID0gYCR7KHdpbmRvdy5pbm5lcldpZHRoIC0gNTApLyA0fXB4YFxcclxcbiAgICAgICAgICAgIHRoaXMuc3R5bGUubWFyZ2luID0gXFwnMnB4XFwnO1xcclxcblxcclxcbiAgICAgICAgICAgIC8qY29uc3Qgc29ydGFibGUgPSBuZXcgRHJhZ2dhYmxlLlN3YXBwYWJsZShjb250YWluZXJzLCB7XFxyXFxuICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogXFwnLnRpbGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgIG1pcnJvcjoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgYXBwZW5kVG86IFxcJy5vbmUtY29sdW1uXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWluRGltZW5zaW9uczogdHJ1ZSxcXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgcGx1Z2luczogW0RyYWdnYWJsZS5QbHVnaW5zLlN3YXBBbmltYXRpb25dLFxcclxcbiAgICAgICAgICAgICAgICBzb3J0QW5pbWF0aW9uOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwLFxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIH0pOyovXFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbWV0aG9kczoge1xcclxcbiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMudG8pXFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG5cXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvZWxlbWVudHMvY3NzL1RpbGUuY3NzYCwgY29tcG9uZW50Lm5hbWUpO1xcclxcblxcclxcbiAgICByZXR1cm4gY29tcG9uZW50O1xcclxcbn07Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9lbGVtZW50cy9Ecm9wZG93bi5qcycsICdNb2R1bGUgPT4ge1xcclxcbiAgICBjb25zdCBjb21wb25lbnQgPSB7XFxyXFxuICAgICAgICBuYW1lOiBcXCdEcm9wZG93blxcJyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJzx2LXNlbGVjdFxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgdi1tb2RlbD1cInZhbHVlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpsYWJlbD1cInRpdGxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpoaW50PVwiZGVzY3JpcHRpb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmFwcGVuZC1pY29uPVwiYXBwZW5kSWNvblwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YXBwZW5kLW91dGVyLWljb249XCJhcHBlbmRPdXRlckljb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmF0dGFjaD1cImF0dGFjaFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YXV0b2ZvY3VzPVwiYXV0b2ZvY3VzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpiYWNrZ3JvdW5kLWNvbG9yPVwiYmFja2dyb3VuZENvbG9yXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpjYWNoZS1pdGVtcz1cImNhY2hlSXRlbXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNoaXBzPVwiY2hpcHNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNsZWFyLWljb249XCJjbGVhckljb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNsZWFyYWJsZT1cImNsZWFyYWJsZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Y29sb3I9XCJjb2xvclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Y291bnRlcj1cImNvdW50ZXJcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNvdW50ZXItdmFsdWU9XCJjb3VudGVyVmFsdWVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmRhcms9XCJkYXJrXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkZWxldGFibGUtY2hpcHM9XCJkZWxldGFibGVDaGlwc1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZGVuc2U9XCJkZW5zZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZGlzYWJsZS1sb29rdXA9XCJkaXNhYmxlTG9va3VwXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkaXNhYmxlZD1cImRpc2FibGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDplYWdlcj1cImVhZ2VyXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDplcnJvcj1cImVycm9yXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDplcnJvci1jb3VudD1cImVycm9yQ291bnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmVycm9yLW1lc3NhZ2VzPVwiZXJyb3JNZXNzYWdlc1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZmlsbGVkPVwiZmlsbGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpmbGF0PVwiZmxhdFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZnVsbC13aWR0aD1cImZ1bGxXaWR0aFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aGVpZ2h0PVwiaGVpZ2h0XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpoaWRlLWRldGFpbHM9XCJoaWRlRGV0YWlsc1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aGlkZS1zZWxlY3RlZD1cImhpZGVTZWxlY3RlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aWQ9XCJpZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aXRlbS1jb2xvcj1cIml0ZW1Db2xvclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aXRlbS1kaXNhYmxlZD1cIml0ZW1EaXNhYmxlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aXRlbS10ZXh0PVwiaXRlbVRleHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOml0ZW0tdmFsdWU9XCJpdGVtVmFsdWVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOml0ZW1zPVwiaXRlbXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxpZ2h0PVwibGlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxvYWRlci1oZWlnaHQ9XCJsb2FkZXJIZWlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxvYWRpbmc9XCJsb2FkaW5nXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDptZW51LXByb3BzPVwibWVudVByb3BzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDptZXNzYWdlcz1cIm1lc3NhZ2VzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDptdWx0aXBsZT1cIm11bHRpcGxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpuby1kYXRhLXRleHQ9XCJub0RhdGFUZXh0XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpvcGVuLW9uLWNsZWFyPVwib3Blbk9uQ2xlYXJcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOm91dGxpbmVkPVwib3V0bGluZWRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnBlcnNpc3RlbnQtaGludD1cInBlcnNpc3RlbnRIaW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpwbGFjZWhvbGRlcj1cInBsYWNlaG9sZGVyXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpwcmVmaXg9XCJwcmVmaXhcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnByZXBlbmQtaWNvbj1cInByZXBlbmRJY29uXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpwcmVwZW5kLWlubmVyLWljb249XCJwcmVwZW5kSW5uZXJJY29uXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpyZWFkb25seT1cInJlYWRvbmx5XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpyZXR1cm4tb2JqZWN0PVwicmV0dXJuT2JqZWN0XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpyZXZlcnNlPVwicmV2ZXJzZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cm91bmRlZD1cInJvdW5kZWRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnJ1bGVzPVwicnVsZXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnNoYXBlZD1cInNoYXBlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6c2luZ2xlLWxpbmU9XCJzaW5nbGVMaW5lXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzbWFsbC1jaGlwcz1cInNtYWxsQ2hpcHNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnNvbG89XCJzb2xvXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzb2xvLWludmVydGVkPVwic29sb0ludmVydGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzdWNjZXNzPVwic3VjY2Vzc1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6c3VjY2Vzcy1tZXNzYWdlcz1cInN1Y2Nlc3NNZXNzYWdlc1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6c3VmZml4PVwic3VmZml4XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp0eXBlPVwidHlwZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6dmFsaWRhdGUtb24tYmx1cj1cInZhbGlkYXRlT25CbHVyXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJz48L3Ytc2VsZWN0PlxcJyxcXHJcXG4gICAgICAgIGRhdGEoKSB7XFxyXFxuICAgICAgICAgICAgcmV0dXJuIHtcXHJcXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgYXBwZW5kSWNvbjogXFwnJGRyb3Bkb3duXFwnLFxcclxcbiAgICAgICAgICAgICAgICBhcHBlbmRPdXRlckljb246IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgYXR0YWNoOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgYXV0b2ZvY3VzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGNhY2hlSXRlbXM6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBjaGlwczogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGNsZWFySWNvbjogXFwnJGNsZWFyXFwnLFxcclxcbiAgICAgICAgICAgICAgICBjbGVhcmFibGU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBjb2xvcjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBjb3VudGVyOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGNvdW50ZXJWYWx1ZTogbnVsbCxcXHJcXG4gICAgICAgICAgICAgICAgZGFyazogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGRlbGV0YWJsZUNoaXBzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZGVuc2U6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBkaXNhYmxlTG9va3VwOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBlYWdlcjogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGVycm9yOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZXJyb3JDb3VudDogMSxcXHJcXG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlczogW10sXFxyXFxuICAgICAgICAgICAgICAgIGZpbGxlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGZsYXQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBmdWxsV2lkdGg6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgaGlkZURldGFpbHM6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgaGlkZVNlbGVjdGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgaGludDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBpZDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBpdGVtQ29sb3I6IFxcJ3ByaW1hcnlcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGl0ZW1EaXNhYmxlZDogXCJkaXNhYmxlZFwiLFxcclxcbiAgICAgICAgICAgICAgICBpdGVtVGV4dDogXCJ0ZXh0XCIsXFxyXFxuICAgICAgICAgICAgICAgIGl0ZW1WYWx1ZTogXCJ2YWx1ZVwiLFxcclxcbiAgICAgICAgICAgICAgICBpdGVtczogW10sXFxyXFxuICAgICAgICAgICAgICAgIGxhYmVsOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGxpZ2h0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbG9hZGVySGVpZ2h0OiBcIjJcIixcXHJcXG4gICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIG1lbnVQcm9wczoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnY2xvc2VPbkNsaWNrXFwnOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ2Nsb3NlT25Db250ZW50Q2xpY2tcXCc6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnZGlzYWJsZUtleXNcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCdvcGVuT25DbGlja1xcJzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCdtYXhIZWlnaHRcXCc6IDMwNFxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICBtZXNzYWdlczogW10sXFxyXFxuICAgICAgICAgICAgICAgIG11bHRpcGxlOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbm9EYXRhVGV4dDogXFwnJHZ1ZXRpZnkubm9EYXRhVGV4dFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgb3Blbk9uQ2xlYXI6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBvdXRsaW5lZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHBlcnNpc3RlbnRIaW50OiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBwcmVmaXg6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgcHJlcGVuZEljb246IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgcHJlcGVuZElubmVySWNvbjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICByZWFkb25seTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHJldHVybk9iamVjdDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHJldmVyc2U6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByb3VuZGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcnVsZXM6IFtdLFxcclxcbiAgICAgICAgICAgICAgICBzaGFwZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzaW5nbGVMaW5lOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc21hbGxDaGlwczogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHNvbG86IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzb2xvSW52ZXJ0ZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc3VjY2Vzc01lc3NhZ2VzOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgc3VmZml4OiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIHR5cGU6IFxcJ3RleHRcXCcsXFxyXFxuICAgICAgICAgICAgICAgIHZhbGlkYXRlT25CbHVyOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICB9O1xcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIHByb3BzOiB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIFJlbmRlciBlbGVtZW50LiBVc3VhbGx5IGFuIGFycmF5IHdpdGgga2V5IHZhbHVlIHBhaXJzIGZvciBvcHRpb25zLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlbmRlckVsZW1lbnQ6IE9iamVjdCxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRWxlbWVudCBrZXkuIFRoZSBrZXkgcHJvdmlkZWQgdG8gbWFwIHN1Ym1pdHRlZCB2YWx1ZXMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgZWxlbWVudDogU3RyaW5nLFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBGb3JtIGlkIHRvIGlkZW50aWZ5IGV2ZW50cy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZWdpb246IE9iamVjdCxcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICB3YXRjaDoge1xcclxcbiAgICAgICAgICAgIHZhbHVlOiB7XFxyXFxuICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICh2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zW3RoaXMuZWxlbWVudF0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHRyaWdnZXIoXFwnaW5wdXRfY2hhbmdlXFwnLCB0aGlzLmVsZW1lbnQpO1xcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICBkZWVwOiB0cnVlXFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBJdGVyYXRlIHRyb3VnaCBhbGwgaXRlbXMgYW5kIHNldCB0aGVtLlxcclxcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnJlbmRlckVsZW1lbnQpO1xcclxcblxcclxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVuZGVyRWxlbWVudFtrZXldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0ga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KGRhdGFLZXkpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbGVtZW50IGlzIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5ldyB2YWx1ZS5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1trZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpXSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICBjb25zdCBpbmZvID0gdGhpcy5yZWdpb24ucmVnaW9uUmF3LmluZm87XFxyXFxuXFxyXFxuICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zW3RoaXMuZWxlbWVudF0gPSB0aGlzLnZhbHVlO1xcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvSGVhZGxpbmUuanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnUy1IZWFkbGluZVxcJyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJzx2LWNhcmQgZmxhdD5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1jYXJkLXRpdGxlIHYtaWY9XCJ0aXRsZVwiIHYtaHRtbD1cInRpdGxlXCIvPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LWNhcmQtc3VidGl0bGUgdi1pZj1cImRlc2NyaXB0aW9uXCIgdi1odG1sPVwiZGVzY3JpcHRpb25cIi8+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCc8L3YtY2FyZD5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgc2l6ZTogMSxcXHJcXG4gICAgICAgICAgICB9O1xcclxcbiAgICAgICAgfSxcXHJcXG5cXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBJdGVyYXRlIHRyb3VnaCBhbGwgaXRlbXMgYW5kIHNldCB0aGVtLlxcclxcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnJlbmRlckVsZW1lbnQpO1xcclxcblxcclxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVuZGVyRWxlbWVudFtrZXldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0ga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KGRhdGFLZXkpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbGVtZW50IGlzIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5ldyB2YWx1ZS5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1trZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpXSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH0sXFxyXFxuICAgIH07XFxyXFxuXFxyXFxuICAgIHJldHVybiBjb21wb25lbnQ7XFxyXFxufTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL0ltYWdlLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1MtSW1hZ2VFZGl0b3JcXCcsXFxyXFxuICAgICAgICB0ZW1wbGF0ZTpcXHJcXG4gICAgICAgICAgICBcXCc8ZGl2IGNsYXNzPVwidGlsZS1pbWFnZS1lZGl0b3IgbWItNSBweC0yXCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPGRpdj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDxpbWcgaWQ9XCJ0aWxlLWltYWdlXCIgOnNyYz1cImltYWdlXCIgQGxvYWQ9XCJsb2FkZWRcIiAvPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDwvZGl2PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LWJ0biBjbGFzcz1cImltYWdlLWVkaXRvci1pdGVtXCIgb3V0bGluZWQgOmxvYWRpbmc9XCJsb2FkaW5nXCIgYmxvY2sgdGlsZSBjb2xvcj1cInN1Y2Nlc3NcIiBAY2xpY2s9XCJhcHBseVwiPkFwcGx5PC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgPC9kaXY+XFwnLFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIHZhbHVlOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgY3JvcHBlcjogbnVsbCxcXHJcXG4gICAgICAgICAgICAgICAgaW1hZ2U6IG51bGwsXFxyXFxuICAgICAgICAgICAgICAgIGZpbGVzOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgdG86IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBtb3VudGVkOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gSXRlcmF0ZSB0cm91Z2ggYWxsIGl0ZW1zIGFuZCBzZXQgdGhlbS5cXHJcXG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5yZW5kZXJFbGVtZW50KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnJlbmRlckVsZW1lbnRba2V5XTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YUtleSA9IGtleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGRhdGEgaXMgbWFwcGFibGUuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5oYXNPd25Qcm9wZXJ0eShkYXRhS2V5KSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZWxlbWVudCBpcyBlbXB0eS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gU2V0IHRoZSBuZXcgdmFsdWUuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXNba2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKV0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gRXhpdCBpZiBlbXB0eS5cXHJcXG4gICAgICAgICAgICBpZiAoIXRoaXMuZmlsZXMubGVuZ3RoKSB7XFxyXFxuICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgdHJ5IHtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5pbWFnZSA9IFVSTC5jcmVhdGVPYmplY3RVUkwodGhpcy5maWxlc1swXSk7XFxyXFxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xcclxcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJPYmplY3QgdXJsIGNvdWxkIG5vdCBiZSByZWFkLlwiKTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbWV0aG9kczoge1xcclxcbiAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24gKCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAoIShcXCdwYXJhbXNcXCcgaW4gdGhpcy50bykpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudG8ucGFyYW1zID0ge307XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy50by5wYXJhbXMgPSBPYmplY3QuYXNzaWduKFxcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50by5wYXJhbXMsXFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZS5wYXJhbXNcXHJcXG4gICAgICAgICAgICAgICAgKTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMudG8pXFxyXFxuICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICBhcHBseTogZnVuY3Rpb24gKCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY3JvcHBlcikge1xcclxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuY3JvcHBlci5nZXRDcm9wcGVkQ2FudmFzKHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIG1heFdpZHRoOiA0MDk2LFxcclxcbiAgICAgICAgICAgICAgICAgICAgbWF4SGVpZ2h0OiA0MDk2LFxcclxcbiAgICAgICAgICAgICAgICAgICAgZmlsbENvbG9yOiBcIiNmZmZcIixcXHJcXG4gICAgICAgICAgICAgICAgICAgIGltYWdlU21vb3RoaW5nRW5hYmxlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgICAgICBpbWFnZVNtb290aGluZ1F1YWxpdHk6IFwiaGlnaFwiXFxyXFxuICAgICAgICAgICAgICAgIH0pO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICB0aGlzLmNyb3BwZXIuZ2V0Q3JvcHBlZENhbnZhcygpLnRvQmxvYihibG9iID0+IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudmFsdWUgPSBbXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEZpbGUoW2Jsb2JdLCBgZWRpdGVkX2ltYWdlLiR7RGF0ZS5ub3coKX1gKVxcclxcbiAgICAgICAgICAgICAgICAgICAgXTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlLnBhcmFtc1t0aGlzLmVsZW1lbnRdID0gdGhpcy52YWx1ZTtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3VibWl0KCk7XFxyXFxuICAgICAgICAgICAgICAgIH0sIFxcJ2ltYWdlL3BuZ1xcJywgMTAwKTtcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIGxvYWRlZDogZnVuY3Rpb24gKCkge1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLmNyb3BwZXIgPSBuZXcgQ3JvcHBlcihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RpbGUtaW1hZ2VcIiksIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGFzcGVjdFJhdGlvOiAxLFxcclxcbiAgICAgICAgICAgICAgICAgICAgdmlld01vZGU6IDEsXFxyXFxuICAgICAgICAgICAgICAgICAgICBhdXRvQ3JvcDogdHJ1ZVxcclxcbiAgICAgICAgICAgICAgICB9KTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9XFxyXFxuICAgIH07XFxyXFxuXFxyXFxuICAgIE1vZHVsZS5hcHBlbmRTdHlsZShgc3JjL2VsZW1lbnRzL2Nzcy9JbWFnZS5jc3NgLCBjb21wb25lbnQubmFtZSk7XFxyXFxuXFxyXFxuICAgIHJldHVybiBjb21wb25lbnQ7XFxyXFxufTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL1BhcmFncmFwaC5qcycsICdNb2R1bGUgPT4ge1xcclxcbiAgICBjb25zdCBjb21wb25lbnQgPSB7XFxyXFxuICAgICAgICBuYW1lOiBcXCdTLVBhcmFncmFwaFxcJyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJyAgPHYtY2FyZFxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmZsYXQ9XCJmbGF0XCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPHYtY2FyZC10aXRsZSB2LWh0bWw9XCJ0aXRsZVwiLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1jYXJkLXN1YnRpdGxlIHYtaHRtbD1cImRlc2NyaXB0aW9uXCIvPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LWNhcmQtdGV4dCA6c3R5bGU9XCJ7IGNvbG9yOiB0ZXh0Q29sb3IgfVwiIHYtaHRtbD1cInZhbHVlXCIvPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICA8L3YtY2FyZD5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgdmFsdWU6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIGZsYXQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB0ZXh0Q29sb3I6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIHVwZGF0ZTogW10sXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBldmVudHM6IHtcXHJcXG4gICAgICAgICAgICBpbnB1dF9jaGFuZ2U6IGZ1bmN0aW9uIChldmVudCwgdmFsdWUpIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4kcm91dGUucGFyYW1zO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAoISh2YWx1ZSBpbiBwYXJhbXMpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlX2xlbmd0aCA9IE9iamVjdC5rZXlzKHRoaXMudXBkYXRlKS5sZW5ndGg7XFxyXFxuICAgICAgICAgICAgICAgIGxldCBmb3VuZCA9IHVuZGVmaW5lZDtcXHJcXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1cGRhdGVfbGVuZ3RoOyBpKyspIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVwZGF0ZSA9IHRoaXMudXBkYXRlW2ldO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVwZGF0ZS52YWx1ZSA9PT0gdmFsdWUpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICBmb3VuZCA9IHVwZGF0ZTtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAoZm91bmQgPT09IHVuZGVmaW5lZCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXNbZm91bmQua2V5XSA9IHBhcmFtc1t2YWx1ZV07XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBJdGVyYXRlIHRyb3VnaCBhbGwgaXRlbXMgYW5kIHNldCB0aGVtLlxcclxcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnJlbmRlckVsZW1lbnQpO1xcclxcblxcclxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVuZGVyRWxlbWVudFtrZXldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0ga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KGRhdGFLZXkpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbGVtZW50IGlzIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUuY29uc3RydWN0b3IubmFtZSA9PT0gXFwnU3RyaW5nXFwnICYmIHZhbHVlLmluY2x1ZGVzKFxcJ35cXCcpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZS5wdXNoKHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGtleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyksXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLnJlcGxhY2UoXFwnflxcJywgXFwnXFwnKVxcclxcbiAgICAgICAgICAgICAgICAgICAgfSk7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5ldyB2YWx1ZS5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1trZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpXSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH0sXFxyXFxuICAgIH07XFxyXFxuICAgIFxcclxcbiAgICBNb2R1bGUuYXBwZW5kU3R5bGUoYHNyYy9lbGVtZW50cy9jc3MvUGFyYWdyYXBoLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvUmVkaXJlY3RCdXR0b24uanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnUy1SZWRpcmVjdC1CdXR0b25cXCcsXFxyXFxuICAgICAgICB0ZW1wbGF0ZTpcXHJcXG4gICAgICAgICAgICBcXCc8di1idG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIHYtaWY9XCJzaG93XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIEBjbGljaz1cInN1Ym1pdFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YWJzb2x1dGU9XCJhYnNvbHV0ZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YWN0aXZlLWNsYXNzPVwiYWN0aXZlQ2xhc3NcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmFwcGVuZD1cImFwcGVuZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6YmxvY2s9XCJibG9ja1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Ym90dG9tPVwiYm90dG9tXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpjb2xvcj1cImNvbG9yXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkYXJrPVwiZGFya1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZGVwcmVzc2VkPVwiZGVwcmVzc2VkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkaXNhYmxlZD1cImRpc2FibGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDplbGV2YXRpb249XCJlbGV2YXRpb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmV4YWN0PVwiZXhhY3RcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmV4YWN0LWFjdGl2ZS1jbGFzcz1cImV4YWN0QWN0aXZlQ2xhc3NcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmZhYj1cImZhYlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Zml4ZWQ9XCJmaXhlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aGVpZ2h0PVwiaGVpZ2h0XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpocmVmPVwiaHJlZlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aWNvbj1cImljb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmlucHV0LXZhbHVlPVwiaW5wdXRWYWx1ZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bGFyZ2U9XCJsYXJnZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bGVmdD1cImxlZnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxpZ2h0PVwibGlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxpbms9XCJsaW5rXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpsb2FkaW5nPVwibG9hZGluZ1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bWF4LWhlaWdodD1cIm1heEhlaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bWF4LXdpZHRoPVwibWF4V2lkdGhcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOm1pbi1oZWlnaHQ9XCJtaW5IZWlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOm1pbi13aWR0aD1cIm1pbldpZHRoXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpudXh0PVwibnV4dFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6b3V0bGluZWQ9XCJvdXRsaW5lZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmVwbGFjZT1cInJlcGxhY2VcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnJldGFpbi1mb2N1cy1vbi1jbGljaz1cInJldGFpbkZvY3VzT25DbGlja1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmlnaHQ9XCJyaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmlwcGxlPVwicmlwcGxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpyb3VuZGVkPVwicm91bmRlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6c2hhcGVkPVwic2hhcGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzbWFsbD1cInNtYWxsXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp0YWc9XCJ0YWdcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnRhcmdldD1cInRhcmdldFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6dGV4dD1cInRleHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnRpbGU9XCJ0aWxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp0b3A9XCJ0b3BcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnR5cGU9XCJ0eXBlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp2YWx1ZT1cInZhbHVlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp3aWR0aD1cIndpZHRoXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp4LWxhcmdlPVwieExhcmdlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDp4LXNtYWxsPVwieFNtYWxsXCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgPHYtaWNvbiBsZWZ0IHYtaWY9XCJhcHBlbmRJY29uXCI+e3sgYXBwZW5kSWNvbiB9fTwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgIDx2LWljb24gdi1pZj1cImNlbnRlckljb25cIj57eyBjZW50ZXJJY29uIH19PC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgPGRpdiB2LWVsc2U+e3sgdGl0bGUgfX08L2Rpdj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA8di1pY29uIHJpZ2h0IHYtaWY9XCJwcmVwZW5kSWNvblwiPnt7IHByZXBlbmRJY29uIH19PC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCc8L3YtYnRuPlxcJyxcXHJcXG4gICAgICAgIHByb3BzOiB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIFJlbmRlciBlbGVtZW50LiBVc3VhbGx5IGFuIGFycmF5IHdpdGgga2V5IHZhbHVlIHBhaXJzIGZvciBvcHRpb25zLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlbmRlckVsZW1lbnQ6IE9iamVjdCxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRWxlbWVudCBrZXkuIFRoZSBrZXkgcHJvdmlkZWQgdG8gbWFwIHN1Ym1pdHRlZCB2YWx1ZXMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgZWxlbWVudDogU3RyaW5nLFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIGV2ZW50czoge1xcclxcbiAgICAgICAgICAgIGlucHV0X2NoYW5nZTogZnVuY3Rpb24gKGV2ZW50LCB2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiRyb3V0ZS5wYXJhbXM7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghKHZhbHVlIGluIHBhcmFtcykpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICBjb25zdCB1cGRhdGVfbGVuZ3RoID0gT2JqZWN0LmtleXModGhpcy51cGRhdGUpLmxlbmd0aDtcXHJcXG4gICAgICAgICAgICAgICAgbGV0IGZvdW5kID0gdW5kZWZpbmVkO1xcclxcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVwZGF0ZV9sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdXBkYXRlID0gdGhpcy51cGRhdGVbaV07XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgICAgICBpZiAodXBkYXRlLnZhbHVlID09PSB2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdXBkYXRlO1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGlmIChmb3VuZCA9PT0gdW5kZWZpbmVkKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1tmb3VuZC5rZXldID0gcGFyYW1zW3ZhbHVlXTtcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgd2F0Y2g6IHtcXHJcXG4gICAgICAgICAgICB2aWY6IHtcXHJcXG4gICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKHZhbHVlKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3cgPSB2YWx1ZS5sZW5ndGggIT09IDA7XFxyXFxuICAgICAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIGRlZXA6IHRydWVcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgdmlmOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICBzaG93OiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICBhcHBlbmRJY29uOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcHJlcGVuZEljb246IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBjZW50ZXJJY29uOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgYWJzb2x1dGU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBhY3RpdmVDbGFzczogXFwnXFwnLFxcclxcbiAgICAgICAgICAgICAgICBhcHBlbmQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBibG9jazogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGJvdHRvbTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGNvbG9yOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGRhcms6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBkZXByZXNzZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGVsZXZhdGlvbjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBleGFjdDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGV4YWN0QWN0aXZlQ2xhc3M6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgZmFiOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZml4ZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgaHJlZjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBpY29uOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgaW5wdXRWYWx1ZTogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBsYXJnZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGxlZnQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBsaWdodDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGxpbms6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbWF4SGVpZ2h0OiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIG1heFdpZHRoOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIG1pbkhlaWdodDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBtaW5XaWR0aDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBudXh0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgb3V0bGluZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByZXBsYWNlOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcmV0YWluRm9jdXNPbkNsaWNrOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcmlnaHQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByaXBwbGU6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgcm91bmRlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHNoYXBlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHNtYWxsOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgdGFnOiBcImJ1dHRvblwiLFxcclxcbiAgICAgICAgICAgICAgICB0YXJnZXQ6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgdGV4dDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHRpbGU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB0bzogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICB0b3A6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJ1dHRvblwiLFxcclxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICB3aWR0aDogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICB4TGFyZ2U6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB4U21hbGw6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICB1cGRhdGU6IFtdXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBtb3VudGVkOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLy8gSXRlcmF0ZSB0cm91Z2ggYWxsIGl0ZW1zIGFuZCBzZXQgdGhlbS5cXHJcXG4gICAgICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXModGhpcy5yZW5kZXJFbGVtZW50KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcXHJcXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcXHJcXG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lID09PSBcXCdTdHJpbmdcXCcgJiYgdmFsdWUuaW5jbHVkZXMoXFwnflxcJykpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlLnB1c2goe1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleToga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUucmVwbGFjZShcXCd+XFwnLCBcXCdcXCcpXFxyXFxuICAgICAgICAgICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgICAgIGlmIChrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpIGluIHRoaXMgJiYgdmFsdWUucmVwbGFjZShcXCd+XFwnLCBcXCdcXCcpIGluIHRoaXMuJHJvdXRlLnBhcmFtcykge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gdGhpcy4kcm91dGUucGFyYW1zW3ZhbHVlLnJlcGxhY2UoXFwnflxcJywgXFwnXFwnKV07XFxyXFxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1ldGhvZHM6IHtcXHJcXG4gICAgICAgICAgICBzdWJtaXQ6IGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKCEoXFwncGFyYW1zXFwnIGluIHRoaXMudG8pKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRvLnBhcmFtcyA9IHt9O1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIHRoaXMudG8ucGFyYW1zID0gT2JqZWN0LmFzc2lnbihcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudG8ucGFyYW1zLFxcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zXFxyXFxuICAgICAgICAgICAgICAgICk7XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMudG8pXFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfVxcclxcbiAgICB9O1xcclxcbiAgICBNb2R1bGUuYXBwZW5kU3R5bGUoYHNyYy9lbGVtZW50cy9jc3MvQnV0dG9uLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvU291bmQuanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnUy1Tb3VuZFxcJyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJzxkaXY+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPHYtdG9vbGJhciBjb2xvcj1cInNlY29uZGFyeVwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtYnRuIHYtaWY9XCJzdGF0ZSA9PT0gXFxcXFxcJ3BhdXNlXFxcXFxcJ1wiIGljb24gQGNsaWNrPVwicGxheVwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8di1pY29uIGNvbG9yPVwiYWNjZW50XCI+cGxheV9hcnJvdzwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LWJ0biB2LWlmPVwic3RhdGUgPT09IFxcXFxcXCdwbGF5XFxcXFxcJ1wiIGljb24gQGNsaWNrPVwicGF1c2VcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgPHYtaWNvbiBjb2xvcj1cImFjY2VudFwiPnBhdXNlPC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8L3YtYnRuPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtYnRuIGljb24gQGNsaWNrPVwic3RvcFwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8di1pY29uIGNvbG9yPVwiYWNjZW50XCI+c3RvcDwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJ1xcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCdcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LWJ0biB2LWlmPVwiY3Vyc29yICE9PSBcXFxcXFwnY3Vyc29yXFxcXFxcJ1wiIGljb24gQGNsaWNrPVwic3RhdGVjaGFuZ2UoXFxcXFxcJ2N1cnNvclxcXFxcXCcpXCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDx2LWljb24gY29sb3I9XCJhY2NlbnRcIj5teV9sb2NhdGlvbjwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LWJ0biB2LWlmPVwiY3Vyc29yICE9PSBcXFxcXFwnc2hpZnRcXFxcXFwnXCIgaWNvbiBAY2xpY2s9XCJzdGF0ZWNoYW5nZShcXFxcXFwnc2hpZnRcXFxcXFwnKVwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8di1pY29uIGNvbG9yPVwiYWNjZW50XCI+b3Blbl93aXRoPC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8L3YtYnRuPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8di1idG4gdi1pZj1cImN1cnNvciAhPT0gXFxcXFxcJ3NlbGVjdFxcXFxcXCdcIiBpY29uIEBjbGljaz1cInN0YXRlY2hhbmdlKFxcXFxcXCdzZWxlY3RcXFxcXFwnKVwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8di1pY29uIGNvbG9yPVwiYWNjZW50XCI+c2VsZWN0X2FsbDwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8L3YtdG9vbGJhcj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJ1xcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPGRpdiBjbGFzcz1cIm15LTRcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1zbGlkZXJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdi1pZj1cIlBsYXlsaXN0XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgY2xhc3M9XCJteS0xMCBhdWRpby1lZGl0b3ItaXRlbVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIGNvbG9yPVwiYWNjZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdGh1bWItY29sb3I9XCJhY2NlbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICB0cmFjay1maWxsLWNvbG9yPVwiYWNjZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgYXBwZW5kLWljb249XCJ2b2x1bWVfdXBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBwcmVwZW5kLWljb249XCJ2b2x1bWVfZG93blwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIHYtbW9kZWw9XCJNYXN0ZXJWb2x1bWVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA6bWluPVwiMVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDptYXg9XCIxMDBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBsYWJlbD1cIlZvbHVtZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIGhpbnQ9XCJDaGFuZ2UgdGhlIHZvbHVtZSBvZiB0aGUgcGxheWVkIHRpbGUuXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgcGVyc2lzdGVudC1oaW50XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDwvZGl2PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPGRpdiBpZD1cInBsYXlsaXN0XCIgY2xhc3M9XCJtdC00IG1iLTEwXCI+PC9kaXY+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCdcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDxkaXYgY2xhc3M9XCJtdC0zIG1iLTdcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1zbGlkZXJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdi1pZj1cIlBsYXlsaXN0ICYmIGN1cnNvciA9PT0gXFxcXFxcJ2N1cnNvclxcXFxcXCdcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBjbGFzcz1cImF1ZGlvLWVkaXRvci1pdGVtIGV4dHJhXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdi1tb2RlbD1cIkN1cnNvclBvc2l0aW9uXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgY29sb3I9XCJhY2NlbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICB0aHVtYi1jb2xvcj1cImFjY2VudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIHRyYWNrLWZpbGwtY29sb3I9XCJhY2NlbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA6bWluPVwiMFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDptYXg9XCJ0aGlzLkN1cnNvclBvc2l0aW9uTWF4XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgOnN0ZXA9XCIwLjFcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBsYWJlbD1cIkN1cnNvclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIGhpbnQ9XCJTZXQgdGhlIGN1cnNvciBhdCB0aGUgcG9zaXRpb24geW91IHdhbnQgdG8gc3RhcnQgcGxheWluZyBmcm9tLlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIHRodW1iLWxhYmVsPVwiYWx3YXlzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgcGVyc2lzdGVudC1oaW50XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1yYW5nZS1zbGlkZXJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdi1pZj1cIlBsYXlsaXN0ICYmIGN1cnNvciA9PT0gXFxcXFxcJ3NlbGVjdFxcXFxcXCdcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBjbGFzcz1cImF1ZGlvLWVkaXRvci1pdGVtIGV4dHJhXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdi1tb2RlbD1cIlNlbGVjdGlvblNlZ21lbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBjb2xvcj1cImFjY2VudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIHRodW1iLWNvbG9yPVwiYWNjZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdHJhY2stZmlsbC1jb2xvcj1cImFjY2VudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDptaW49XCIwXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgOm1heD1cInRoaXMuU2VsZWN0aW9uU2VnbWVudE1heFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDpzdGVwPVwic3RlcFNpemVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBsYWJlbD1cIlNlbGVjdFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIGhpbnQ9XCJTZWxlY3QgdGhlIHNlY3Rpb24geW91IHdhbnQgdG8gY3V0LlwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIHRodW1iLWxhYmVsPVwiYWx3YXlzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgcGVyc2lzdGVudC1oaW50XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDwvZGl2PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPHYtYnRuIHYtaWY9XCJQbGF5bGlzdCAmJiBjdXJzb3IgPT09IFxcXFxcXCdzZWxlY3RcXFxcXFwnXCIgYmxvY2sgZGVwcmVzc2VkIEBjbGljaz1cInRyaW1cIiBjb2xvcj1cInNlY29uZGFyeVwiPlRyaW08L3YtYnRuPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPHYtdG9vbGJhciB2LWlmPVwiY3Vyc29yID09PSBcXFxcXFwnc2hpZnRcXFxcXFwnXCIgY2xhc3M9XCJhdWRpby1lZGl0b3ItaXRlbSBtdC02XCIgY29sb3I9XCJzZWNvbmRhcnlcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LWJ0biBpY29uIEBjbGljaz1cImFsaWduTGVmdFwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8di1pY29uIGNvbG9yPVwiYWNjZW50XCI+Zm9ybWF0X2FsaWduX2xlZnQ8L3YtaWNvbj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDwvdi1idG4+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCdcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8di1idG4gaWNvbiBAY2xpY2s9XCJtb3ZlTGVmdFwiPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICA8di1pY29uIGNvbG9yPVwiYWNjZW50XCI+Y2hldnJvbl9sZWZ0PC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8L3YtYnRuPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtYnRuIGljb24gQGNsaWNrPVwibW92ZVJpZ2h0XCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDx2LWljb24gY29sb3I9XCJhY2NlbnRcIj5jaGV2cm9uX3JpZ2h0PC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA8L3YtYnRuPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDwvdi10b29sYmFyPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgPHYtYnRuIGNsYXNzPVwibWItM1wiIGJsb2NrIGNvbG9yPVwic3VjY2Vzc1wiIDpsb2FkaW5nPVwibG9hZGluZ1wiIG91dGxpbmVkIEBjbGljaz1cInNhdmVcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICA8di1pY29uIGxlZnQ+c2F2ZTwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgIFNhdmVcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDwvdi1idG4+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgIDwvZGl2PlxcJyxcXHJcXG4gICAgICAgIHByb3BzOiB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIFJlbmRlciBlbGVtZW50LiBVc3VhbGx5IGFuIGFycmF5IHdpdGgga2V5IHZhbHVlIHBhaXJzIGZvciBvcHRpb25zLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlbmRlckVsZW1lbnQ6IE9iamVjdCxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRWxlbWVudCBrZXkuIFRoZSBrZXkgcHJvdmlkZWQgdG8gbWFwIHN1Ym1pdHRlZCB2YWx1ZXMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgZWxlbWVudDogU3RyaW5nLFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIGRhdGEoKSB7XFxyXFxuICAgICAgICAgICAgcmV0dXJuIHtcXHJcXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxcclxcblxcclxcbiAgICAgICAgICAgICAgICB3aW5kb3csXFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8qKiBAdHlwZSB7RG9jdW1lbnR9ICovXFxyXFxuICAgICAgICAgICAgICAgIGRvY3VtZW50LFxcclxcbiAgICAgICAgICAgICAgICBzdGF0ZTogXCJwYXVzZVwiLFxcclxcbiAgICAgICAgICAgICAgICBjdXJzb3I6IFwiY3Vyc29yXCIsXFxyXFxuICAgICAgICAgICAgICAgIHN0ZXBTaXplOiAwLjEsXFxyXFxuICAgICAgICAgICAgICAgIHRyaW1tZWQ6IFswLCAwXSxcXHJcXG4gICAgICAgICAgICAgICAgTWFzdGVyVm9sdW1lOiA1MCxcXHJcXG4gICAgICAgICAgICAgICAgQ3Vyc29yUG9zaXRpb246IDAsXFxyXFxuICAgICAgICAgICAgICAgIEN1cnNvclBvc2l0aW9uTWF4OiAwLFxcclxcbiAgICAgICAgICAgICAgICBTZWxlY3Rpb25TZWdtZW50OiBbMCwgMF0sXFxyXFxuICAgICAgICAgICAgICAgIFBsYXlsaXN0OiBudWxsLFxcclxcbiAgICAgICAgICAgICAgICBFdmVudEVtaXR0ZXI6IG51bGwsXFxyXFxuICAgICAgICAgICAgICAgIGZpbGVzOiBbXSxcXHJcXG4gICAgICAgICAgICAgICAgbG9hZGluZzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHRvOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICB3YXRjaDoge1xcclxcbiAgICAgICAgICAgIE1hc3RlclZvbHVtZTogZnVuY3Rpb24gKHZhbCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAodmFsICYmIHRoaXMuUGxheWxpc3QpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRXZlbnRFbWl0dGVyLmVtaXQoXCJtYXN0ZXJ2b2x1bWVjaGFuZ2VcIiwgdmFsKTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgQ3Vyc29yUG9zaXRpb246IGZ1bmN0aW9uICh2YWwpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKHZhbCAmJiB0aGlzLlBsYXlsaXN0KSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5lbWl0KFwic2V0Y3Vyc29ycG9zaXRpb25cIiwgdmFsKTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgU2VsZWN0aW9uU2VnbWVudDogZnVuY3Rpb24gKHZhbCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAodmFsICYmIHRoaXMuUGxheWxpc3QpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRXZlbnRFbWl0dGVyLmVtaXQoXCJzZWxlY3RcIiwgdmFsWzBdLCB2YWxbMV0pO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBJdGVyYXRlIHRyb3VnaCBhbGwgaXRlbXMgYW5kIHNldCB0aGVtLlxcclxcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnJlbmRlckVsZW1lbnQpO1xcclxcblxcclxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVuZGVyRWxlbWVudFtrZXldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0ga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KGRhdGFLZXkpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbGVtZW50IGlzIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5ldyB2YWx1ZS5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1trZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpXSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBGSVhNRTogVGhpcyB3YXMgY3JlYXRlZCBieSBtZS5cXHJcXG4gICAgICAgICAgICAvLyBlZS5vbihcXCdzZXRjdXJzb3Jwb3NpdGlvblxcJywgZnVuY3Rpb24gKHN0YXJ0KSB7XFxyXFxuICAgICAgICAgICAgLy8gICAgIF90aGlzMi5zZXRUaW1lU2VsZWN0aW9uKHN0YXJ0LCBzdGFydCk7XFxyXFxuICAgICAgICAgICAgLy8gICAgIF90aGlzMi5kcmF3UmVxdWVzdCgpO1xcclxcbiAgICAgICAgICAgIC8vIH0pO1xcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMuUGxheWxpc3QgPSBXYXZlZm9ybVBsYXlsaXN0LmluaXQoe1xcclxcbiAgICAgICAgICAgICAgICBzYW1wbGVzUGVyUGl4ZWw6IDMwMDAsXFxyXFxuICAgICAgICAgICAgICAgIG1vbm86IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgIHdhdmVIZWlnaHQ6IDcwLFxcclxcbiAgICAgICAgICAgICAgICBjb250YWluZXI6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheWxpc3RcIiksXFxyXFxuICAgICAgICAgICAgICAgIHN0YXRlOiBcImN1cnNvclwiLFxcclxcbiAgICAgICAgICAgICAgICBjb2xvcnM6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHdhdmVPdXRsaW5lQ29sb3I6IFxcJyMwMDAwRkZcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICB0aW1lQ29sb3I6IFxcJyNGRjAwRkZcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBmYWRlQ29sb3I6IFxcJyMwMDAwMDBcXCdcXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgc2Vla1N0eWxlOiBcImxpbmVcIixcXHJcXG4gICAgICAgICAgICAgICAgem9vbUxldmVsczogW1xcclxcbiAgICAgICAgICAgICAgICAgICAgNTAwLFxcclxcbiAgICAgICAgICAgICAgICAgICAgMTAwMCxcXHJcXG4gICAgICAgICAgICAgICAgICAgIDMwMDAsXFxyXFxuICAgICAgICAgICAgICAgICAgICA1MDAwXFxyXFxuICAgICAgICAgICAgICAgIF1cXHJcXG4gICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICB3aW5kb3cuUGxheWxpc3QgPSB0aGlzLlBsYXlsaXN0O1xcclxcblxcclxcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuUGxheWxpc3QubG9hZChbXSk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgdGhpcy5QbGF5bGlzdC5pbml0RXhwb3J0ZXIoKTtcXHJcXG4gICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlciA9IHRoaXMuUGxheWxpc3QuZ2V0RXZlbnRFbWl0dGVyKCk7XFxyXFxuICAgICAgICAgICAgdGhpcy5DdXJzb3JQb3NpdGlvbk1heCA9IHRoaXMuUGxheWxpc3QuZHVyYXRpb247XFxyXFxuICAgICAgICAgICAgdGhpcy5TZWxlY3Rpb25TZWdtZW50TWF4ID0gdGhpcy5QbGF5bGlzdC5kdXJhdGlvbjtcXHJcXG5cXHJcXG4gICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5vbihcImZpbmlzaGVkXCIsICgpID0+IHtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFwicGF1c2VcIjtcXHJcXG4gICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5vbihcImF1ZGlvc291cmNlc3JlbmRlcmVkXCIsICgpID0+IHtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5DdXJzb3JQb3NpdGlvbk1heCA9IHRoaXMuUGxheWxpc3QuZHVyYXRpb247XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0aW9uU2VnbWVudE1heCA9IHRoaXMuUGxheWxpc3QuZHVyYXRpb247XFxyXFxuICAgICAgICAgICAgfSk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgdGhpcy5FdmVudEVtaXR0ZXIub24oXCJmaW5pc2hlZFwiLCAoKSA9PiB7XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuQ3Vyc29yUG9zaXRpb25NYXggPSB0aGlzLlBsYXlsaXN0LmR1cmF0aW9uO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdGlvblNlZ21lbnRNYXggPSB0aGlzLlBsYXlsaXN0LmR1cmF0aW9uO1xcclxcbiAgICAgICAgICAgIH0pO1xcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMuRXZlbnRFbWl0dGVyLm9uKFwic2hpZnRcIiwgKHRpbWUsIHRyYWNrKSA9PiB7XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMudHJpbW1lZFswXSArPSB0aW1lO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLnRyaW1tZWRbMV0gKz0gdGltZTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5DdXJzb3JQb3NpdGlvbk1heCA9IHRoaXMuUGxheWxpc3QuZHVyYXRpb247XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0aW9uU2VnbWVudE1heCA9IHRoaXMuUGxheWxpc3QuZHVyYXRpb247XFxyXFxuICAgICAgICAgICAgfSk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmZpbGVzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSB0aGlzLmZpbGVzW2ldO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5lbWl0KFwibmV3dHJhY2tcIiwgZmlsZSk7XFxyXFxuICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgIHRoaXMuRXZlbnRFbWl0dGVyLm9uKFwiYXVkaW9zb3VyY2VzbG9hZGVkXCIsICgpID0+IHtcXHJcXG4gICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5vbihcImF1ZGlvc291cmNlc3JlbmRlcmVkXCIsICgpID0+IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gV2UgbmVlZCB0byBzZXQgdGhlIGNvbG9yIG1hbnVhbGx5IGZvciB0aGUgYXVkaW8gdmlld2VyLlxcclxcbiAgICAgICAgICAgICAgICAvKiogQHR5cGUge05vZGVMaXN0T2Y8SFRNTEVsZW1lbnQ+fSAqL1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBjYW52YXNlcyA9IHRoaXMuZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcXCcucGxheWxpc3QgLmNoYW5uZWwgY2FudmFzXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLypmb3IgKGxldCBpID0gMDsgaSA8IGNhbnZhc2VzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYW52YXMgPSBjYW52YXNlc1tpXTtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNhbnZhcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLnNldHRpbmdzLnRoZW1lKCkuYWNjZW50O1xcclxcbiAgICAgICAgICAgICAgICB9Ki9cXHJcXG4gICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5vbihcImF1ZGlvcmVuZGVyaW5nZmluaXNoZWRcIiwgKHR5cGUsIGJsb2IpID0+IHtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IFtcXHJcXG4gICAgICAgICAgICAgICAgICAgIG5ldyBGaWxlKFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIFtibG9iXSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICBgZWRpdGVkX3NvdW5kLiR7RGF0ZS5ub3coKX1gLCB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGBhdWRpby8ke3R5cGV9YFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXFxyXFxuICAgICAgICAgICAgICAgIF07XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlLnBhcmFtc1t0aGlzLmVsZW1lbnRdID0gdGhpcy52YWx1ZTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zdWJtaXQoKTtcXHJcXG4gICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBtZXRob2RzOiB7XFxyXFxuICAgICAgICAgICAgc3VibWl0OiBmdW5jdGlvbiAoKSB7XFxyXFxuICAgICAgICAgICAgICAgIGlmICghKFxcJ3BhcmFtc1xcJyBpbiB0aGlzLnRvKSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50by5wYXJhbXMgPSB7fTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICB0aGlzLnRvLnBhcmFtcyA9IE9iamVjdC5hc3NpZ24oXFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnRvLnBhcmFtcyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlLnBhcmFtc1xcclxcbiAgICAgICAgICAgICAgICApO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh0aGlzLnRvKVxcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgcGxheTogZnVuY3Rpb24gKCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuUGxheWxpc3QpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5lbWl0KFwicGxheVwiKTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFwicGxheVwiO1xcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgcGF1c2U6IGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLlBsYXlsaXN0KSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5FdmVudEVtaXR0ZXIuZW1pdChcInBhdXNlXCIpO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlID0gXCJwYXVzZVwiO1xcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgc3RvcDogZnVuY3Rpb24gKCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuUGxheWxpc3QpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5lbWl0KFwic3RvcFwiKTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IFwicGF1c2VcIjtcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIHNhdmU6IGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLlBsYXlsaXN0KSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5FdmVudEVtaXR0ZXIuZW1pdChcInN0YXJ0YXVkaW9yZW5kZXJpbmdcIiwgXCJ3YXZcIik7XFxyXFxuICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICB0cmltOiBmdW5jdGlvbiAoKSB7XFxyXFxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5QbGF5bGlzdCkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgIHRoaXMuRXZlbnRFbWl0dGVyLmVtaXQoXCJ0cmltXCIpO1xcclxcbiAgICAgICAgICAgICAgICB0aGlzLnRyaW1tZWQgPSB0aGlzLlNlbGVjdGlvblNlZ21lbnQ7XFxyXFxuICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICBhbGlnbkxlZnQ6IGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLlBsYXlsaXN0KSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5FdmVudEVtaXR0ZXIuZW1pdChcXHJcXG4gICAgICAgICAgICAgICAgICAgIFwic2hpZnRcIixcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudHJpbW1lZFswXSAqIC0xLFxcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5QbGF5bGlzdC5hY3RpdmVUcmFjayB8fCB0aGlzLlBsYXlsaXN0LnRyYWNrc1swXVxcclxcbiAgICAgICAgICAgICAgICApO1xcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgbW92ZUxlZnQ6IGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLlBsYXlsaXN0KSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5FdmVudEVtaXR0ZXIuZW1pdChcXHJcXG4gICAgICAgICAgICAgICAgICAgIFwic2hpZnRcIixcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RlcFNpemUgKiAtMSxcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGxheWxpc3QuYWN0aXZlVHJhY2sgfHwgdGhpcy5QbGF5bGlzdC50cmFja3NbMF1cXHJcXG4gICAgICAgICAgICAgICAgKTtcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIG1vdmVSaWdodDogZnVuY3Rpb24gKCkge1xcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuUGxheWxpc3QpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB0aGlzLkV2ZW50RW1pdHRlci5lbWl0KFxcclxcbiAgICAgICAgICAgICAgICAgICAgXCJzaGlmdFwiLFxcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGVwU2l6ZSxcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUGxheWxpc3QuYWN0aXZlVHJhY2sgfHwgdGhpcy5QbGF5bGlzdC50cmFja3NbMF1cXHJcXG4gICAgICAgICAgICAgICAgKTtcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIHN0YXRlY2hhbmdlOiBmdW5jdGlvbiAoc3RhdGUpIHtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLlBsYXlsaXN0KSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5FdmVudEVtaXR0ZXIuZW1pdChcInN0YXRlY2hhbmdlXCIsIHN0YXRlKTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJzb3IgPSBzdGF0ZTtcXHJcXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuY3Vyc29yID09PSBcInNlbGVjdFwiKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdGlvblNlZ21lbnQgPSBbMCwgdGhpcy5DdXJzb3JQb3NpdGlvbl07XFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIGxlYXZlOiBmdW5jdGlvbiAoKSB7XFxyXFxuICAgICAgICAgICAgICAgIE1vZHVsZS5lbWl0KFwidGlsZS5lZGl0b3JcIik7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfVxcclxcbiAgICB9O1xcclxcblxcclxcbiAgICBNb2R1bGUuYXBwZW5kU3R5bGUoYHNyYy9lbGVtZW50cy9jc3MvU291bmQuY3NzYCwgY29tcG9uZW50Lm5hbWUpO1xcclxcblxcclxcbiAgICByZXR1cm4gY29tcG9uZW50O1xcclxcbn07Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9lbGVtZW50cy9Td2l0Y2guanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgbmFtZTogXFwnUy1Td2l0Y2hcXCcsXFxyXFxuICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgXFwnPHYtc3dpdGNoXFxcXG5cXCcgK1xcclxcbiAgICAgICAgXFwnICAgICAgdi1tb2RlbD1cInZhbHVlXCJcXFxcblxcJyArXFxyXFxuICAgICAgICBcXCcgICAgICA6bGFiZWw9XCJ0aXRsZVwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgXFwnICAgICAgOmhpbnQ9XCJkZXNjcmlwdGlvblwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgXFwnICAgICAgOnBlcnNpc3RlbnQtaGludD1cInBlcnNpc3RlbnRIaW50XCIvPlxcJyxcXHJcXG4gICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAvKipcXHJcXG4gICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICovXFxyXFxuICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgIC8qKlxcclxcbiAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgKi9cXHJcXG4gICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgLyoqXFxyXFxuICAgICAgICogQGRlc2NyaXB0aW9uIEZvcm0gaWQgdG8gaWRlbnRpZnkgZXZlbnRzLlxcclxcbiAgICAgICAqL1xcclxcbiAgICAgIHJlZ2lvbjogT2JqZWN0LFxcclxcbiAgICB9LFxcclxcbiAgICB3YXRjaDoge1xcclxcbiAgICAgIHZhbHVlOiB7XFxyXFxuICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiAodmFsdWUpIHtcXHJcXG4gICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zW3RoaXMuZWxlbWVudF0gPSB2YWx1ZTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICBkZWVwOiB0cnVlXFxyXFxuICAgICAgfVxcclxcbiAgICB9LFxcclxcbiAgICBkYXRhKCkge1xcclxcbiAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICB2YWx1ZTogZmFsc2UsXFxyXFxuICAgICAgICB0aXRsZTogXCJcIixcXHJcXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxcclxcbiAgICAgICAgcGVyc2lzdGVudEhpbnQ6IHRydWUsXFxyXFxuICAgICAgfTtcXHJcXG4gICAgfSxcXHJcXG4gICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnJlbmRlckVsZW1lbnRba2V5XTtcXHJcXG4gICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgIGlmICghdGhpcy5oYXNPd25Qcm9wZXJ0eShkYXRhS2V5KSkge1xcclxcbiAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgLy8gU2V0IHRoZSBuZXcgdmFsdWUuXFxyXFxuICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgfVxcclxcblxcclxcbiAgICAgIGNvbnN0IGluZm8gPSB0aGlzLnJlZ2lvbi5yZWdpb25SYXcuaW5mbztcXHJcXG5cXHJcXG4gICAgICB0aGlzLiRyb3V0ZS5wYXJhbXNbdGhpcy5lbGVtZW50XSA9IHRoaXMudmFsdWU7XFxyXFxuICAgIH0sXFxyXFxuICB9O1xcclxcblxcclxcbiAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvZWxlbWVudHMvY3NzL1N3aXRjaC5jc3NgLCBjb21wb25lbnQubmFtZSk7XFxyXFxuICBcXHJcXG4gIHJldHVybiBjb21wb25lbnQ7XFxyXFxufTtcXHJcXG4nKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL2VsZW1lbnRzL1RleHRhcmVhLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1RleHRhcmVhXFwnLFxcclxcbiAgICAgICAgdGVtcGxhdGU6XFxyXFxuICAgICAgICAgICAgXFwnPHYtdGV4dGFyZWFcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgdi1tb2RlbD1cInZhbHVlXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOmxhYmVsPVwidGl0bGVcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6aGludD1cImRlc2NyaXB0aW9uXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnBsYWNlaG9sZGVyPVwicGxhY2Vob2xkZXJcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6YXV0by1ncm93PVwiYXV0b0dyb3dcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6Y2xlYXJhYmxlPVwiY2xlYXJhYmxlXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOmZpbGxlZD1cImZpbGxlZFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpmbGF0PVwiZmxhdFwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpuby1yZXNpemU9XCJub1Jlc2l6ZVwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpvdXRsaW5lZD1cIm91dGxpbmVkXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnBlcnNpc3RlbnQtaGludD1cInBlcnNpc3RlbnRIaW50XCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnJvdW5kZWQ9XCJyb3VuZGVkXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnJvdy1oZWlnaHQ9XCJyb3dIZWlnaHRcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6cm93cz1cInJvd3NcIlxcXFxuXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6c2hhcGVkPVwic2hhcGVkXCJcXFxcblxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnNpbmdsZS1saW5lPVwic2luZ2xlTGluZVwiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpzb2xvPVwic29sb1wiXFxcXG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgLz5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBSZW5kZXIgZWxlbWVudC4gVXN1YWxseSBhbiBhcnJheSB3aXRoIGtleSB2YWx1ZSBwYWlycyBmb3Igb3B0aW9ucy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICByZW5kZXJFbGVtZW50OiBPYmplY3QsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEVsZW1lbnQga2V5LiBUaGUga2V5IHByb3ZpZGVkIHRvIG1hcCBzdWJtaXR0ZWQgdmFsdWVzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIGVsZW1lbnQ6IFN0cmluZyxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gRm9ybSBpZCB0byBpZGVudGlmeSBldmVudHMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVnaW9uOiBPYmplY3QsXFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgYXV0b0dyb3c6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBhdXRvZm9jdXM6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgIGNsZWFyYWJsZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGZpbGxlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGZsYXQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBub1Jlc2l6ZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIG91dGxpbmVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcGVyc2lzdGVudEhpbnQ6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgIHJvdW5kZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByb3dIZWlnaHQ6IDI0LFxcclxcbiAgICAgICAgICAgICAgICByb3dzOiAxLFxcclxcbiAgICAgICAgICAgICAgICBzaGFwZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzaW5nbGVMaW5lOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc29sbzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgICAgICB3YXRjaDoge1xcclxcbiAgICAgICAgICAgIHZhbHVlOiB7XFxyXFxuICAgICAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uICh2YWx1ZSkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zW3RoaXMuZWxlbWVudF0gPSB2YWx1ZTtcXHJcXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJHRyaWdnZXIoXFwnaW5wdXRfY2hhbmdlXFwnLCB0aGlzLmVsZW1lbnQpO1xcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICBkZWVwOiB0cnVlXFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBJdGVyYXRlIHRyb3VnaCBhbGwgaXRlbXMgYW5kIHNldCB0aGVtLlxcclxcbiAgICAgICAgICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnJlbmRlckVsZW1lbnQpO1xcclxcblxcclxcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucmVuZGVyRWxlbWVudFtrZXldO1xcclxcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhS2V5ID0ga2V5LnJlcGxhY2UoXFwnI1xcJywgXFwnXFwnKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgaWYgZGF0YSBpcyBtYXBwYWJsZS5cXHJcXG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzLmhhc093blByb3BlcnR5KGRhdGFLZXkpKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBlbGVtZW50IGlzIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09PSBmYWxzZSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIG5ldyB2YWx1ZS5cXHJcXG4gICAgICAgICAgICAgICAgdGhpc1trZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpXSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgICAgICBjb25zdCBpbmZvID0gdGhpcy5yZWdpb24ucmVnaW9uUmF3LmluZm87XFxyXFxuXFxyXFxuICAgICAgICAgICAgdGhpcy4kcm91dGUucGFyYW1zW3RoaXMuZWxlbWVudF0gPSB0aGlzLnZhbHVlO1xcclxcbiAgICAgICAgfSxcXHJcXG4gICAgfTtcXHJcXG5cXHJcXG4gICAgTW9kdWxlLmFwcGVuZFN0eWxlKGBzcmMvZWxlbWVudHMvVGV4dGZpZWxkLmNzc2AsIGNvbXBvbmVudC5uYW1lKTtcXHJcXG5cXHJcXG4gICAgcmV0dXJuIGNvbXBvbmVudDtcXHJcXG59O1xcclxcbicpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvZWxlbWVudHMvVGV4dGZpZWxkLmpzJywgJ01vZHVsZSA9PiB7XFxyXFxuICAgIGNvbnN0IGNvbXBvbmVudCA9IHtcXHJcXG4gICAgICAgIG5hbWU6IFxcJ1RleHRmaWVsZFxcJyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJyAgPHYtdGV4dC1maWVsZFxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgdi1tb2RlbD1cInZhbHVlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpsYWJlbD1cInRpdGxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpoaW50PVwiZGVzY3JpcHRpb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOnBsYWNlaG9sZGVyPVwicGxhY2Vob2xkZXJcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgOm1pbj1cIm1pblwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICA6bWF4PVwibWF4XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgIDpwZXJzaXN0ZW50LWhpbnQ9XCJwZXJzaXN0ZW50SGludFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgIC8+XFwnLFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEZvcm0gaWQgdG8gaWRlbnRpZnkgZXZlbnRzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlZ2lvbjogT2JqZWN0LFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIHdhdGNoOiB7XFxyXFxuICAgICAgICAgICAgdmFsdWU6IHtcXHJcXG4gICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKHZhbHVlKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZS5wYXJhbXNbdGhpcy5lbGVtZW50XSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kdHJpZ2dlcihcXCdpbnB1dF9jaGFuZ2VcXCcsIHRoaXMuZWxlbWVudCk7XFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIGRlZXA6IHRydWVcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICB2YWx1ZTogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIlwiLFxcclxcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJcIixcXHJcXG4gICAgICAgICAgICAgICAgbWluOiAwLFxcclxcbiAgICAgICAgICAgICAgICBtYXg6IDE2LFxcclxcbiAgICAgICAgICAgICAgICBwZXJzaXN0ZW50SGludDogdHJ1ZVxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgIGNvbnN0IGluZm8gPSB0aGlzLnJlZ2lvbi5yZWdpb25SYXcuaW5mbztcXHJcXG5cXHJcXG4gICAgICAgICAgICB0aGlzLiRyb3V0ZS5wYXJhbXNbdGhpcy5lbGVtZW50XSA9IHRoaXMudmFsdWU7XFxyXFxuICAgICAgICB9LFxcclxcbiAgICB9O1xcclxcblxcclxcbiAgICBNb2R1bGUuYXBwZW5kU3R5bGUoYHNyYy9lbGVtZW50cy9UZXh0ZmllbGQuY3NzYCwgY29tcG9uZW50Lm5hbWUpO1xcclxcblxcclxcbiAgICByZXR1cm4gY29tcG9uZW50O1xcclxcbn07Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9lbGVtZW50cy9VcGxvYWQuanMnLCAnTW9kdWxlID0+IHtcXHJcXG4gICAgY29uc3QgY29tcG9uZW50ID0ge1xcclxcbiAgICAgICAgbmFtZTogXFwnVXBsb2FkXFwnLFxcclxcbiAgICAgICAgdGVtcGxhdGU6IFxcclxcbiAgICAgICAgICAgIFxcJzx2LWZpbGUtaW5wdXRcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIHYtbW9kZWw9XCJ2YWx1ZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6bGFiZWw9XCJ0aXRsZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aGludD1cImRlc2NyaXB0aW9uXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDphcHBlbmQtaWNvbj1cImFwcGVuZEljb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmFwcGVuZC1vdXRlci1pY29uPVwiYXBwZW5kT3V0ZXJJY29uXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDphdXRvZm9jdXM9XCJhdXRvZm9jdXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmJhY2tncm91bmQtY29sb3I9XCJiYWNrZ3JvdW5kQ29sb3JcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNoaXBzPVwiY2hpcHNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNsZWFyLWljb249XCJjbGVhckljb25cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNsZWFyYWJsZT1cImNsZWFyYWJsZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Y29sb3I9XCJjb2xvclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Y291bnRlcj1cImNvdW50ZXJcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmNvdW50ZXItc2l6ZS1zdHJpbmc9XCJjb3VudGVyU2l6ZVN0cmluZ1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6Y291bnRlci1zdHJpbmc9XCJjb3VudGVyU3RyaW5nXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpjb3VudGVyLXZhbHVlPVwiY291bnRlclZhbHVlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpkYXJrPVwiZGFya1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZGVuc2U9XCJkZW5zZVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZGlzYWJsZWQ9XCJkaXNhYmxlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZXJyb3I9XCJlcnJvclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZXJyb3ItY291bnQ9XCJlcnJvckNvdW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDplcnJvci1tZXNzYWdlcz1cImVycm9yTWVzc2FnZXNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmZpbGxlZD1cImZpbGxlZFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6ZmxhdD1cImZsYXRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmZ1bGwtd2lkdGg9XCJmdWxsV2lkdGhcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmhlaWdodD1cImhlaWdodFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6aGlkZS1kZXRhaWxzPVwiaGlkZURldGFpbHNcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmhpZGUtaW5wdXQ9XCJoaWRlSW5wdXRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxpZ2h0PVwibGlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxvYWRlci1oZWlnaHQ9XCJsb2FkZXJIZWlnaHRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOmxvYWRpbmc9XCJsb2FkaW5nXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDptZXNzYWdlcz1cIm1lc3NhZ2VzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDptdWx0aXBsZT1cIm11bHRpcGxlXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpvdXRsaW5lZD1cIm91dGxpbmVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpwZXJzaXN0ZW50LWhpbnQ9XCJwZXJzaXN0ZW50SGludFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cGxhY2Vob2xkZXI9XCJwbGFjZWhvbGRlclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cHJlZml4PVwicHJlZml4XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpwcmVwZW5kLWljb249XCJwcmVwZW5kSWNvblwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cHJlcGVuZC1pbm5lci1pY29uPVwicHJlcGVuZElubmVySWNvblwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmVhZG9ubHk9XCJyZWFkb25seVwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6cmV2ZXJzZT1cInJldmVyc2VcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnJvdW5kZWQ9XCJyb3VuZGVkXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpydWxlcz1cInJ1bGVzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzaGFwZWQ9XCJzaGFwZWRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnNob3ctc2l6ZT1cInNob3dTaXplXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzaW5nbGUtbGluZT1cInNpbmdsZUxpbmVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnNtYWxsLWNoaXBzPVwic21hbGxDaGlwc1wiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICA6c29sbz1cInNvbG9cIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnNvbG8taW52ZXJ0ZWQ9XCJzb2xvSW52ZXJ0ZWRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnN1Y2Nlc3M9XCJzdWNjZXNzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzdWNjZXNzLW1lc3NhZ2VzPVwic3VjY2Vzc01lc3NhZ2VzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgIDpzdWZmaXg9XCJzdWZmaXhcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgOnRydW5jYXRlLWxlbmd0aD1cInRydW5jYXRlTGVuZ3RoXCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgPGRpdj57e2Rlc2NyaXB0aW9ufX08L2Rpdj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJzwvdi1maWxlLWlucHV0PlxcJyxcXHJcXG4gICAgICAgIGRhdGEoKSB7XFxyXFxuICAgICAgICAgICAgcmV0dXJuIHtcXHJcXG4gICAgICAgICAgICAgICAgdGl0bGU6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgYXBwZW5kSWNvbjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBhcHBlbmRPdXRlckljb246IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgYXV0b2ZvY3VzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIGNoaXBzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgY2xlYXJJY29uOiBcXCckY2xlYXJcXCcsXFxyXFxuICAgICAgICAgICAgICAgIGNsZWFyYWJsZTogdHJ1ZSxcXHJcXG4gICAgICAgICAgICAgICAgY29sb3I6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgY291bnRlcjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICBjb3VudGVyU2l6ZVN0cmluZzogXFwnJHZ1ZXRpZnkuZmlsZUlucHV0LmNvdW50ZXJTaXplXFwnLFxcclxcbiAgICAgICAgICAgICAgICBjb3VudGVyU3RyaW5nOiBcXCckdnVldGlmeS5maWxlSW5wdXQuY291bnRlclxcJyxcXHJcXG4gICAgICAgICAgICAgICAgY291bnRlclZhbHVlOiBudWxsLFxcclxcbiAgICAgICAgICAgICAgICBkYXJrOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZGVuc2U6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGVycm9yOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgZXJyb3JDb3VudDogMSxcXHJcXG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlczogW10sXFxyXFxuICAgICAgICAgICAgICAgIGZpbGxlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIGZsYXQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBmdWxsV2lkdGg6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgaGlkZURldGFpbHM6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgaGlkZUlucHV0OiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgbGlnaHQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBsb2FkZXJIZWlnaHQ6IDIsXFxyXFxuICAgICAgICAgICAgICAgIGxvYWRpbmc6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBtZXNzYWdlczogW10sXFxyXFxuICAgICAgICAgICAgICAgIG11bHRpcGxlOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgb3V0bGluZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBwZXJzaXN0ZW50SGludDogdHJ1ZSxcXHJcXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgcHJlZml4OiB1bmRlZmluZWQsXFxyXFxuICAgICAgICAgICAgICAgIHByZXBlbmRJY29uOiBcXCckZmlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgcHJlcGVuZElubmVySWNvbjogdW5kZWZpbmVkLFxcclxcbiAgICAgICAgICAgICAgICByZWFkb25seTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHJldmVyc2U6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICByb3VuZGVkOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgcnVsZXM6IFtdLFxcclxcbiAgICAgICAgICAgICAgICBzaGFwZWQ6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzaG93U2l6ZTogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHNpbmdsZUxpbmU6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzbWFsbENoaXBzOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgc29sbzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHNvbG9JbnZlcnRlZDogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxcclxcbiAgICAgICAgICAgICAgICBzdWNjZXNzTWVzc2FnZXM6IFtdLFxcclxcbiAgICAgICAgICAgICAgICBzdWZmaXg6IHVuZGVmaW5lZCxcXHJcXG4gICAgICAgICAgICAgICAgdHJ1bmNhdGVMZW5ndGg6IDIyLFxcclxcbiAgICAgICAgICAgIH07XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKiBAZGVzY3JpcHRpb24gUmVuZGVyIGVsZW1lbnQuIFVzdWFsbHkgYW4gYXJyYXkgd2l0aCBrZXkgdmFsdWUgcGFpcnMgZm9yIG9wdGlvbnMuXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgcmVuZGVyRWxlbWVudDogT2JqZWN0LFxcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqIEBkZXNjcmlwdGlvbiBFbGVtZW50IGtleS4gVGhlIGtleSBwcm92aWRlZCB0byBtYXAgc3VibWl0dGVkIHZhbHVlcy5cXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBlbGVtZW50OiBTdHJpbmcsXFxyXFxuXFxyXFxuICAgICAgICAgICAgLyoqXFxyXFxuICAgICAgICAgICAgICogQGRlc2NyaXB0aW9uIEZvcm0gaWQgdG8gaWRlbnRpZnkgZXZlbnRzLlxcclxcbiAgICAgICAgICAgICAqL1xcclxcbiAgICAgICAgICAgIHJlZ2lvbjogT2JqZWN0LFxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIHdhdGNoOiB7XFxyXFxuICAgICAgICAgICAgdmFsdWU6IHtcXHJcXG4gICAgICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gKHZhbHVlKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb3V0ZS5wYXJhbXNbdGhpcy5lbGVtZW50XSA9IHZhbHVlO1xcclxcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kdHJpZ2dlcihcXCdpbnB1dF9jaGFuZ2VcXCcsIHRoaXMuZWxlbWVudCk7XFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIGRlZXA6IHRydWVcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgbW91bnRlZDogYXN5bmMgZnVuY3Rpb24gKCkge1xcclxcblxcclxcbiAgICAgICAgICAgIC8vIEl0ZXJhdGUgdHJvdWdoIGFsbCBpdGVtcyBhbmQgc2V0IHRoZW0uXFxyXFxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMucmVuZGVyRWxlbWVudCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtleXNbaV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5yZW5kZXJFbGVtZW50W2tleV07XFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGFLZXkgPSBrZXkucmVwbGFjZShcXCcjXFwnLCBcXCdcXCcpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayBpZiBkYXRhIGlzIG1hcHBhYmxlLlxcclxcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaGFzT3duUHJvcGVydHkoZGF0YUtleSkpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGVsZW1lbnQgaXMgZW1wdHkuXFxyXFxuICAgICAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09IGZhbHNlIHx8IHZhbHVlID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPT09IG51bGwpIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xcclxcbiAgICAgICAgICAgICAgICB9XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIC8vIFNldCB0aGUgbmV3IHZhbHVlLlxcclxcbiAgICAgICAgICAgICAgICB0aGlzW2tleS5yZXBsYWNlKFxcJyNcXCcsIFxcJ1xcJyldID0gdmFsdWU7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgIHRoaXMuJHJvdXRlLnBhcmFtc1t0aGlzLmVsZW1lbnRdID0gdGhpcy52YWx1ZTtcXHJcXG4gICAgICAgIH0sXFxyXFxuICAgIH07XFxyXFxuXFxyXFxuICAgIHJldHVybiBjb21wb25lbnQ7XFxyXFxufTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL3JlZ2lvbnMvQ29udGVudC5qcycsICdNb2R1bGUgPT4ge1xcclxcbiAgICBjb25zdCBlbGVtZW50cyA9IHdpbmRvdy5NYW5hZ2VyLmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5VHlwZShcXCdlbGVtZW50c1xcJyk7XFxyXFxuICAgIGNvbnN0IGNvbnRhaW5lcnMgPSB3aW5kb3cuTWFuYWdlci5jb21wb25lbnRNYW5hZ2VyLmdldENvbXBvbmVudHNCeVR5cGUoXFwnY29udGFpbmVyc1xcJyk7XFxyXFxuICAgIGNvbnN0IGRhdGEgPSBbLi4uZWxlbWVudHMsIC4uLmNvbnRhaW5lcnNdO1xcclxcbiAgICBjb25zdCBjb21wb25lbnRzID0ge307XFxyXFxuXFxyXFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gZGF0YVtpXTtcXHJcXG4gICAgICAgIGNvbXBvbmVudHNbYGFzLSR7Y29tcG9uZW50LmlkfWBdID0gY29tcG9uZW50LmdldENvbXBvbmVudCgpO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIHJldHVybiB7XFxyXFxuICAgICAgICBuYW1lOiBcXCdDb250ZW50XFwnLFxcclxcbiAgICAgICAgY29tcG9uZW50cyxcXHJcXG4gICAgICAgIHRlbXBsYXRlOlxcclxcbiAgICAgICAgICAgIFxcJzx2LXNoZWV0PlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICA8Y29tcG9uZW50IHYtZm9yPVwiKHJlbmRlckVsZW1lbnQsIGVsZW1lbnQpIGluIHJlbmRlckFycmF5XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICA6aXM9XCJgYXMtJHtyZW5kZXJFbGVtZW50W1xcXFxcXCcjdHlwZVxcXFxcXCddfWBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgIDpyZW5kZXJFbGVtZW50PVwicmVuZGVyRWxlbWVudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgOmVsZW1lbnQ9XCJlbGVtZW50XCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICA6a2V5PVwiYGVsZW1lbnQtJHtyZW5kZXJFbGVtZW50W1xcXFxcXCcjdHlwZVxcXFxcXCddfS0ke2VsZW1lbnR9YFwiLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJzwvdi1zaGVldD5cXCcsXFxyXFxuICAgICAgICBwcm9wczoge1xcclxcbiAgICAgICAgICAgIHJvdXRlOiBPYmplY3QsXFxyXFxuICAgICAgICAgICAgcmVnaW9uOiBPYmplY3QsXFxyXFxuICAgICAgICB9LFxcclxcbiAgICAgICAgZGF0YSgpIHtcXHJcXG4gICAgICAgICAgICByZXR1cm4ge1xcclxcbiAgICAgICAgICAgICAgICByZW5kZXJBcnJheToge30sXFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfSxcXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG5cXHJcXG4gICAgICAgICAgICAvLyBMb2FkIHRoZSByZW5kZXIgYXJyYXkuXFxyXFxuICAgICAgICAgICAgYXdhaXQgdGhpcy5yZWdpb24ubG9hZCgpO1xcclxcbiAgICAgICAgICAgIHRoaXMucmVuZGVyQXJyYXkgPSBhd2FpdCB0aGlzLnJlZ2lvbi5yZWdpb25SYXcuYnVpbGQodGhpcy5yZWdpb24ubW9kdWxlLCB0aGlzLiRyb3V0ZSk7XFxyXFxuICAgICAgICB9LFxcclxcbiAgICB9O1xcclxcbn07Jyk7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5maWxlU3lzdGVtLndyaXRlKCcvbW9kdWxlcy9jb3JlL3NyYy9yZWdpb25zL2NvbnRlbnQvQm9hcmQuanMnLCAnY29uc3QgQm9hcmQgPSB7XFxyXFxuXFxyXFxuICAgIC8qKlxcclxcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxcclxcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhpcyBob2xkcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ybS5cXHJcXG4gICAgICovXFxyXFxuICAgIGluZm86IHtcXHJcXG4gICAgICAgIHRpdGxlOiBcIlRpbGUgQm9hcmRcIixcXHJcXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkNvbmZpZ3VyZSB5b3VyIHNldHRpbmdzIGhlcmUuXCIsXFxyXFxuICAgIH0sXFxyXFxuXFxyXFxuICAgIC8qKlxcclxcbiAgICAgKlxcclxcbiAgICAgKiBAcGFyYW0gTW9kdWxlXFxyXFxuICAgICAqIEBwYXJhbSBWdWVSb3V0ZXJcXHJcXG4gICAgICogQHJldHVybnMge3t9fVxcclxcbiAgICAgKi9cXHJcXG4gICAgIGJ1aWxkOiBhc3luYyAoTW9kdWxlLCBWdWVSb3V0ZSkgPT4ge1xcclxcbiAgICAgICAgbGV0IGJ1aWxkID0ge307XFxyXFxuICAgICAgICBjb25zdCBwYXJhbXMgPSBWdWVSb3V0ZS5wYXJhbXM7XFxyXFxuXFxyXFxuICAgICAgICBjb25zdCBwcmVmaXggPSBcXCcvc291bmRib2FyZFxcJztcXHJcXG5cXHJcXG4gICAgICAgIC8vIERldGVybWluZSB0aGUgcGF0aC5cXHJcXG4gICAgICAgIGNvbnN0IHBhdGggPSBcXCdib2FyZFxcJyBpbiBwYXJhbXMgPyBwYXJhbXMuYnVpbGQgOiBcXCdcXCc7XFxyXFxuICAgICAgICBjb25zdCBlbGVtZW50cyA9IGF3YWl0IE1vZHVsZS5maWxlU3lzdGVtLmxpc3QoYCR7cHJlZml4fS8ke3BhdGh9YCk7XFxyXFxuXFxyXFxuICAgICAgICBidWlsZC50aWxlX2NvbHVtbiA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwnb25lX2NvbHVtblxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjY29udGVudFxcJzoge30sXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgICAgIGNvbnN0IHBhdGggPSBlbGVtZW50c1tpXTtcXHJcXG4gICAgICAgICAgICBjb25zdCBjb250ZW50ID0gYXdhaXQgTW9kdWxlLmZpbGVTeXN0ZW0ucmVhZEpTT04ocGF0aCk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgYnVpbGQudGlsZV9jb2x1bW5bXFwnI2NvbnRlbnRcXCddW3BhdGhdID0ge1xcclxcbiAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwndGlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBNb2R1bGUuZmFsbGJhY2soY29udGVudCwgXFwndGlsZV90aXRsZVxcJywgXFwnXFwnKSxcXHJcXG4gICAgICAgICAgICAgICAgXFwnI2JhY2tncm91bmRDb2xvclxcJzogTW9kdWxlLmZhbGxiYWNrKGNvbnRlbnQsIFxcJ3RpbGVfY29sb3JcXCcsIFxcJyMwMDAwMDBcXCcpXFxyXFxuICAgICAgICAgICAgfTtcXHJcXG4gICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLmFkZFRpbGVCdXR0b24gPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ2FkZC10aWxlLWJ1dHRvblxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjY29udGVudFxcJzoge1xcclxcbiAgICAgICAgICAgICAgICBhZGRfdGlsZToge1xcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3JlZGlyZWN0X2J1dHRvblxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNmYWJcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjb3V0bGluZWRcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjY29sb3JcXCc6IFxcJ2dyZWVuXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2NlbnRlckljb25cXCc6IFxcJ2FkZFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyN0b1xcJzoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFxcJ3RpbGUudGVtcGxhdGVzXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXRoLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH1cXHJcXG5cXHJcXG4gICAgICAgIHJldHVybiBidWlsZDtcXHJcXG4gICAgfSxcXHJcXG59O1xcclxcblxcclxcbigoKSA9PiB7XFxyXFxuICAgIHJldHVybiBCb2FyZDtcXHJcXG59KSgpOycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvcmVnaW9ucy9jb250ZW50L01vZHVsZXMuanMnLCAnY29uc3QgTW9kdWxlcyA9IHtcXHJcXG5cXHJcXG4gICAgLyoqXFxyXFxuICAgICAqIEB0eXBlIHtPYmplY3R9XFxyXFxuICAgICAqIEBkZXNjcmlwdGlvbiBUaGlzIGhvbGRzIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmb3JtLlxcclxcbiAgICAgKi9cXHJcXG4gICAgaW5mbzoge1xcclxcbiAgICAgICAgdGl0bGU6IFwiVGlsZSBCb2FyZFwiLFxcclxcbiAgICAgICAgZGVzY3JpcHRpb246IFwiQ29uZmlndXJlIHlvdXIgc2V0dGluZ3MgaGVyZS5cIixcXHJcXG4gICAgfSxcXHJcXG5cXHJcXG4gICAgLyoqXFxyXFxuICAgICAqXFxyXFxuICAgICAqIEBwYXJhbSBNb2R1bGVcXHJcXG4gICAgICogQHBhcmFtIHZhbHVlc1xcclxcbiAgICAgKiBAcmV0dXJucyB7e319XFxyXFxuICAgICAqL1xcclxcbiAgICBidWlsZDogKE1vZHVsZSkgPT4ge1xcclxcbiAgICAgICAgbGV0IGJ1aWxkID0ge307XFxyXFxuXFxyXFxuICAgICAgICBidWlsZC5oZWFkbGluZSA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwnaGVhZGxpbmVcXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdNb2R1bGVzXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnU2hvd3MgdGhlIGN1cnJlbnQgaW5zdGFsbGVkIG1vZHVsZXMuXFwnLFxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGNvbnN0IG1vZHVsZXMgPSBNb2R1bGUubW9kdWxlTWFuYWdlci5tb2R1bGVzO1xcclxcblxcclxcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBtb2R1bGVzLmxlbmd0aDsgaSsrKSB7XFxyXFxuICAgICAgICAgICAgY29uc3QgbW9kdWxlID0gbW9kdWxlc1tpXTtcXHJcXG5cXHJcXG4gICAgICAgICAgICBidWlsZFtgJHttb2R1bGUuaWR9LW1vZHVsZS1saXN0YF0gPSB7XFxyXFxuICAgICAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCdwYXJhZ3JhcGhcXCcsXFxyXFxuICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogbW9kdWxlLmluZm8ubmFtZSxcXHJcXG4gICAgICAgICAgICAgICAgXFwnI2Rlc2NyaXB0aW9uXFwnOiBtb2R1bGUuaW5mby5kZXNjcmlwdGlvbixcXHJcXG4gICAgICAgICAgICAgICAgXFwnI3ZhbHVlXFwnOiBgVmVyc2lvbjogJHttb2R1bGUuaW5mby52ZXJzaW9ufWBcXHJcXG4gICAgICAgICAgICB9O1xcclxcbiAgICAgICAgfVxcclxcblxcclxcblxcclxcbiAgICAgICAgcmV0dXJuIGJ1aWxkO1xcclxcbiAgICB9LFxcclxcbn07XFxyXFxuXFxyXFxuKCgpID0+IHtcXHJcXG4gICAgcmV0dXJuIE1vZHVsZXM7XFxyXFxufSkoKTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL3JlZ2lvbnMvRm9ybS5qcycsICdNb2R1bGUgPT4ge1xcclxcbiAgICBjb25zdCBlbGVtZW50cyA9IHdpbmRvdy5NYW5hZ2VyLmNvbXBvbmVudE1hbmFnZXIuZ2V0Q29tcG9uZW50c0J5VHlwZShcXCdlbGVtZW50c1xcJyk7XFxyXFxuICAgIGNvbnN0IGNvbnRhaW5lcnMgPSB3aW5kb3cuTWFuYWdlci5jb21wb25lbnRNYW5hZ2VyLmdldENvbXBvbmVudHNCeVR5cGUoXFwnY29udGFpbmVyc1xcJyk7XFxyXFxuICAgIGNvbnN0IGRhdGEgPSBbLi4uZWxlbWVudHMsIC4uLmNvbnRhaW5lcnNdO1xcclxcbiAgICBjb25zdCBjb21wb25lbnRzID0ge307XFxyXFxuXFxyXFxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xcclxcbiAgICAgICAgY29uc3QgY29tcG9uZW50ID0gZGF0YVtpXTtcXHJcXG4gICAgICAgIGNvbXBvbmVudHNbYGFzLSR7Y29tcG9uZW50LmlkfWBdID0gY29tcG9uZW50LmdldENvbXBvbmVudCgpO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgIHJldHVybiB7XFxyXFxuICAgICAgICBuYW1lOiBcXCdGb3JtXFwnLFxcclxcbiAgICAgICAgdGVtcGxhdGU6IFxcclxcbiAgICAgICAgICAgIFxcJzx2LWZvcm0gY2xhc3M9XCJwYS00IG15LTRcIj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8YnIgdi1pZj1cInJlZ2lvbi50aXRsZSB8fCByZWdpb24uZGVzY3JpcHRpb25cIi8+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPGgyIHYtaWY9XCJyZWdpb24udGl0bGVcIj57eyByZWdpb24udGl0bGUgfX08L2gyPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDxoNiB2LWlmPVwicmVnaW9uLmRlc2NyaXB0aW9uXCI+e3sgcmVnaW9uLmRlc2NyaXB0aW9uIH19PC9oNj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJ1xcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDxjb21wb25lbnQgdi1mb3I9XCIocmVuZGVyRWxlbWVudCwgZWxlbWVudCkgaW4gcmVuZGVyQXJyYXlcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgOmlzPVwiYGFzLSR7cmVuZGVyRWxlbWVudFtcXFxcXFwnI3R5cGVcXFxcXFwnXX1gXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgIDpyZW5kZXJFbGVtZW50PVwicmVuZGVyRWxlbWVudFwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICA6ZWxlbWVudD1cImVsZW1lbnRcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgOmtleT1cImAke2VsZW1lbnR9LiR7Y2hhbmdlZH1gXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgIDpyZWdpb249XCJyZWdpb25cIi8+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCdcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1idG5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgdi1pZj1cImluZm8uc3VibWl0ID09PSB1bmRlZmluZWQgfHwgaW5mby5zdWJtaXQgPT09IHRydWVcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICBibG9ja1xcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICB0aWxlXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDpsb2FkaW5nPVwic2F2aW5nXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgY29sb3I9XCJzdWNjZXNzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgQGNsaWNrPVwic3VibWl0XCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICBTYXZlXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICB7eyBpbmZvLnN1Ym1pdCB9fVxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDwvdi1idG4+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgPGJyLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8di1kaXZpZGVyLz5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJ1xcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgIDx2LXNuYWNrYmFyIHYtbW9kZWw9XCJzbmFja2JhclwiXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgdG9wXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgY29sb3I9XCJzdWNjZXNzXCJcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICAgICAgICAgICAgICBtdWx0aS1saW5lXFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgICAgICAgICAgdGltZW91dD1cIjMwMDBcIlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgICAgICAgICAgIGRpc21pc3NpYmxlPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtaWNvbiBjb2xvcj1cImFjY2VudFwiPmRvbmVfYWxsPC92LWljb24+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICBTYXZlZCBzdWNjZXNzZnVsbHkgOkRcXCcgK1xcclxcbiAgICAgICAgICAgIFxcJ1xcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPHYtYnRuIGNvbG9yPVwidHJhbnNwYXJlbnRcIiBAY2xpY2s9XCJzbmFja2JhciA9IGZhbHNlXCI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgICAgICAgIDx2LWljb24gY29sb3I9XCJhY2NlbnRcIj5jbG9zZTwvdi1pY29uPlxcJyArXFxyXFxuICAgICAgICAgICAgXFwnICAgICAgPC92LWJ0bj5cXCcgK1xcclxcbiAgICAgICAgICAgIFxcJyAgICA8L3Ytc25hY2tiYXI+XFwnICtcXHJcXG4gICAgICAgICAgICBcXCcgIDwvdi1mb3JtPlxcJyxcXHJcXG4gICAgICAgIGNvbXBvbmVudHMsXFxyXFxuICAgICAgICBkYXRhKCkge1xcclxcbiAgICAgICAgICAgIHJldHVybiB7XFxyXFxuICAgICAgICAgICAgICAgIGluZm86IHt9LFxcclxcbiAgICAgICAgICAgICAgICByZW5kZXJBcnJheToge30sXFxyXFxuICAgICAgICAgICAgICAgIHZhbHVlczoge30sXFxyXFxuICAgICAgICAgICAgICAgIHNhdmluZzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgIHNuYWNrYmFyOiBmYWxzZSxcXHJcXG4gICAgICAgICAgICAgICAgY2hhbmdlZDogMCxcXHJcXG4gICAgICAgICAgICAgICAgcmVnaXN0ZXJlZDogMCxcXHJcXG4gICAgICAgICAgICB9XFxyXFxuICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgcHJvcHM6IHtcXHJcXG4gICAgICAgICAgICByb3V0ZTogT2JqZWN0LFxcclxcbiAgICAgICAgICAgIHJlZ2lvbjogT2JqZWN0LFxcclxcbiAgICAgICAgfSxcXHJcXG5cXHJcXG4gICAgICAgIG1vdW50ZWQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICBhd2FpdCB0aGlzLnJlZ2lvbi5sb2FkKCk7XFxyXFxuICAgICAgICAgICAgdGhpcy5pbmZvID0gdGhpcy5yZWdpb24ucmVnaW9uUmF3LmluZm87XFxyXFxuXFxyXFxuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gYXdhaXQgdGhpcy5idWlsZCgpO1xcclxcbiAgICAgICAgICAgIHRoaXMucmVuZGVyQXJyYXkgPSBhd2FpdCB0aGlzLnJlZ2lvbi5yZWdpb25SYXcuYnVpbGQodGhpcy5yZWdpb24ubW9kdWxlLCB2YWx1ZXMsIHRoaXMuJHJvdXRlLnBhcmFtcyk7XFxyXFxuICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgbWV0aG9kczoge1xcclxcblxcclxcbiAgICAgICAgICAgIC8qKlxcclxcbiAgICAgICAgICAgICAqXFxyXFxuICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgYnVpbGQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlcyA9IHt9O1xcclxcblxcclxcbiAgICAgICAgICAgICAgICB0cnkge1xcclxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzID0gYXdhaXQgdGhpcy5yZWdpb24uZmlsZVN5c3RlbS5yZWFkSlNPTihgJHt0aGlzLnJlZ2lvbi5tb2R1bGUucGF0aH12YWx1ZXMvZm9ybS4ke3RoaXMuaW5mby5pZH0uanNvbmApO1xcclxcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYCR7dGhpcy5yZWdpb24ubW9kdWxlLnBhdGh9dmFsdWVzL2Zvcm0uJHt0aGlzLmluZm8uaWR9Lmpzb25gKVxcclxcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xcclxcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5yZWdpb24uZmlsZVN5c3RlbS53cml0ZShgJHt0aGlzLnJlZ2lvbi5tb2R1bGUucGF0aH12YWx1ZXMvZm9ybS4ke3RoaXMuaW5mby5pZH0uanNvbmAsIEpTT04uc3RyaW5naWZ5KHt9KSk7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgICAgICAvKlxcclxcbiAgICAgICAgICAgICAgICAgICAgICogQXQgdGhpcyBwb2ludCB3ZSBrbm93IHRoYXQgdGhlcmUgaXMgbm90aGluZyBpbiB0aGUgZmlsZVN5c3RlbSBhYm91dCB0aGlzIGZpbGUuXFxyXFxuICAgICAgICAgICAgICAgICAgICAgKiBTbyBpdFxcJ3Mgb2sgdG8gc2V0IHZhbHVlIGVtcHR5LlxcclxcbiAgICAgICAgICAgICAgICAgICAgICovXFxyXFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZXMgPSB7fTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAodmFsdWVzID09PSB1bmRlZmluZWQpIHJldHVybiB7fTtcXHJcXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlcztcXHJcXG4gICAgICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgICAgIHZhbGlkYXRlOiBhc3luYyBmdW5jdGlvbiAoKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgfSxcXHJcXG5cXHJcXG4gICAgICAgICAgICBzdWJtaXQ6IGFzeW5jIGZ1bmN0aW9uICgpIHtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zYXZpbmcgPSB0cnVlO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnNhdmUodGhpcy4kcm91dGUucGFyYW1zKTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLnZhbHVlcylcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zYXZpbmcgPSBmYWxzZTtcXHJcXG4gICAgICAgICAgICAgICAgdGhpcy5zbmFja2JhciA9IHRydWU7XFxyXFxuICAgICAgICAgICAgfSxcXHJcXG5cXHJcXG4gICAgICAgICAgICAvKipcXHJcXG4gICAgICAgICAgICAgKlxcclxcbiAgICAgICAgICAgICAqIEBwYXJhbSB2YWx1ZXNcXHJcXG4gICAgICAgICAgICAgKi9cXHJcXG4gICAgICAgICAgICBzYXZlOiBhc3luYyBmdW5jdGlvbiAodmFsdWVzKSB7XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZGVidWcoXFwndmFsdWVzIC0gMVxcJywgdmFsdWVzKTtcXHJcXG4gICAgICAgICAgICAgICAgdmFsdWVzID0gYXdhaXQgdGhpcy5yZWdpb24ucmVnaW9uUmF3LnN1Ym1pdCh0aGlzLnJvdXRlLm1vZHVsZSwgdmFsdWVzKTtcXHJcXG4gICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhcXCd2YWx1ZXMgLSAyXFwnLCB2YWx1ZXMpO1xcclxcblxcclxcbiAgICAgICAgICAgICAgICBpZiAoXFwnc2F2ZVxcJyBpbiB0aGlzLmluZm8gJiYgdGhpcy5pbmZvLnNhdmUgIT09IGZhbHNlKSB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAvL2F3YWl0IHRoaXMucmVnaW9uLmZpbGVTeXN0ZW0ud3JpdGUoYCR7dGhpcy5yb3V0ZXIubW9kdWxlLnBhdGh9dmFsdWVzL2Zvcm0uJHt0aGlzLmluZm8uaWR9Lmpzb25gLCBKU09OLnN0cmluZ2lmeSh2YWx1ZXMpKTtcXHJcXG4gICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgIH1cXHJcXG4gICAgICAgIH1cXHJcXG4gICAgfTtcXHJcXG59OycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvcmVnaW9ucy9mb3JtL0VkaXRJbWFnZS5qcycsICdjb25zdCBTZXR0aW5ncyA9IHtcXHJcXG5cXHJcXG4gICAgLyoqXFxyXFxuICAgICAqIEB0eXBlIHtPYmplY3R9XFxyXFxuICAgICAqIEBkZXNjcmlwdGlvbiBUaGlzIGhvbGRzIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmb3JtLlxcclxcbiAgICAgKi9cXHJcXG4gICAgXCJpbmZvXCI6IHtcXHJcXG4gICAgICAgIFwidGl0bGVcIjogXCJFZGl0IFNvdW5kXCIsXFxyXFxuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiVGhpcyBwYWdlIGlzIHVzZWQgdG8gY29udGFpbiBhIGJpZyBlbGVtZW50IHdpY2hcIixcXHJcXG4gICAgICAgIFwiaWRcIjogXCJpbWFnZV9lZGl0XCIsXFxyXFxuICAgICAgICBcInRhYlwiOiBcIm1pc2NcIixcXHJcXG4gICAgICAgIFwibG9jYXRpb25cIjogXCJzZXR0aW5nc1wiLFxcclxcbiAgICAgICAgXCJzdWJtaXRcIjogZmFsc2VcXHJcXG4gICAgfSxcXHJcXG5cXHJcXG4gICAgLyoqXFxyXFxuICAgICAqXFxyXFxuICAgICAqIEBwYXJhbSB7TW9kdWxlfSBNb2R1bGVcXHJcXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHZhbHVlc1xcclxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YVxcclxcbiAgICAgKlxcclxcbiAgICAgKiBAcmV0dXJucyB7e319XFxyXFxuICAgICAqL1xcclxcbiAgICBcImJ1aWxkXCI6IChNb2R1bGUsIHZhbHVlcywgZGF0YSkgPT4ge1xcclxcbiAgICAgICAgbGV0IGJ1aWxkID0ge307XFxyXFxuXFxyXFxuICAgICAgICBidWlsZC5pbWFnZV91cGxvYWQgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ2ltYWdlXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNmaWxlc1xcJzogTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ2ltYWdlX3VwbG9hZFxcJywgW10pLFxcclxcbiAgICAgICAgICAgIFxcJyN0b1xcJzoge1xcclxcbiAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZVxcJ1xcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgYnVpbGQuYWx0ZXJfdGlsZSA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwncmVkaXJlY3RfYnV0dG9uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnY2FuY2VsXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNhcHBlbmRJY29uXFwnOiBcXCdjbGVhclxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdG9cXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgbmFtZTogXFwnYWRkLnRpbGVcXCdcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIFxcJyNibG9ja1xcJzogdHJ1ZSxcXHJcXG4gICAgICAgICAgICBcXCcjY29sb3JcXCc6IFxcJ3JlZFxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjb3V0bGluZWRcXCc6IHRydWVcXHJcXG4gICAgICAgIH07XFxyXFxuXFxyXFxuICAgICAgICByZXR1cm4gYnVpbGQ7XFxyXFxuICAgIH0sXFxyXFxuICAgIHZhbGlkYXRlOiAoTW9kdWxlLCB2YWx1ZXMpID0+IHtcXHJcXG5cXHJcXG4gICAgICAgIC8qKlxcclxcbiAgICAgICAgICogUmV0dXJuIGtleTogdmFsdWUgZm9yIGVycm9yIG1lc3NhZ2VzLlxcclxcbiAgICAgICAgICpcXHJcXG4gICAgICAgICAqIGtleSA9PiBSZXNlbWJsaW5nIHRoZSBmaWVsZCBpZC5cXHJcXG4gICAgICAgICAqIHZhbHVlID0+IFJlc2VtYmxpbmcgdGhlIHRoZSBlcnJvciBtZXNzYWdlLlxcclxcbiAgICAgICAgICovXFxyXFxuICAgICAgICByZXR1cm4gdHJ1ZTtcXHJcXG4gICAgfSxcXHJcXG5cXHJcXG4gICAgc3VibWl0OiAoTW9kdWxlLCB2YWx1ZXMpID0+IHtcXHJcXG5cXHJcXG4gICAgICAgIC8vIFRoZSBzdWJtaXR0ZWQgdmFsdWVzIG9mIHRoZSB1c2VyLlxcclxcbiAgICAgICAgcmV0dXJuIHZhbHVlcztcXHJcXG4gICAgfSxcXHJcXG59O1xcclxcblxcclxcbigoKSA9PiB7XFxyXFxuICAgIHJldHVybiBTZXR0aW5ncztcXHJcXG59KSgpOycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvcmVnaW9ucy9mb3JtL0VkaXRTb3VuZC5qcycsICdjb25zdCBTZXR0aW5ncyA9IHtcXHJcXG5cXHJcXG4gICAgLyoqXFxyXFxuICAgICAqIEB0eXBlIHtPYmplY3R9XFxyXFxuICAgICAqIEBkZXNjcmlwdGlvbiBUaGlzIGhvbGRzIGluZm9ybWF0aW9uIGFib3V0IHRoZSBmb3JtLlxcclxcbiAgICAgKi9cXHJcXG4gICAgXCJpbmZvXCI6IHtcXHJcXG4gICAgICAgIFwidGl0bGVcIjogXCJFZGl0IFNvdW5kXCIsXFxyXFxuICAgICAgICBcImRlc2NyaXB0aW9uXCI6IFwiVGhpcyBwYWdlIGlzIHVzZWQgdG8gY29udGFpbiBhIGJpZyBlbGVtZW50IHdpY2hcIixcXHJcXG4gICAgICAgIFwiaWRcIjogXCJzb3VuZF9lZGl0XCIsXFxyXFxuICAgICAgICBcInRhYlwiOiBcIm1pc2NcIixcXHJcXG4gICAgICAgIFwibG9jYXRpb25cIjogXCJzZXR0aW5nc1wiLFxcclxcbiAgICAgICAgXCJzdWJtaXRcIjogZmFsc2VcXHJcXG4gICAgfSxcXHJcXG5cXHJcXG4gICAgLyoqXFxyXFxuICAgICAqXFxyXFxuICAgICAqIEBwYXJhbSB7TW9kdWxlfSBNb2R1bGVcXHJcXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHZhbHVlc1xcclxcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gZGF0YVxcclxcbiAgICAgKlxcclxcbiAgICAgKiBAcmV0dXJucyB7e319XFxyXFxuICAgICAqL1xcclxcbiAgICBcImJ1aWxkXCI6IChNb2R1bGUsIHZhbHVlcywgZGF0YSkgPT4ge1xcclxcbiAgICAgICAgbGV0IGJ1aWxkID0ge307XFxyXFxuXFxyXFxuICAgICAgICBidWlsZC5zb3VuZF91cGxvYWQgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3NvdW5kXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNmaWxlc1xcJzogTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ3NvdW5kX3VwbG9hZFxcJywgW10pLFxcclxcbiAgICAgICAgICAgIFxcJyN0b1xcJzoge1xcclxcbiAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZVxcJ1xcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgYnVpbGQuYWx0ZXJfdGlsZSA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwncmVkaXJlY3RfYnV0dG9uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnY2FuY2VsXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNhcHBlbmRJY29uXFwnOiBcXCdjbGVhclxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdG9cXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgbmFtZTogXFwnYWRkLnRpbGVcXCdcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIFxcJyNibG9ja1xcJzogdHJ1ZSxcXHJcXG4gICAgICAgICAgICBcXCcjY29sb3JcXCc6IFxcJ3JlZFxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjb3V0bGluZWRcXCc6IHRydWVcXHJcXG4gICAgICAgIH07XFxyXFxuXFxyXFxuICAgICAgICByZXR1cm4gYnVpbGQ7XFxyXFxuICAgIH0sXFxyXFxuICAgIHZhbGlkYXRlOiAoTW9kdWxlLCB2YWx1ZXMpID0+IHtcXHJcXG5cXHJcXG4gICAgICAgIC8qKlxcclxcbiAgICAgICAgICogUmV0dXJuIGtleTogdmFsdWUgZm9yIGVycm9yIG1lc3NhZ2VzLlxcclxcbiAgICAgICAgICpcXHJcXG4gICAgICAgICAqIGtleSA9PiBSZXNlbWJsaW5nIHRoZSBmaWVsZCBpZC5cXHJcXG4gICAgICAgICAqIHZhbHVlID0+IFJlc2VtYmxpbmcgdGhlIHRoZSBlcnJvciBtZXNzYWdlLlxcclxcbiAgICAgICAgICovXFxyXFxuICAgICAgICByZXR1cm4gdHJ1ZTtcXHJcXG4gICAgfSxcXHJcXG5cXHJcXG4gICAgc3VibWl0OiAoTW9kdWxlLCB2YWx1ZXMpID0+IHtcXHJcXG5cXHJcXG4gICAgICAgIC8vIFRoZSBzdWJtaXR0ZWQgdmFsdWVzIG9mIHRoZSB1c2VyLlxcclxcbiAgICAgICAgcmV0dXJuIHZhbHVlcztcXHJcXG4gICAgfSxcXHJcXG59O1xcclxcblxcclxcbigoKSA9PiB7XFxyXFxuICAgIHJldHVybiBTZXR0aW5ncztcXHJcXG59KSgpOycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvcmVnaW9ucy9mb3JtL1NldHRpbmdzLmpzJywgJ2NvbnN0IFNldHRpbmdzID0ge1xcclxcblxcclxcbiAgICAvKipcXHJcXG4gICAgICogQHR5cGUge09iamVjdH1cXHJcXG4gICAgICogQGRlc2NyaXB0aW9uIFRoaXMgaG9sZHMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGZvcm0uXFxyXFxuICAgICAqL1xcclxcbiAgICBcImluZm9cIjoge1xcclxcbiAgICAgICAgXCJ0aXRsZVwiOiBcIlRpbGUgU2V0dGluZ3NcIixcXHJcXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJDb25maWd1cmUgeW91ciBzZXR0aW5ncyBoZXJlLlwiLFxcclxcbiAgICAgICAgXCJpZFwiOiBcImV4YW1wbGVfZm9ybVwiLFxcclxcbiAgICAgICAgXCJ0YWJcIjogXCJtaXNjXCIsXFxyXFxuICAgICAgICBcImxvY2F0aW9uXCI6IFwic2V0dGluZ3NcIlxcclxcbiAgICB9LFxcclxcblxcclxcbiAgICBcImJ1aWxkXCI6IChNb2R1bGUsIHZhbHVlcywgZGF0YSkgPT4ge1xcclxcbiAgICAgICAgbGV0IGJ1aWxkID0ge307XFxyXFxuICAgICAgICBidWlsZC50d29fY29sdW1uID0ge1xcclxcbiAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCd0d29fY29sdW1uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNmaXJzdFxcJzoge1xcclxcbiAgICAgICAgICAgICAgICB0aWxlOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwndGlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnfnRpbGVfdGl0bGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjaW1hZ2VzXFwnOiBcXCd+aW1hZ2VfdXBsb2FkXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3NvdW5kc1xcJzogXFwnfnNvdW5kX3VwbG9hZFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNjbGFzc2VzXFwnOiBcXCd+dGlsZV9zdHlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNiYWNrZ3JvdW5kQ29sb3JcXCc6IFxcJ350aWxlX2NvbG9yXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3RleHRDb2xvclxcJzogTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ3RleHRfY29sb3JcXCcsIFxcJyMwMDAwMDBcXCcpLFxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgXFwnI3NlY29uZFxcJzoge1xcclxcbiAgICAgICAgICAgICAgICB0aWxlX2NvbG9yOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwnY29sb3JwaWNrZXJcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ0NvbG9yXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2hpZGVNb2RlU3dpdGNoXFwnOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2Rlc2NyaXB0aW9uXFwnOiBcXCdUaGlzIGNvbG9yIHdpbGwgYmUgdGhlIGRlZmF1bHQgY29sb3Igb2YgdGhlIHRpbGUuXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3ZhbHVlXFwnOiBNb2R1bGUuZmFsbGJhY2soZGF0YSwgXFwndGlsZV9jb2xvclxcJywgXFwnIzMyYTg1MlxcJyksXFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLnRpbGVfdGl0bGUgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3RleHRmaWVsZFxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ1RpdGxlXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnVGhpcyBpcyBzaG93biBpbiB0aGUgY2VudGVyIG9mIHRoZSB0aWxlLlxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdmFsdWVcXCc6IE1vZHVsZS5mYWxsYmFjayhkYXRhLCBcXCd0aWxlX3RpdGxlXFwnLCBcXCdNeSBzb3VuZCFcXCcpLFxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLnRpbGVfc3R5bGUgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ2Ryb3Bkb3duXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnVGlsZSBTdHlsZVxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjZGVzY3JpcHRpb25cXCc6IFxcJ1RoZSBzdHlsZSBpcyB1c2VkIHRvIG1ha2UgeW91ciB0aWxlIGxvb2sgbmljZS5cXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3ZhbHVlXFwnOiBNb2R1bGUuZmFsbGJhY2sodmFsdWVzLCBcXCd0aWxlX3N0eWxlXFwnLCBNb2R1bGUuZmFsbGJhY2soZGF0YSwgXFwndGlsZV9zdHlsZVxcJywgW1xcJ2RlZmF1bHRcXCddKSksXFxyXFxuICAgICAgICAgICAgXFwnI2l0ZW1zXFwnOiBbXFxyXFxuICAgICAgICAgICAgICAgIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ3RleHRcXCc6IFxcJ0RlZmF1bHRcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd2YWx1ZVxcJzogW1xcJ2RlZmF1bHRcXCddXFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ3RleHRcXCc6IFxcJ0ltYWdlIEJhY2tncm91bmRcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd2YWx1ZVxcJzogW1xcJ2ltYWdlXFwnXVxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd0ZXh0XFwnOiBcXCdIb3Jpem9udGFsIDUwLzUwXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwndmFsdWVcXCc6IFtcXCdob3Jpem9udGFsLTUwLTUwXFwnXVxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd0ZXh0XFwnOiBcXCdWZXJ0aWNhbCA1MC81MFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ3ZhbHVlXFwnOiBbXFwndmVydGljYWwtNTAtNTBcXCddXFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgXVxcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgYnVpbGQuYWx0ZXJfdGV4dCA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwncmVkaXJlY3RfYnV0dG9uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnQ3VzdG9taXplIFRleHRcXCcsXFxyXFxuICAgICAgICAgICAgXFwnI2FwcGVuZEljb25cXCc6IFxcJ3RleHRfZm9ybWF0XFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0b1xcJzoge1xcclxcbiAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZS50ZXh0XFwnXFxyXFxuICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICBcXCcjYmxvY2tcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgXFwnI2NvbG9yXFwnOiBcXCdpbmZvXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNvdXRsaW5lZFxcJzogdHJ1ZVxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLmFkdmFuY2VkX3NldHRpbmdzID0ge1xcclxcbiAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCdhY2NvcmRpb25cXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3BhbmVsc1xcJzogW1xcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ1NvdW5kXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2NvbnRlbnRcXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhZ3JhcGg6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3BhcmFncmFwaFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2ZsYXRcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnRGVzY3JpcHRpb25cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnVGhpcyBpcyB2ZXJ5IGNvb2xcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN2YWx1ZVxcJzogXFwnQWRkIHlvdXIgc291bmQgZmlsZSwgc28gd2UgY2FuIHN0YXJ0IHRvIGVkaXQgOkRcXCdcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdW5kX3VwbG9hZDoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwndXBsb2FkXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ1NvdW5kIEZpbGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnU2VsZWN0IHlvdXIgc291bmQgZmlsZS5cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN2YWx1ZVxcJzogTW9kdWxlLmZhbGxiYWNrKHZhbHVlcywgXFwnc291bmRfdXBsb2FkXFwnLCBNb2R1bGUuZmFsbGJhY2soZGF0YSwgXFwnc291bmRfdXBsb2FkXFwnLCBbXSkpLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgc291bmRfdXBsb2FkX2VkaXQ6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3JlZGlyZWN0X2J1dHRvblxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdFZGl0IGF1ZGlvIGZpbGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNhcHBlbmRJY29uXFwnOiBcXCdhdWRpb3RyYWNrXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdmlmXFwnOiBcXCd+c291bmRfdXBsb2FkXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdG9cXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFxcJ2NvcmUuc291bmRcXCdcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2Jsb2NrXFwnOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjY29sb3JcXCc6IFxcJ2luZm9cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNvdXRsaW5lZFxcJzogdHJ1ZVxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAge1xcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdJbWFnZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNjb250ZW50XFwnOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VfdXBsb2FkOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCd1cGxvYWRcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnSW1hZ2UgRmlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2Rlc2NyaXB0aW9uXFwnOiBcXCdTZWxlY3QgeW91ciBzb3VuZCBmaWxlLlxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3BlcnNpc3RlbnRIaW50XFwnOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdmFsdWVcXCc6IE1vZHVsZS5mYWxsYmFjayh2YWx1ZXMsIFxcJ2ltYWdlX3VwbG9hZFxcJywgTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ2ltYWdlX3VwbG9hZFxcJywgW10pKSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlX3VwbG9hZF9lZGl0OiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCdyZWRpcmVjdF9idXR0b25cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnRWRpdCBpbWFnZSBmaWxlXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjYXBwZW5kSWNvblxcJzogXFwnY3JvcF9vcmlnaW5hbFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3ZpZlxcJzogXFwnfmltYWdlX3VwbG9hZFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3RvXFwnOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZS5pbWFnZVxcJ1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjc2hvd1xcJzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNibG9ja1xcJzogdHJ1ZSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2NvbG9yXFwnOiBcXCdpbmZvXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjb3V0bGluZWRcXCc6IHRydWVcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIF0sXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgcmV0dXJuIGJ1aWxkO1xcclxcbiAgICB9LFxcclxcbiAgICB2YWxpZGF0ZTogKE1vZHVsZSwgdmFsdWVzKSA9PiB7XFxyXFxuXFxyXFxuICAgICAgICAvKipcXHJcXG4gICAgICAgICAqIFJldHVybiBrZXk6IHZhbHVlIGZvciBlcnJvciBtZXNzYWdlcy5cXHJcXG4gICAgICAgICAqXFxyXFxuICAgICAgICAgKiBrZXkgPT4gUmVzZW1ibGluZyB0aGUgZmllbGQgaWQuXFxyXFxuICAgICAgICAgKiB2YWx1ZSA9PiBSZXNlbWJsaW5nIHRoZSB0aGUgZXJyb3IgbWVzc2FnZS5cXHJcXG4gICAgICAgICAqL1xcclxcbiAgICAgICAgcmV0dXJuIHRydWU7XFxyXFxuICAgIH0sXFxyXFxuXFxyXFxuICAgIHN1Ym1pdDogKE1vZHVsZSwgdmFsdWVzKSA9PiB7XFxyXFxuXFxyXFxuICAgICAgICAvLyBUaGUgc3VibWl0dGVkIHZhbHVlcyBvZiB0aGUgdXNlci5cXHJcXG4gICAgICAgIHJldHVybiB2YWx1ZXM7XFxyXFxuICAgIH0sXFxyXFxufTtcXHJcXG5cXHJcXG4oKCkgPT4ge1xcclxcbiAgICByZXR1cm4gU2V0dGluZ3M7XFxyXFxufSkoKTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL3JlZ2lvbnMvZm9ybS90aWxlL0FkZFRpbGUuanMnLCAnY29uc3QgU2V0dGluZ3MgPSB7XFxyXFxuXFxyXFxuICAgIC8qKlxcclxcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxcclxcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhpcyBob2xkcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ybS5cXHJcXG4gICAgICovXFxyXFxuICAgIFwiaW5mb1wiOiB7XFxyXFxuICAgICAgICBcInRpdGxlXCI6IFwiVGlsZSBTZXR0aW5nc1wiLFxcclxcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkNvbmZpZ3VyZSB5b3VyIHNldHRpbmdzIGhlcmUuXCIsXFxyXFxuICAgICAgICBcImlkXCI6IFwiZXhhbXBsZV9mb3JtXCIsXFxyXFxuICAgICAgICBcInRhYlwiOiBcIm1pc2NcIixcXHJcXG4gICAgICAgIFwibG9jYXRpb25cIjogXCJzZXR0aW5nc1wiLFxcclxcbiAgICAgICAgXCJzYXZlXCI6IGZhbHNlLFxcclxcbiAgICB9LFxcclxcblxcclxcbiAgICBcImJ1aWxkXCI6IChNb2R1bGUsIHZhbHVlcywgZGF0YSkgPT4ge1xcclxcbiAgICAgICAgbGV0IGJ1aWxkID0ge307XFxyXFxuICAgICAgICBidWlsZC50d29fY29sdW1uID0ge1xcclxcbiAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCd0d29fY29sdW1uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNmaXJzdFxcJzoge1xcclxcbiAgICAgICAgICAgICAgICB0aWxlOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwndGlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnfnRpbGVfdGl0bGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjaW1hZ2VzXFwnOiBcXCd+aW1hZ2VfdXBsb2FkXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3NvdW5kc1xcJzogXFwnfnNvdW5kX3VwbG9hZFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNjbGFzc2VzXFwnOiBcXCd+dGlsZV9zdHlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNiYWNrZ3JvdW5kQ29sb3JcXCc6IFxcJ350aWxlX2NvbG9yXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3RleHRDb2xvclxcJzogTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ3RleHRfY29sb3JcXCcsIFxcJyMwMDAwMDBcXCcpLFxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgXFwnI3NlY29uZFxcJzoge1xcclxcbiAgICAgICAgICAgICAgICB0aWxlX2NvbG9yOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwnY29sb3JwaWNrZXJcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ0NvbG9yXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2hpZGVNb2RlU3dpdGNoXFwnOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2Rlc2NyaXB0aW9uXFwnOiBcXCdUaGlzIGNvbG9yIHdpbGwgYmUgdGhlIGRlZmF1bHQgY29sb3Igb2YgdGhlIHRpbGUuXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3ZhbHVlXFwnOiBNb2R1bGUuZmFsbGJhY2soZGF0YSwgXFwndGlsZV9jb2xvclxcJywgXFwnIzMyYTg1MlxcJyksXFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLnRpbGVfdGl0bGUgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3RleHRmaWVsZFxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ1RpdGxlXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnVGhpcyBpcyBzaG93biBpbiB0aGUgY2VudGVyIG9mIHRoZSB0aWxlLlxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdmFsdWVcXCc6IE1vZHVsZS5mYWxsYmFjayhkYXRhLCBcXCd0aWxlX3RpdGxlXFwnLCBcXCdNeSBzb3VuZCFcXCcpLFxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLnRpbGVfc3R5bGUgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ2Ryb3Bkb3duXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnVGlsZSBTdHlsZVxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjZGVzY3JpcHRpb25cXCc6IFxcJ1RoZSBzdHlsZSBpcyB1c2VkIHRvIG1ha2UgeW91ciB0aWxlIGxvb2sgbmljZS5cXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3ZhbHVlXFwnOiBNb2R1bGUuZmFsbGJhY2sodmFsdWVzLCBcXCd0aWxlX3N0eWxlXFwnLCBNb2R1bGUuZmFsbGJhY2soZGF0YSwgXFwndGlsZV9zdHlsZVxcJywgW1xcJ2RlZmF1bHRcXCddKSksXFxyXFxuICAgICAgICAgICAgXFwnI2l0ZW1zXFwnOiBbXFxyXFxuICAgICAgICAgICAgICAgIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ3RleHRcXCc6IFxcJ0RlZmF1bHRcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd2YWx1ZVxcJzogW1xcJ2RlZmF1bHRcXCddXFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgIHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ3RleHRcXCc6IFxcJ0ltYWdlIEJhY2tncm91bmRcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd2YWx1ZVxcJzogW1xcJ2ltYWdlXFwnXVxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd0ZXh0XFwnOiBcXCdIb3Jpem9udGFsIDUwLzUwXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwndmFsdWVcXCc6IFtcXCdob3Jpem9udGFsLTUwLTUwXFwnXVxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCd0ZXh0XFwnOiBcXCdWZXJ0aWNhbCA1MC81MFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJ3ZhbHVlXFwnOiBbXFwndmVydGljYWwtNTAtNTBcXCddXFxyXFxuICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgXVxcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgYnVpbGQuYWx0ZXJfdGV4dCA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwncmVkaXJlY3RfYnV0dG9uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnQ3VzdG9taXplIFRleHRcXCcsXFxyXFxuICAgICAgICAgICAgXFwnI2FwcGVuZEljb25cXCc6IFxcJ3RleHRfZm9ybWF0XFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0b1xcJzoge1xcclxcbiAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZS50ZXh0XFwnXFxyXFxuICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICBcXCcjYmxvY2tcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgXFwnI2NvbG9yXFwnOiBcXCdpbmZvXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyNvdXRsaW5lZFxcJzogdHJ1ZVxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLmFkdmFuY2VkX3NldHRpbmdzID0ge1xcclxcbiAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCdhY2NvcmRpb25cXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3BhbmVsc1xcJzogW1xcclxcbiAgICAgICAgICAgICAgICB7XFxyXFxuICAgICAgICAgICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ1NvdW5kXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2NvbnRlbnRcXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhZ3JhcGg6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3BhcmFncmFwaFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2ZsYXRcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnRGVzY3JpcHRpb25cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnVGhpcyBpcyB2ZXJ5IGNvb2xcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN2YWx1ZVxcJzogXFwnQWRkIHlvdXIgc291bmQgZmlsZSwgc28gd2UgY2FuIHN0YXJ0IHRvIGVkaXQgOkRcXCdcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdW5kX3VwbG9hZDoge1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwndXBsb2FkXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ1NvdW5kIEZpbGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNkZXNjcmlwdGlvblxcJzogXFwnU2VsZWN0IHlvdXIgc291bmQgZmlsZS5cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN2YWx1ZVxcJzogTW9kdWxlLmZhbGxiYWNrKHZhbHVlcywgXFwnc291bmRfdXBsb2FkXFwnLCBNb2R1bGUuZmFsbGJhY2soZGF0YSwgXFwnc291bmRfdXBsb2FkXFwnLCBbXSkpLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgc291bmRfdXBsb2FkX2VkaXQ6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3JlZGlyZWN0X2J1dHRvblxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdFZGl0IGF1ZGlvIGZpbGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNhcHBlbmRJY29uXFwnOiBcXCdhdWRpb3RyYWNrXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdmlmXFwnOiBcXCd+c291bmRfdXBsb2FkXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdG9cXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFxcJ2NvcmUuc291bmRcXCdcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2Jsb2NrXFwnOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjY29sb3JcXCc6IFxcJ2luZm9cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNvdXRsaW5lZFxcJzogdHJ1ZVxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICAgICAgfSxcXHJcXG4gICAgICAgICAgICAgICAge1xcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdJbWFnZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyNjb250ZW50XFwnOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2VfdXBsb2FkOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCd1cGxvYWRcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnSW1hZ2UgRmlsZVxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2Rlc2NyaXB0aW9uXFwnOiBcXCdTZWxlY3QgeW91ciBzb3VuZCBmaWxlLlxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3BlcnNpc3RlbnRIaW50XFwnOiB0cnVlLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjdmFsdWVcXCc6IE1vZHVsZS5mYWxsYmFjayh2YWx1ZXMsIFxcJ2ltYWdlX3VwbG9hZFxcJywgTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ2ltYWdlX3VwbG9hZFxcJywgW10pKSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcblxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgIGltYWdlX3VwbG9hZF9lZGl0OiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCdyZWRpcmVjdF9idXR0b25cXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnRWRpdCBpbWFnZSBmaWxlXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjYXBwZW5kSWNvblxcJzogXFwnY3JvcF9vcmlnaW5hbFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3ZpZlxcJzogXFwnfmltYWdlX3VwbG9hZFxcJyxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI3RvXFwnOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZS5pbWFnZVxcJ1xcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjc2hvd1xcJzogZmFsc2UsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxcJyNibG9ja1xcJzogdHJ1ZSxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXFwnI2NvbG9yXFwnOiBcXCdpbmZvXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcXCcjb3V0bGluZWRcXCc6IHRydWVcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgfVxcclxcbiAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIF0sXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgcmV0dXJuIGJ1aWxkO1xcclxcbiAgICB9LFxcclxcbiAgICB2YWxpZGF0ZTogKE1vZHVsZSwgdmFsdWVzKSA9PiB7XFxyXFxuXFxyXFxuICAgICAgICAvKipcXHJcXG4gICAgICAgICAqIFJldHVybiBrZXk6IHZhbHVlIGZvciBlcnJvciBtZXNzYWdlcy5cXHJcXG4gICAgICAgICAqXFxyXFxuICAgICAgICAgKiBrZXkgPT4gUmVzZW1ibGluZyB0aGUgZmllbGQgaWQuXFxyXFxuICAgICAgICAgKiB2YWx1ZSA9PiBSZXNlbWJsaW5nIHRoZSB0aGUgZXJyb3IgbWVzc2FnZS5cXHJcXG4gICAgICAgICAqL1xcclxcbiAgICAgICAgcmV0dXJuIHRydWU7XFxyXFxuICAgIH0sXFxyXFxuXFxyXFxuICAgIHN1Ym1pdDogYXN5bmMgKE1vZHVsZSwgdmFsdWVzKSA9PiB7XFxyXFxuICAgICAgICBjb25zdCBwcmVmaXggPSBcXCcvc291bmRib2FyZFxcJztcXHJcXG4gICAgICAgIGNvbnN0IHBhdGggPSBgJHtwcmVmaXh9JHt2YWx1ZXMucGF0aH1gO1xcclxcbiAgICAgICAgY29uc3QgZmlsZV9uYW1lID0gRGF0ZS5ub3coKTtcXHJcXG5cXHJcXG4gICAgICAgIC8qKiBAdmFyIGltYWdlcyB7QXJyYXk8RmlsZT59ICovXFxyXFxuICAgICAgICBjb25zdCBpbWFnZXMgPSBNb2R1bGUuZmFsbGJhY2sodmFsdWVzLCBcXCdpbWFnZV91cGxvYWRcXCcsIGZhbHNlKTtcXHJcXG4gICAgICAgIGlmIChpbWFnZXMgIT09IGZhbHNlKSB7XFxyXFxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbWFnZXM7IGkrKykge1xcclxcblxcclxcbiAgICAgICAgICAgICAgICAvKiogQHZhciBpbWFnZSB7RmlsZX0gKi9cXHJcXG4gICAgICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBpbWFnZXNbaV07XFxyXFxuXFxyXFxuICAgICAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBuZXcgQmxvYihbaW1hZ2VdLCB7XFxyXFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbWFnZS5taW1lVHlwZVxcclxcbiAgICAgICAgICAgICAgICB9KTtcXHJcXG5cXHJcXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coaW1hZ2UuZmlsZW5hbWUpXFxyXFxuICAgICAgICAgICAgICAgIGF3YWl0IE1vZHVsZS5maWxlU3lzdGVtLndyaXRlKGAke3BhdGh9ZmlsZXMvJHtmaWxlX25hbWV9XyR7aW1hZ2UuZmlsZW5hbWV9YCwgYmxvYik7XFxyXFxuICAgICAgICAgICAgfVxcclxcbiAgICAgICAgfVxcclxcblxcclxcblxcclxcbiAgICAgICAgYXdhaXQgTW9kdWxlLmZpbGVTeXN0ZW0ud3JpdGUoYCR7cGF0aH0ke2ZpbGVfbmFtZX0uanNvbmAsIEpTT04uc3RyaW5naWZ5KHZhbHVlcykpXFxyXFxuXFxyXFxuICAgICAgICAvLyBUaGUgc3VibWl0dGVkIHZhbHVlcyBvZiB0aGUgdXNlci5cXHJcXG4gICAgICAgIHJldHVybiB2YWx1ZXM7XFxyXFxuICAgIH0sXFxyXFxufTtcXHJcXG5cXHJcXG4oKCkgPT4ge1xcclxcbiAgICByZXR1cm4gU2V0dGluZ3M7XFxyXFxufSkoKTsnKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmZpbGVTeXN0ZW0ud3JpdGUoJy9tb2R1bGVzL2NvcmUvc3JjL3JlZ2lvbnMvZm9ybS90aWxlL1RpbGVUZXh0LmpzJywgJ2NvbnN0IEZvcm0gPSB7XFxyXFxuXFxyXFxuICAgIC8qKlxcclxcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxcclxcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhpcyBob2xkcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ybS5cXHJcXG4gICAgICovXFxyXFxuICAgIFwiaW5mb1wiOiB7XFxyXFxuICAgICAgICBcInRpdGxlXCI6IFwiVEVYVCBTRVRUSU5HU1wiLFxcclxcbiAgICAgICAgXCJkZXNjcmlwdGlvblwiOiBcIkFsbCB5b3Ugd2FudCBpbiB5b3VyIHRleHQgc2hhbGwgYmUgaGVyZS5cIixcXHJcXG4gICAgICAgIFwiaWRcIjogXCJ0aWxlX3RleHRcIixcXHJcXG4gICAgICAgIFwibG9jYXRpb25cIjogXCJzZXR0aW5nc1wiLFxcclxcbiAgICAgICAgXCJzdWJtaXRcIjogZmFsc2UsXFxyXFxuICAgIH0sXFxyXFxuXFxyXFxuICAgIFwiYnVpbGRcIjogKE1vZHVsZSwgdmFsdWVzLCBkYXRhKSA9PiB7XFxyXFxuICAgICAgICBsZXQgYnVpbGQgPSB7fTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLnRleHQgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3BhcmFncmFwaFxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdmFsdWVcXCc6IE1vZHVsZS5mYWxsYmFjayhkYXRhLCBcXCd0aWxlX3RpdGxlXFwnLCBcXCdMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldFxcJyksXFxyXFxuICAgICAgICAgICAgXFwnI3RleHRDb2xvclxcJzogXFwnfnRleHRfY29sb3JcXCcsXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgYnVpbGQudGV4dF9jb2xvciA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwnY29sb3JwaWNrZXJcXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdDb2xvclxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjY2xhc3NDU1NcXCc6IFtcXCdtdC0zXFwnLCBcXCdtYi0zXFwnXSxcXHJcXG4gICAgICAgICAgICBcXCcjaGlkZU1vZGVTd2l0Y2hcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgXFwnI2Rlc2NyaXB0aW9uXFwnOiBcXCdUaGlzIGNvbG9yIHdpbGwgYmUgdGhlIGRlZmF1bHQgY29sb3Igb2YgdGhlIHRpbGUuXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN2YWx1ZVxcJzogTW9kdWxlLmZhbGxiYWNrKGRhdGEsIFxcJ3RleHRfY29sb3JcXCcsIFxcJyMzMmE4NTJcXCcpLFxcclxcbiAgICAgICAgfVxcclxcblxcclxcbiAgICAgICAgYnVpbGQuYWx0ZXJfdGV4dCA9IHtcXHJcXG4gICAgICAgICAgICBcXCcjdHlwZVxcJzogXFwncmVkaXJlY3RfYnV0dG9uXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnQ29uZmlybVxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjcHJlcGVuZEljb25cXCc6IFxcJ2V4aXRfdG9fYXBwXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0b1xcJzoge1xcclxcbiAgICAgICAgICAgICAgICBuYW1lOiBcXCdhZGQudGlsZVxcJ1xcclxcbiAgICAgICAgICAgIH0sXFxyXFxuICAgICAgICAgICAgXFwnI2NvbG9yXFwnOiBcXCdncmVlblxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjb3V0bGluZWRcXCc6IHRydWUsXFxyXFxuICAgICAgICAgICAgXFwnI2Jsb2NrXFwnOiB0cnVlXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcblxcclxcblxcclxcbiAgICAgICAgcmV0dXJuIGJ1aWxkO1xcclxcbiAgICB9LFxcclxcbiAgICB2YWxpZGF0ZTogKE1vZHVsZSwgdmFsdWVzKSA9PiB7XFxyXFxuXFxyXFxuICAgICAgICAvKipcXHJcXG4gICAgICAgICAqIFJldHVybiBrZXk6IHZhbHVlIGZvciBlcnJvciBtZXNzYWdlcy5cXHJcXG4gICAgICAgICAqXFxyXFxuICAgICAgICAgKiBrZXkgPT4gUmVzZW1ibGluZyB0aGUgZmllbGQgaWQuXFxyXFxuICAgICAgICAgKiB2YWx1ZSA9PiBSZXNlbWJsaW5nIHRoZSB0aGUgZXJyb3IgbWVzc2FnZS5cXHJcXG4gICAgICAgICAqL1xcclxcbiAgICAgICAgcmV0dXJuIHRydWU7XFxyXFxuICAgIH0sXFxyXFxuXFxyXFxuICAgIHN1Ym1pdDogKE1vZHVsZSwgdmFsdWVzKSA9PiB7XFxyXFxuXFxyXFxuICAgICAgICAvLyBUaGUgc3VibWl0dGVkIHZhbHVlcyBvZiB0aGUgdXNlci5cXHJcXG4gICAgICAgIHJldHVybiB2YWx1ZXM7XFxyXFxuICAgIH0sXFxyXFxufTtcXHJcXG5cXHJcXG4oKCkgPT4ge1xcclxcbiAgICByZXR1cm4gRm9ybTtcXHJcXG59KSgpOycpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZmlsZVN5c3RlbS53cml0ZSgnL21vZHVsZXMvY29yZS9zcmMvcmVnaW9ucy9mb3JtL1RpbGVUZW1wbGF0ZXMuanMnLCAnY29uc3QgU2V0dGluZ3MgPSB7XFxyXFxuXFxyXFxuICAgIC8qKlxcclxcbiAgICAgKiBAdHlwZSB7T2JqZWN0fVxcclxcbiAgICAgKiBAZGVzY3JpcHRpb24gVGhpcyBob2xkcyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZm9ybS5cXHJcXG4gICAgICovXFxyXFxuICAgIFwiaW5mb1wiOiB7XFxyXFxuICAgICAgICBcInRpdGxlXCI6IFwiVGlsZSBUZW1wbGF0ZXNcIixcXHJcXG4gICAgICAgIFwiZGVzY3JpcHRpb25cIjogXCJGaW5kIGFuZCBjaG9vc2UgdGhlIHRpbGUgdGVtcGxhdGVzIHlvdSB3YW50IHRvIHVzZS5cIixcXHJcXG4gICAgICAgIFwiaWRcIjogXCJ0aWxlX3RlbXBsYXRlc1wiLFxcclxcbiAgICAgICAgXCJ0YWJcIjogXCJtaXNjXCIsXFxyXFxuICAgICAgICBcImxvY2F0aW9uXCI6IFwic2V0dGluZ3NcIixcXHJcXG4gICAgICAgIFwic3VibWl0XCI6IGZhbHNlXFxyXFxuICAgIH0sXFxyXFxuXFxyXFxuICAgIC8qKlxcclxcbiAgICAgKlxcclxcbiAgICAgKiBAcGFyYW0ge01vZHVsZX0gTW9kdWxlXFxyXFxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSB2YWx1ZXNcXHJcXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGFcXHJcXG4gICAgICpcXHJcXG4gICAgICogQHJldHVybnMge3t9fVxcclxcbiAgICAgKi9cXHJcXG4gICAgXCJidWlsZFwiOiAoTW9kdWxlLCB2YWx1ZXMsIGRhdGEpID0+IHtcXHJcXG4gICAgICAgIGxldCBidWlsZCA9IHt9O1xcclxcblxcclxcbiAgICAgICAgYnVpbGQudGl0bGUgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ2hlYWRsaW5lXFwnLFxcclxcbiAgICAgICAgICAgIFxcJyN0aXRsZVxcJzogXFwnVGlsZSBUZW1wbGF0ZXNcXCcsXFxyXFxuICAgICAgICB9O1xcclxcblxcclxcbiAgICAgICAgYnVpbGQudGlsZV9jb2x1bW4gPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ29uZV9jb2x1bW5cXCcsXFxyXFxuICAgICAgICAgICAgXFwnI2NvbnRlbnRcXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgYWRkX3RpbGU6IHtcXHJcXG4gICAgICAgICAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCd0aWxlX3RlbXBsYXRlXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdUaWxlXFwnLFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI3RvXFwnOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXFwnYWRkLnRpbGVcXCcsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7XFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbGVfdGl0bGU6IFwiXCIsXFxyXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IGRhdGEucGF0aCxcXHJcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxyXFxuICAgICAgICAgICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgICAgICAgICAgXFwnI2NvbG9yXFwnOiBcXCdpbmZvXFwnXFxyXFxuICAgICAgICAgICAgICAgIH1cXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIGJ1aWxkLmJvYXJkID0ge1xcclxcbiAgICAgICAgICAgIFxcJyN0eXBlXFwnOiBcXCdoZWFkbGluZVxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdGl0bGVcXCc6IFxcJ0JvYXJkIFRlbXBsYXRlc1xcJyxcXHJcXG4gICAgICAgIH07XFxyXFxuXFxyXFxuICAgICAgICBidWlsZC5hZGRfYm9hcmQgPSB7XFxyXFxuICAgICAgICAgICAgXFwnI3R5cGVcXCc6IFxcJ3RpbGVfdGVtcGxhdGVcXCcsXFxyXFxuICAgICAgICAgICAgXFwnI3RpdGxlXFwnOiBcXCdCb2FyZFxcJyxcXHJcXG4gICAgICAgICAgICBcXCcjdG9cXCc6IHtcXHJcXG4gICAgICAgICAgICAgICAgbmFtZTogXFwnYWRkLnRpbGVcXCdcXHJcXG4gICAgICAgICAgICB9LFxcclxcbiAgICAgICAgICAgIFxcJyNjb2xvclxcJzogXFwnaW5mb1xcJ1xcclxcbiAgICAgICAgfTtcXHJcXG5cXHJcXG4gICAgICAgIHJldHVybiBidWlsZDtcXHJcXG4gICAgfSxcXHJcXG4gICAgdmFsaWRhdGU6IChNb2R1bGUsIHZhbHVlcykgPT4ge1xcclxcblxcclxcbiAgICAgICAgLyoqXFxyXFxuICAgICAgICAgKiBSZXR1cm4ga2V5OiB2YWx1ZSBmb3IgZXJyb3IgbWVzc2FnZXMuXFxyXFxuICAgICAgICAgKlxcclxcbiAgICAgICAgICoga2V5ID0+IFJlc2VtYmxpbmcgdGhlIGZpZWxkIGlkLlxcclxcbiAgICAgICAgICogdmFsdWUgPT4gUmVzZW1ibGluZyB0aGUgdGhlIGVycm9yIG1lc3NhZ2UuXFxyXFxuICAgICAgICAgKi9cXHJcXG4gICAgICAgIHJldHVybiB0cnVlO1xcclxcbiAgICB9LFxcclxcblxcclxcbiAgICBzdWJtaXQ6IChNb2R1bGUsIHZhbHVlcykgPT4ge1xcclxcblxcclxcbiAgICAgICAgLy8gVGhlIHN1Ym1pdHRlZCB2YWx1ZXMgb2YgdGhlIHVzZXIuXFxyXFxuICAgICAgICByZXR1cm4gdmFsdWVzO1xcclxcbiAgICB9LFxcclxcbn07XFxyXFxuXFxyXFxuKCgpID0+IHtcXHJcXG4gICAgcmV0dXJuIFNldHRpbmdzO1xcclxcbn0pKCk7Jyk7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Installer.js\n");

/***/ }),

/***/ "../common/lib/Library.js":
/*!********************************!*\
  !*** ../common/lib/Library.js ***!
  \********************************/
/*! exports provided: Region, Route, RouteManager, Manager, Components, Console, Form, Helper, Info, Module, ModuleManager */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Components */ \"../common/lib/Components.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Components\", function() { return _Components__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Console */ \"../common/lib/Console.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Console\", function() { return _Console__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Form */ \"../common/lib/Form.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Form\", function() { return _Form__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _Helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Helper */ \"../common/lib/Helper.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Helper\", function() { return _Helper__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _Info__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Info */ \"../common/lib/Info.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Info\", function() { return _Info__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _Module_Module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Module/Module */ \"../common/lib/Module/Module.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Module\", function() { return _Module_Module__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _Module_Manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Module/Manager */ \"../common/lib/Module/Manager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ModuleManager\", function() { return _Module_Manager__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _Manager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Manager */ \"../common/lib/Manager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Manager\", function() { return _Manager__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _Render_Route_Manager__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Render/Route/Manager */ \"../common/lib/Render/Route/Manager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"RouteManager\", function() { return _Render_Route_Manager__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _Render_Route_Route__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Render/Route/Route */ \"../common/lib/Render/Route/Route.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Route\", function() { return _Render_Route_Route__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _Render_Region_Region__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Render/Region/Region */ \"../common/lib/Render/Region/Region.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Region\", function() { return _Render_Region_Region__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9MaWJyYXJ5LmpzPzdiOGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvTGlicmFyeS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21wb25lbnRzIGZyb20gXCIuL0NvbXBvbmVudHNcIjtcclxuaW1wb3J0IENvbnNvbGUgZnJvbSBcIi4vQ29uc29sZVwiO1xyXG5pbXBvcnQgRm9ybSBmcm9tIFwiLi9Gb3JtXCI7XHJcbmltcG9ydCBIZWxwZXIgZnJvbSBcIi4vSGVscGVyXCI7XHJcbmltcG9ydCBJbmZvIGZyb20gXCIuL0luZm9cIjtcclxuaW1wb3J0IE1vZHVsZSBmcm9tIFwiLi9Nb2R1bGUvTW9kdWxlXCI7XHJcbmltcG9ydCBNb2R1bGVNYW5hZ2VyIGZyb20gXCIuL01vZHVsZS9NYW5hZ2VyXCI7XHJcbmltcG9ydCBNYW5hZ2VyIGZyb20gXCIuL01hbmFnZXJcIjtcclxuaW1wb3J0IFJvdXRlTWFuYWdlciBmcm9tIFwiLi9SZW5kZXIvUm91dGUvTWFuYWdlclwiO1xyXG5pbXBvcnQgUm91dGUgZnJvbSBcIi4vUmVuZGVyL1JvdXRlL1JvdXRlXCI7XHJcbmltcG9ydCBSZWdpb24gZnJvbSBcIi4vUmVuZGVyL1JlZ2lvbi9SZWdpb25cIjtcclxuZXhwb3J0IHsgUmVnaW9uLCBSb3V0ZSwgUm91dGVNYW5hZ2VyLCBNYW5hZ2VyLCBDb21wb25lbnRzLCBDb25zb2xlLCBGb3JtLCBIZWxwZXIsIEluZm8sIE1vZHVsZSwgTW9kdWxlTWFuYWdlciwgfTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Library.js\n");

/***/ }),

/***/ "../common/lib/Manager.js":
/*!********************************!*\
  !*** ../common/lib/Manager.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Manager; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Console */ \"../common/lib/Console.js\");\n/* harmony import */ var _Module_Manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Module/Manager */ \"../common/lib/Module/Manager.js\");\n/* harmony import */ var _Render_Route_Manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Render/Route/Manager */ \"../common/lib/Render/Route/Manager.js\");\n/* harmony import */ var _Render_Component_Manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Render/Component/Manager */ \"../common/lib/Render/Component/Manager.js\");\n\n\n\n\nclass Manager extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(fileSystem) {\n        super(fileSystem);\n        this.fileSystem = fileSystem;\n        this.moduleManager = new _Module_Manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"](fileSystem, '/modules/', this);\n        // Contains all routes.\n        this.routeManager = new _Render_Route_Manager__WEBPACK_IMPORTED_MODULE_2__[\"default\"](fileSystem);\n        this.componentManager = new _Render_Component_Manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"](fileSystem);\n    }\n    /**\r\n     * Collect all data from the modules and sum them together.\r\n     */\n    summary() {\n        for (let i = 0; i < this.moduleManager.modules.length; i++) {\n            const module = this.moduleManager.modules[i];\n            // Merge routes.\n            this.routeManager.routes = [...this.routeManager.routes, ...module.routeManager.routes];\n            this.componentManager.regions = [...this.componentManager.regions, ...module.componentManager.regions];\n            this.componentManager.containers = [...this.componentManager.containers, ...module.componentManager.containers];\n            this.componentManager.elements = [...this.componentManager.elements, ...module.componentManager.elements];\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9NYW5hZ2VyLmpzP2JhNDAiXSwibmFtZXMiOlsiTWFuYWdlciIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsImZpbGVTeXN0ZW0iLCJtb2R1bGVNYW5hZ2VyIiwiTW9kdWxlTWFuYWdlciIsInJvdXRlTWFuYWdlciIsIlJvdXRlTWFuYWdlciIsImNvbXBvbmVudE1hbmFnZXIiLCJDb21wb25lbnRNYW5hZ2VyIiwic3VtbWFyeSIsImkiLCJtb2R1bGVzIiwibGVuZ3RoIiwibW9kdWxlIiwicm91dGVzIiwicmVnaW9ucyIsImNvbnRhaW5lcnMiLCJlbGVtZW50cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDZSxNQUFNQSxPQUFOLFNBQXNCQyxnREFBdEIsQ0FBOEI7QUFDekNDLGdCQUFZQyxVQUFaLEVBQXdCO0FBQ3BCLGNBQU1BLFVBQU47QUFDQSxhQUFLQSxVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLGFBQUtDLGFBQUwsR0FBcUIsSUFBSUMsdURBQUosQ0FBa0JGLFVBQWxCLEVBQThCLFdBQTlCLEVBQTJDLElBQTNDLENBQXJCO0FBQ0E7QUFDQSxhQUFLRyxZQUFMLEdBQW9CLElBQUlDLDZEQUFKLENBQWlCSixVQUFqQixDQUFwQjtBQUNBLGFBQUtLLGdCQUFMLEdBQXdCLElBQUlDLGlFQUFKLENBQXFCTixVQUFyQixDQUF4QjtBQUNIO0FBQ0Q7OztBQUdBTyxjQUFVO0FBQ04sYUFBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUksS0FBS1AsYUFBTCxDQUFtQlEsT0FBbkIsQ0FBMkJDLE1BQS9DLEVBQXVERixHQUF2RCxFQUE0RDtBQUN4RCxrQkFBTUcsU0FBUyxLQUFLVixhQUFMLENBQW1CUSxPQUFuQixDQUEyQkQsQ0FBM0IsQ0FBZjtBQUNBO0FBQ0EsaUJBQUtMLFlBQUwsQ0FBa0JTLE1BQWxCLEdBQTJCLENBQUMsR0FBRyxLQUFLVCxZQUFMLENBQWtCUyxNQUF0QixFQUE4QixHQUFHRCxPQUFPUixZQUFQLENBQW9CUyxNQUFyRCxDQUEzQjtBQUNBLGlCQUFLUCxnQkFBTCxDQUFzQlEsT0FBdEIsR0FBZ0MsQ0FBQyxHQUFHLEtBQUtSLGdCQUFMLENBQXNCUSxPQUExQixFQUFtQyxHQUFHRixPQUFPTixnQkFBUCxDQUF3QlEsT0FBOUQsQ0FBaEM7QUFDQSxpQkFBS1IsZ0JBQUwsQ0FBc0JTLFVBQXRCLEdBQW1DLENBQUMsR0FBRyxLQUFLVCxnQkFBTCxDQUFzQlMsVUFBMUIsRUFBc0MsR0FBR0gsT0FBT04sZ0JBQVAsQ0FBd0JTLFVBQWpFLENBQW5DO0FBQ0EsaUJBQUtULGdCQUFMLENBQXNCVSxRQUF0QixHQUFpQyxDQUFDLEdBQUcsS0FBS1YsZ0JBQUwsQ0FBc0JVLFFBQTFCLEVBQW9DLEdBQUdKLE9BQU9OLGdCQUFQLENBQXdCVSxRQUEvRCxDQUFqQztBQUNIO0FBQ0o7QUFyQndDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvTWFuYWdlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb25zb2xlIGZyb20gXCIuL0NvbnNvbGVcIjtcclxuaW1wb3J0IE1vZHVsZU1hbmFnZXIgZnJvbSBcIi4vTW9kdWxlL01hbmFnZXJcIjtcclxuaW1wb3J0IFJvdXRlTWFuYWdlciBmcm9tIFwiLi9SZW5kZXIvUm91dGUvTWFuYWdlclwiO1xyXG5pbXBvcnQgQ29tcG9uZW50TWFuYWdlciBmcm9tIFwiLi9SZW5kZXIvQ29tcG9uZW50L01hbmFnZXJcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFuYWdlciBleHRlbmRzIENvbnNvbGUge1xyXG4gICAgY29uc3RydWN0b3IoZmlsZVN5c3RlbSkge1xyXG4gICAgICAgIHN1cGVyKGZpbGVTeXN0ZW0pO1xyXG4gICAgICAgIHRoaXMuZmlsZVN5c3RlbSA9IGZpbGVTeXN0ZW07XHJcbiAgICAgICAgdGhpcy5tb2R1bGVNYW5hZ2VyID0gbmV3IE1vZHVsZU1hbmFnZXIoZmlsZVN5c3RlbSwgJy9tb2R1bGVzLycsIHRoaXMpO1xyXG4gICAgICAgIC8vIENvbnRhaW5zIGFsbCByb3V0ZXMuXHJcbiAgICAgICAgdGhpcy5yb3V0ZU1hbmFnZXIgPSBuZXcgUm91dGVNYW5hZ2VyKGZpbGVTeXN0ZW0pO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50TWFuYWdlciA9IG5ldyBDb21wb25lbnRNYW5hZ2VyKGZpbGVTeXN0ZW0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDb2xsZWN0IGFsbCBkYXRhIGZyb20gdGhlIG1vZHVsZXMgYW5kIHN1bSB0aGVtIHRvZ2V0aGVyLlxyXG4gICAgICovXHJcbiAgICBzdW1tYXJ5KCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5tb2R1bGVNYW5hZ2VyLm1vZHVsZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgbW9kdWxlID0gdGhpcy5tb2R1bGVNYW5hZ2VyLm1vZHVsZXNbaV07XHJcbiAgICAgICAgICAgIC8vIE1lcmdlIHJvdXRlcy5cclxuICAgICAgICAgICAgdGhpcy5yb3V0ZU1hbmFnZXIucm91dGVzID0gWy4uLnRoaXMucm91dGVNYW5hZ2VyLnJvdXRlcywgLi4ubW9kdWxlLnJvdXRlTWFuYWdlci5yb3V0ZXNdO1xyXG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudE1hbmFnZXIucmVnaW9ucyA9IFsuLi50aGlzLmNvbXBvbmVudE1hbmFnZXIucmVnaW9ucywgLi4ubW9kdWxlLmNvbXBvbmVudE1hbmFnZXIucmVnaW9uc107XHJcbiAgICAgICAgICAgIHRoaXMuY29tcG9uZW50TWFuYWdlci5jb250YWluZXJzID0gWy4uLnRoaXMuY29tcG9uZW50TWFuYWdlci5jb250YWluZXJzLCAuLi5tb2R1bGUuY29tcG9uZW50TWFuYWdlci5jb250YWluZXJzXTtcclxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRNYW5hZ2VyLmVsZW1lbnRzID0gWy4uLnRoaXMuY29tcG9uZW50TWFuYWdlci5lbGVtZW50cywgLi4ubW9kdWxlLmNvbXBvbmVudE1hbmFnZXIuZWxlbWVudHNdO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../common/lib/Manager.js\n");

/***/ }),

/***/ "../common/lib/Module/Manager.js":
/*!***************************************!*\
  !*** ../common/lib/Module/Manager.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ModuleManager; });\n/* harmony import */ var _Module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Module */ \"../common/lib/Module/Module.js\");\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Console */ \"../common/lib/Console.js\");\n/* harmony import */ var _Installer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Installer */ \"../common/lib/Installer.js\");\n\n\n\nclass ModuleManager extends _Console__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(fileSystem, root, manager) {\n        super(fileSystem);\n        this.modules = [];\n        this.path = '';\n        this.manager = manager;\n        this.fileSystem = fileSystem;\n        this.path = root;\n        this.discover().then();\n    }\n    async discover() {\n        await new _Installer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.fileSystem).install();\n        // List all directories in the module directory.\n        const directories = await this.fileSystem.list(this.path, 'd');\n        for (let i = 0; i < directories.length; i++) {\n            const directory = directories[i];\n            this.log('Directory found!', directory);\n            let id = directory;\n            id = id.split('/');\n            id = id[id.length - 2];\n            const module = new _Module__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, directory, id);\n            await module.initialize();\n            this.manager.summary();\n        }\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9Nb2R1bGUvTWFuYWdlci5qcz81NzkwIl0sIm5hbWVzIjpbIk1vZHVsZU1hbmFnZXIiLCJDb25zb2xlIiwiY29uc3RydWN0b3IiLCJmaWxlU3lzdGVtIiwicm9vdCIsIm1hbmFnZXIiLCJtb2R1bGVzIiwicGF0aCIsImRpc2NvdmVyIiwidGhlbiIsIkluc3RhbGxlciIsImluc3RhbGwiLCJkaXJlY3RvcmllcyIsImxpc3QiLCJpIiwibGVuZ3RoIiwiZGlyZWN0b3J5IiwibG9nIiwiaWQiLCJzcGxpdCIsIm1vZHVsZSIsIk1vZHVsZSIsImluaXRpYWxpemUiLCJzdW1tYXJ5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ2UsTUFBTUEsYUFBTixTQUE0QkMsZ0RBQTVCLENBQW9DO0FBQy9DQyxnQkFBWUMsVUFBWixFQUF3QkMsSUFBeEIsRUFBOEJDLE9BQTlCLEVBQXVDO0FBQ25DLGNBQU1GLFVBQU47QUFDQSxhQUFLRyxPQUFMLEdBQWUsRUFBZjtBQUNBLGFBQUtDLElBQUwsR0FBWSxFQUFaO0FBQ0EsYUFBS0YsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsYUFBS0YsVUFBTCxHQUFrQkEsVUFBbEI7QUFDQSxhQUFLSSxJQUFMLEdBQVlILElBQVo7QUFDQSxhQUFLSSxRQUFMLEdBQWdCQyxJQUFoQjtBQUNIO0FBQ0QsVUFBTUQsUUFBTixHQUFpQjtBQUNiLGNBQU0sSUFBSUUsa0RBQUosQ0FBYyxLQUFLUCxVQUFuQixFQUErQlEsT0FBL0IsRUFBTjtBQUNBO0FBQ0EsY0FBTUMsY0FBYyxNQUFNLEtBQUtULFVBQUwsQ0FBZ0JVLElBQWhCLENBQXFCLEtBQUtOLElBQTFCLEVBQWdDLEdBQWhDLENBQTFCO0FBQ0EsYUFBSyxJQUFJTyxJQUFJLENBQWIsRUFBZ0JBLElBQUlGLFlBQVlHLE1BQWhDLEVBQXdDRCxHQUF4QyxFQUE2QztBQUN6QyxrQkFBTUUsWUFBWUosWUFBWUUsQ0FBWixDQUFsQjtBQUNBLGlCQUFLRyxHQUFMLENBQVMsa0JBQVQsRUFBNkJELFNBQTdCO0FBQ0EsZ0JBQUlFLEtBQUtGLFNBQVQ7QUFDQUUsaUJBQUtBLEdBQUdDLEtBQUgsQ0FBUyxHQUFULENBQUw7QUFDQUQsaUJBQUtBLEdBQUdBLEdBQUdILE1BQUgsR0FBWSxDQUFmLENBQUw7QUFDQSxrQkFBTUssU0FBUyxJQUFJQywrQ0FBSixDQUFXLElBQVgsRUFBaUJMLFNBQWpCLEVBQTRCRSxFQUE1QixDQUFmO0FBQ0Esa0JBQU1FLE9BQU9FLFVBQVAsRUFBTjtBQUNBLGlCQUFLakIsT0FBTCxDQUFha0IsT0FBYjtBQUNIO0FBQ0o7QUF4QjhDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvTW9kdWxlL01hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTW9kdWxlIGZyb20gXCIuL01vZHVsZVwiO1xyXG5pbXBvcnQgQ29uc29sZSBmcm9tIFwiLi4vQ29uc29sZVwiO1xyXG5pbXBvcnQgSW5zdGFsbGVyIGZyb20gXCIuLi9JbnN0YWxsZXJcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW9kdWxlTWFuYWdlciBleHRlbmRzIENvbnNvbGUge1xyXG4gICAgY29uc3RydWN0b3IoZmlsZVN5c3RlbSwgcm9vdCwgbWFuYWdlcikge1xyXG4gICAgICAgIHN1cGVyKGZpbGVTeXN0ZW0pO1xyXG4gICAgICAgIHRoaXMubW9kdWxlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMucGF0aCA9ICcnO1xyXG4gICAgICAgIHRoaXMubWFuYWdlciA9IG1hbmFnZXI7XHJcbiAgICAgICAgdGhpcy5maWxlU3lzdGVtID0gZmlsZVN5c3RlbTtcclxuICAgICAgICB0aGlzLnBhdGggPSByb290O1xyXG4gICAgICAgIHRoaXMuZGlzY292ZXIoKS50aGVuKCk7XHJcbiAgICB9XHJcbiAgICBhc3luYyBkaXNjb3ZlcigpIHtcclxuICAgICAgICBhd2FpdCBuZXcgSW5zdGFsbGVyKHRoaXMuZmlsZVN5c3RlbSkuaW5zdGFsbCgpO1xyXG4gICAgICAgIC8vIExpc3QgYWxsIGRpcmVjdG9yaWVzIGluIHRoZSBtb2R1bGUgZGlyZWN0b3J5LlxyXG4gICAgICAgIGNvbnN0IGRpcmVjdG9yaWVzID0gYXdhaXQgdGhpcy5maWxlU3lzdGVtLmxpc3QodGhpcy5wYXRoLCAnZCcpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGlyZWN0b3JpZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgZGlyZWN0b3J5ID0gZGlyZWN0b3JpZXNbaV07XHJcbiAgICAgICAgICAgIHRoaXMubG9nKCdEaXJlY3RvcnkgZm91bmQhJywgZGlyZWN0b3J5KTtcclxuICAgICAgICAgICAgbGV0IGlkID0gZGlyZWN0b3J5O1xyXG4gICAgICAgICAgICBpZCA9IGlkLnNwbGl0KCcvJyk7XHJcbiAgICAgICAgICAgIGlkID0gaWRbaWQubGVuZ3RoIC0gMl07XHJcbiAgICAgICAgICAgIGNvbnN0IG1vZHVsZSA9IG5ldyBNb2R1bGUodGhpcywgZGlyZWN0b3J5LCBpZCk7XHJcbiAgICAgICAgICAgIGF3YWl0IG1vZHVsZS5pbml0aWFsaXplKCk7XHJcbiAgICAgICAgICAgIHRoaXMubWFuYWdlci5zdW1tYXJ5KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../common/lib/Module/Manager.js\n");

/***/ }),

/***/ "../common/lib/Module/Module.js":
/*!**************************************!*\
  !*** ../common/lib/Module/Module.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Module; });\n/* harmony import */ var _Components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Components */ \"../common/lib/Components.js\");\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Console */ \"../common/lib/Console.js\");\n/* harmony import */ var _Info__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Info */ \"../common/lib/Info.js\");\n/* harmony import */ var _Render_Route_Manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Render/Route/Manager */ \"../common/lib/Render/Route/Manager.js\");\n/* harmony import */ var _Render_Route_Route__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Render/Route/Route */ \"../common/lib/Render/Route/Route.js\");\n/* harmony import */ var _Render_Component_Manager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Render/Component/Manager */ \"../common/lib/Render/Component/Manager.js\");\n/* harmony import */ var _Render_Component_Component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Render/Component/Component */ \"../common/lib/Render/Component/Component.js\");\n\n\n\n\n\n\n\nclass Module extends _Console__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\r\n     *\r\n     * @param moduleManager\r\n     * @param path\r\n     * @param id\r\n     */\n    constructor(moduleManager, path, id) {\n        super(moduleManager.fileSystem);\n        this.routeManager = new _Render_Route_Manager__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.fileSystem);\n        this.componentManager = new _Render_Component_Manager__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this.fileSystem);\n        /**\r\n         *\r\n         */\n        this.components = new _Components__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this, {});\n        /**\r\n         *\r\n         */\n        this.info = new _Info__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, {});\n        this.moduleManager = moduleManager;\n        this.moduleManager.modules.push(this);\n        this.id = id;\n        this.path = path;\n    }\n    /**\r\n     *\r\n     */\n    async initialize() {\n        this.log(`Reading > ${this.path}${this.id}.info.json`);\n        const info = await this.fileSystem.readJSON(`${this.path}${this.id}.info.json`);\n        if (info !== undefined) {\n            this.info = new _Info__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, info);\n        }\n        this.log(`Reading > ${this.path}${this.id}.routing.json`);\n        const routes = await this.fileSystem.readJSON(`${this.path}${this.id}.routing.json`);\n        if (routes !== undefined) {\n            const ids = Object.keys(routes);\n            for (let i = 0; i < ids.length; i++) {\n                const id = ids[i];\n                const route = routes[id];\n                new _Render_Route_Route__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this, id, route);\n            }\n        }\n        // Get all registered components.\n        const components = await this.fileSystem.readJSON(`${this.path}${this.id}.components.json`);\n        // Sanity check.\n        if (components !== undefined) {\n            const types = ['elements', 'containers', 'regions'];\n            console.groupCollapsed(\"Component Loading\");\n            for (let i = 0; i < types.length; i++) {\n                let type = this.fallback(components, types[i], {});\n                const ids = Object.keys(type);\n                console.debug('Loading component ->', type);\n                for (let j = 0; j < ids.length; j++) {\n                    const id = ids[j];\n                    let component = type[id];\n                    type[id]['type'] = types[i];\n                    component = new _Render_Component_Component__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this, id, component);\n                    // Start loading.\n                    try {\n                        await component.load();\n                        console.log(component.title, \"Component loaded.\");\n                    } catch (e) {\n                        console.error(component.path, 'Could not be loaded as it does not exist.');\n                    }\n                }\n            }\n            console.groupEnd();\n        }\n    }\n    appendStyle(path, id) {\n        // If the source was already appended just ignore the rest.\n        if (document.querySelector(`style[data-source-id=\"${id}\"]`)) return;\n        this.fileSystem.read(`${this.path}${path}`).then(value => {\n            const style = document.createElement('style');\n            style.textContent = value;\n            style.setAttribute('data-source-id', id);\n            document.head.append(style);\n        }).catch(() => {});\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../common/lib/Module/Module.js\n");

/***/ }),

/***/ "../common/lib/Render/Component/Component.js":
/*!***************************************************!*\
  !*** ../common/lib/Render/Component/Component.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Component; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Console */ \"../common/lib/Console.js\");\n\nclass Component extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(module, id, component) {\n        super(module.fileSystem);\n        this.id = '';\n        this.title = '';\n        this.description = '';\n        this.path = '';\n        this.type = '';\n        this.raw = () => {};\n        this.component = {};\n        /**\r\n         * A function to load the component.\r\n         */\n        this.load = async () => {\n            const component = await this.fileSystem.read(this.module.path + this.path);\n            // Execute order 66.\n            this.raw = eval(component);\n            this.component = this.raw(this.module);\n            switch (this.type) {\n                case 'regions':\n                    this.module.componentManager.regions.push(this);\n                    break;\n                case 'containers':\n                    this.module.componentManager.containers.push(this);\n                    break;\n                case 'elements':\n                    this.module.componentManager.elements.push(this);\n                    break;\n            }\n        };\n        // Set access;\n        this.module = module;\n        // Set default value.\n        this.id = id;\n        this.title = this.fallback(component, 'title', 'No title set');\n        this.description = this.fallback(component, 'description', 'No description set');\n        this.path = this.fallback(component, 'path', 'No path set');\n        this.type = this.fallback(component, 'type', 'elements');\n    }\n    getComponent() {\n        this.component = this.raw(this.module);\n        return this.component;\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9SZW5kZXIvQ29tcG9uZW50L0NvbXBvbmVudC5qcz83NjUwIl0sIm5hbWVzIjpbIkNvbXBvbmVudCIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsIm1vZHVsZSIsImlkIiwiY29tcG9uZW50IiwiZmlsZVN5c3RlbSIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJwYXRoIiwidHlwZSIsInJhdyIsImxvYWQiLCJyZWFkIiwiZXZhbCIsImNvbXBvbmVudE1hbmFnZXIiLCJyZWdpb25zIiwicHVzaCIsImNvbnRhaW5lcnMiLCJlbGVtZW50cyIsImZhbGxiYWNrIiwiZ2V0Q29tcG9uZW50Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNlLE1BQU1BLFNBQU4sU0FBd0JDLGdEQUF4QixDQUFnQztBQUMzQ0MsZ0JBQVlDLE1BQVosRUFBb0JDLEVBQXBCLEVBQXdCQyxTQUF4QixFQUFtQztBQUMvQixjQUFNRixPQUFPRyxVQUFiO0FBQ0EsYUFBS0YsRUFBTCxHQUFVLEVBQVY7QUFDQSxhQUFLRyxLQUFMLEdBQWEsRUFBYjtBQUNBLGFBQUtDLFdBQUwsR0FBbUIsRUFBbkI7QUFDQSxhQUFLQyxJQUFMLEdBQVksRUFBWjtBQUNBLGFBQUtDLElBQUwsR0FBWSxFQUFaO0FBQ0EsYUFBS0MsR0FBTCxHQUFXLE1BQU0sQ0FBRyxDQUFwQjtBQUNBLGFBQUtOLFNBQUwsR0FBaUIsRUFBakI7QUFDQTs7O0FBR0EsYUFBS08sSUFBTCxHQUFZLFlBQVk7QUFDcEIsa0JBQU1QLFlBQVksTUFBTSxLQUFLQyxVQUFMLENBQWdCTyxJQUFoQixDQUFxQixLQUFLVixNQUFMLENBQVlNLElBQVosR0FBbUIsS0FBS0EsSUFBN0MsQ0FBeEI7QUFDQTtBQUNBLGlCQUFLRSxHQUFMLEdBQVdHLEtBQUtULFNBQUwsQ0FBWDtBQUNBLGlCQUFLQSxTQUFMLEdBQWlCLEtBQUtNLEdBQUwsQ0FBUyxLQUFLUixNQUFkLENBQWpCO0FBQ0Esb0JBQVEsS0FBS08sSUFBYjtBQUNJLHFCQUFLLFNBQUw7QUFDSSx5QkFBS1AsTUFBTCxDQUFZWSxnQkFBWixDQUE2QkMsT0FBN0IsQ0FBcUNDLElBQXJDLENBQTBDLElBQTFDO0FBQ0E7QUFDSixxQkFBSyxZQUFMO0FBQ0kseUJBQUtkLE1BQUwsQ0FBWVksZ0JBQVosQ0FBNkJHLFVBQTdCLENBQXdDRCxJQUF4QyxDQUE2QyxJQUE3QztBQUNBO0FBQ0oscUJBQUssVUFBTDtBQUNJLHlCQUFLZCxNQUFMLENBQVlZLGdCQUFaLENBQTZCSSxRQUE3QixDQUFzQ0YsSUFBdEMsQ0FBMkMsSUFBM0M7QUFDQTtBQVRSO0FBV0gsU0FoQkQ7QUFpQkE7QUFDQSxhQUFLZCxNQUFMLEdBQWNBLE1BQWQ7QUFDQTtBQUNBLGFBQUtDLEVBQUwsR0FBVUEsRUFBVjtBQUNBLGFBQUtHLEtBQUwsR0FBYSxLQUFLYSxRQUFMLENBQWNmLFNBQWQsRUFBeUIsT0FBekIsRUFBa0MsY0FBbEMsQ0FBYjtBQUNBLGFBQUtHLFdBQUwsR0FBbUIsS0FBS1ksUUFBTCxDQUFjZixTQUFkLEVBQXlCLGFBQXpCLEVBQXdDLG9CQUF4QyxDQUFuQjtBQUNBLGFBQUtJLElBQUwsR0FBWSxLQUFLVyxRQUFMLENBQWNmLFNBQWQsRUFBeUIsTUFBekIsRUFBaUMsYUFBakMsQ0FBWjtBQUNBLGFBQUtLLElBQUwsR0FBWSxLQUFLVSxRQUFMLENBQWNmLFNBQWQsRUFBeUIsTUFBekIsRUFBaUMsVUFBakMsQ0FBWjtBQUNIO0FBQ0RnQixtQkFBZTtBQUNYLGFBQUtoQixTQUFMLEdBQWlCLEtBQUtNLEdBQUwsQ0FBUyxLQUFLUixNQUFkLENBQWpCO0FBQ0EsZUFBTyxLQUFLRSxTQUFaO0FBQ0g7QUExQzBDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvUmVuZGVyL0NvbXBvbmVudC9Db21wb25lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi4vLi4vQ29uc29sZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21wb25lbnQgZXh0ZW5kcyBDb25zb2xlIHtcclxuICAgIGNvbnN0cnVjdG9yKG1vZHVsZSwgaWQsIGNvbXBvbmVudCkge1xyXG4gICAgICAgIHN1cGVyKG1vZHVsZS5maWxlU3lzdGVtKTtcclxuICAgICAgICB0aGlzLmlkID0gJyc7XHJcbiAgICAgICAgdGhpcy50aXRsZSA9ICcnO1xyXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSAnJztcclxuICAgICAgICB0aGlzLnBhdGggPSAnJztcclxuICAgICAgICB0aGlzLnR5cGUgPSAnJztcclxuICAgICAgICB0aGlzLnJhdyA9ICgpID0+IHsgfTtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IHt9O1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEEgZnVuY3Rpb24gdG8gbG9hZCB0aGUgY29tcG9uZW50LlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMubG9hZCA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgY29tcG9uZW50ID0gYXdhaXQgdGhpcy5maWxlU3lzdGVtLnJlYWQodGhpcy5tb2R1bGUucGF0aCArIHRoaXMucGF0aCk7XHJcbiAgICAgICAgICAgIC8vIEV4ZWN1dGUgb3JkZXIgNjYuXHJcbiAgICAgICAgICAgIHRoaXMucmF3ID0gZXZhbChjb21wb25lbnQpO1xyXG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudCA9IHRoaXMucmF3KHRoaXMubW9kdWxlKTtcclxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgJ3JlZ2lvbnMnOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9kdWxlLmNvbXBvbmVudE1hbmFnZXIucmVnaW9ucy5wdXNoKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSAnY29udGFpbmVycyc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2R1bGUuY29tcG9uZW50TWFuYWdlci5jb250YWluZXJzLnB1c2godGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlICdlbGVtZW50cyc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tb2R1bGUuY29tcG9uZW50TWFuYWdlci5lbGVtZW50cy5wdXNoKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICAvLyBTZXQgYWNjZXNzO1xyXG4gICAgICAgIHRoaXMubW9kdWxlID0gbW9kdWxlO1xyXG4gICAgICAgIC8vIFNldCBkZWZhdWx0IHZhbHVlLlxyXG4gICAgICAgIHRoaXMuaWQgPSBpZDtcclxuICAgICAgICB0aGlzLnRpdGxlID0gdGhpcy5mYWxsYmFjayhjb21wb25lbnQsICd0aXRsZScsICdObyB0aXRsZSBzZXQnKTtcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gdGhpcy5mYWxsYmFjayhjb21wb25lbnQsICdkZXNjcmlwdGlvbicsICdObyBkZXNjcmlwdGlvbiBzZXQnKTtcclxuICAgICAgICB0aGlzLnBhdGggPSB0aGlzLmZhbGxiYWNrKGNvbXBvbmVudCwgJ3BhdGgnLCAnTm8gcGF0aCBzZXQnKTtcclxuICAgICAgICB0aGlzLnR5cGUgPSB0aGlzLmZhbGxiYWNrKGNvbXBvbmVudCwgJ3R5cGUnLCAnZWxlbWVudHMnKTtcclxuICAgIH1cclxuICAgIGdldENvbXBvbmVudCgpIHtcclxuICAgICAgICB0aGlzLmNvbXBvbmVudCA9IHRoaXMucmF3KHRoaXMubW9kdWxlKTtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb21wb25lbnQ7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Render/Component/Component.js\n");

/***/ }),

/***/ "../common/lib/Render/Component/Manager.js":
/*!*************************************************!*\
  !*** ../common/lib/Render/Component/Manager.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ComponentManager; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Console */ \"../common/lib/Console.js\");\n\nclass ComponentManager extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(fileSystem) {\n        super(fileSystem);\n        this.regions = [];\n        this.containers = [];\n        this.elements = [];\n    }\n    getAll() {\n        return [...this.regions, ...this.containers, ...this.elements];\n    }\n    /**\r\n     * A function to fetch a component by id.\r\n     *\r\n     * @param id {String}\r\n     *   Expects an id to search for.\r\n     * @param components {Component}\r\n     *   Optional: A collection of components to search in, instead of the array provided by \"getAll\".\r\n     *\r\n     * @return\r\n     *   Returns an Component or undefined when not found.\r\n     */\n    getComponentById(id, components = this.getAll()) {\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.id === id) {\n                return component;\n            }\n        }\n        return undefined;\n    }\n    /**\r\n     * A function to fetch a collection of components by type.\r\n     *\r\n     * @param type {String}\r\n     *   Expects a type to search for.\r\n     * @param components {Component}\r\n     *   Optional: A collection of components to search in, instead of the array provided by \"getAll\".\r\n     *\r\n     * @return\r\n     *   Returns a collection of Components.\r\n     */\n    getComponentsByType(type = 'all', components = this.getAll()) {\n        return components.filter(component => component.type === type || type === 'all');\n    }\n    getVueComponentByType(type = 'all', components = this.getAll()) {\n        let results = components.filter(component => component.type === type || type === 'all');\n        results = results.map(component => component.getComponent());\n        return results;\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9SZW5kZXIvQ29tcG9uZW50L01hbmFnZXIuanM/ZDQxYiJdLCJuYW1lcyI6WyJDb21wb25lbnRNYW5hZ2VyIiwiQ29uc29sZSIsImNvbnN0cnVjdG9yIiwiZmlsZVN5c3RlbSIsInJlZ2lvbnMiLCJjb250YWluZXJzIiwiZWxlbWVudHMiLCJnZXRBbGwiLCJnZXRDb21wb25lbnRCeUlkIiwiaWQiLCJjb21wb25lbnRzIiwiaSIsImxlbmd0aCIsImNvbXBvbmVudCIsInVuZGVmaW5lZCIsImdldENvbXBvbmVudHNCeVR5cGUiLCJ0eXBlIiwiZmlsdGVyIiwiZ2V0VnVlQ29tcG9uZW50QnlUeXBlIiwicmVzdWx0cyIsIm1hcCIsImdldENvbXBvbmVudCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDZSxNQUFNQSxnQkFBTixTQUErQkMsZ0RBQS9CLENBQXVDO0FBQ2xEQyxnQkFBWUMsVUFBWixFQUF3QjtBQUNwQixjQUFNQSxVQUFOO0FBQ0EsYUFBS0MsT0FBTCxHQUFlLEVBQWY7QUFDQSxhQUFLQyxVQUFMLEdBQWtCLEVBQWxCO0FBQ0EsYUFBS0MsUUFBTCxHQUFnQixFQUFoQjtBQUNIO0FBQ0RDLGFBQVM7QUFDTCxlQUFPLENBQUMsR0FBRyxLQUFLSCxPQUFULEVBQWtCLEdBQUcsS0FBS0MsVUFBMUIsRUFBc0MsR0FBRyxLQUFLQyxRQUE5QyxDQUFQO0FBQ0g7QUFDRDs7Ozs7Ozs7Ozs7QUFXQUUscUJBQWlCQyxFQUFqQixFQUFxQkMsYUFBYSxLQUFLSCxNQUFMLEVBQWxDLEVBQWlEO0FBQzdDLGFBQUssSUFBSUksSUFBSSxDQUFiLEVBQWdCQSxJQUFJRCxXQUFXRSxNQUEvQixFQUF1Q0QsR0FBdkMsRUFBNEM7QUFDeEMsa0JBQU1FLFlBQVlILFdBQVdDLENBQVgsQ0FBbEI7QUFDQSxnQkFBSUUsVUFBVUosRUFBVixLQUFpQkEsRUFBckIsRUFBeUI7QUFDckIsdUJBQU9JLFNBQVA7QUFDSDtBQUNKO0FBQ0QsZUFBT0MsU0FBUDtBQUNIO0FBQ0Q7Ozs7Ozs7Ozs7O0FBV0FDLHdCQUFvQkMsT0FBTyxLQUEzQixFQUFrQ04sYUFBYSxLQUFLSCxNQUFMLEVBQS9DLEVBQThEO0FBQzFELGVBQU9HLFdBQVdPLE1BQVgsQ0FBa0JKLGFBQWNBLFVBQVVHLElBQVYsS0FBbUJBLElBQW5CLElBQTJCQSxTQUFTLEtBQXBFLENBQVA7QUFDSDtBQUNERSwwQkFBc0JGLE9BQU8sS0FBN0IsRUFBb0NOLGFBQWEsS0FBS0gsTUFBTCxFQUFqRCxFQUFnRTtBQUM1RCxZQUFJWSxVQUFVVCxXQUFXTyxNQUFYLENBQWtCSixhQUFjQSxVQUFVRyxJQUFWLEtBQW1CQSxJQUFuQixJQUEyQkEsU0FBUyxLQUFwRSxDQUFkO0FBQ0FHLGtCQUFVQSxRQUFRQyxHQUFSLENBQVlQLGFBQWFBLFVBQVVRLFlBQVYsRUFBekIsQ0FBVjtBQUNBLGVBQU9GLE9BQVA7QUFDSDtBQWhEaUQiLCJmaWxlIjoiLi4vY29tbW9uL2xpYi9SZW5kZXIvQ29tcG9uZW50L01hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi4vLi4vQ29uc29sZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb21wb25lbnRNYW5hZ2VyIGV4dGVuZHMgQ29uc29sZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihmaWxlU3lzdGVtKSB7XHJcbiAgICAgICAgc3VwZXIoZmlsZVN5c3RlbSk7XHJcbiAgICAgICAgdGhpcy5yZWdpb25zID0gW107XHJcbiAgICAgICAgdGhpcy5jb250YWluZXJzID0gW107XHJcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IFtdO1xyXG4gICAgfVxyXG4gICAgZ2V0QWxsKCkge1xyXG4gICAgICAgIHJldHVybiBbLi4udGhpcy5yZWdpb25zLCAuLi50aGlzLmNvbnRhaW5lcnMsIC4uLnRoaXMuZWxlbWVudHNdO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBIGZ1bmN0aW9uIHRvIGZldGNoIGEgY29tcG9uZW50IGJ5IGlkLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBpZCB7U3RyaW5nfVxyXG4gICAgICogICBFeHBlY3RzIGFuIGlkIHRvIHNlYXJjaCBmb3IuXHJcbiAgICAgKiBAcGFyYW0gY29tcG9uZW50cyB7Q29tcG9uZW50fVxyXG4gICAgICogICBPcHRpb25hbDogQSBjb2xsZWN0aW9uIG9mIGNvbXBvbmVudHMgdG8gc2VhcmNoIGluLCBpbnN0ZWFkIG9mIHRoZSBhcnJheSBwcm92aWRlZCBieSBcImdldEFsbFwiLlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5cclxuICAgICAqICAgUmV0dXJucyBhbiBDb21wb25lbnQgb3IgdW5kZWZpbmVkIHdoZW4gbm90IGZvdW5kLlxyXG4gICAgICovXHJcbiAgICBnZXRDb21wb25lbnRCeUlkKGlkLCBjb21wb25lbnRzID0gdGhpcy5nZXRBbGwoKSkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBjb25zdCBjb21wb25lbnQgPSBjb21wb25lbnRzW2ldO1xyXG4gICAgICAgICAgICBpZiAoY29tcG9uZW50LmlkID09PSBpZCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbXBvbmVudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBIGZ1bmN0aW9uIHRvIGZldGNoIGEgY29sbGVjdGlvbiBvZiBjb21wb25lbnRzIGJ5IHR5cGUuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHR5cGUge1N0cmluZ31cclxuICAgICAqICAgRXhwZWN0cyBhIHR5cGUgdG8gc2VhcmNoIGZvci5cclxuICAgICAqIEBwYXJhbSBjb21wb25lbnRzIHtDb21wb25lbnR9XHJcbiAgICAgKiAgIE9wdGlvbmFsOiBBIGNvbGxlY3Rpb24gb2YgY29tcG9uZW50cyB0byBzZWFyY2ggaW4sIGluc3RlYWQgb2YgdGhlIGFycmF5IHByb3ZpZGVkIGJ5IFwiZ2V0QWxsXCIuXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVyblxyXG4gICAgICogICBSZXR1cm5zIGEgY29sbGVjdGlvbiBvZiBDb21wb25lbnRzLlxyXG4gICAgICovXHJcbiAgICBnZXRDb21wb25lbnRzQnlUeXBlKHR5cGUgPSAnYWxsJywgY29tcG9uZW50cyA9IHRoaXMuZ2V0QWxsKCkpIHtcclxuICAgICAgICByZXR1cm4gY29tcG9uZW50cy5maWx0ZXIoY29tcG9uZW50ID0+IChjb21wb25lbnQudHlwZSA9PT0gdHlwZSB8fCB0eXBlID09PSAnYWxsJykpO1xyXG4gICAgfVxyXG4gICAgZ2V0VnVlQ29tcG9uZW50QnlUeXBlKHR5cGUgPSAnYWxsJywgY29tcG9uZW50cyA9IHRoaXMuZ2V0QWxsKCkpIHtcclxuICAgICAgICBsZXQgcmVzdWx0cyA9IGNvbXBvbmVudHMuZmlsdGVyKGNvbXBvbmVudCA9PiAoY29tcG9uZW50LnR5cGUgPT09IHR5cGUgfHwgdHlwZSA9PT0gJ2FsbCcpKTtcclxuICAgICAgICByZXN1bHRzID0gcmVzdWx0cy5tYXAoY29tcG9uZW50ID0+IGNvbXBvbmVudC5nZXRDb21wb25lbnQoKSk7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Render/Component/Manager.js\n");

/***/ }),

/***/ "../common/lib/Render/Region/Manager.js":
/*!**********************************************!*\
  !*** ../common/lib/Render/Region/Manager.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RegionManager; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Console */ \"../common/lib/Console.js\");\n\nclass RegionManager extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(fileSystem) {\n        super(fileSystem);\n        this.regions = [];\n        this.fileSystem = fileSystem;\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9SZW5kZXIvUmVnaW9uL01hbmFnZXIuanM/ZjhiMCJdLCJuYW1lcyI6WyJSZWdpb25NYW5hZ2VyIiwiQ29uc29sZSIsImNvbnN0cnVjdG9yIiwiZmlsZVN5c3RlbSIsInJlZ2lvbnMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2UsTUFBTUEsYUFBTixTQUE0QkMsZ0RBQTVCLENBQW9DO0FBQy9DQyxnQkFBWUMsVUFBWixFQUF3QjtBQUNwQixjQUFNQSxVQUFOO0FBQ0EsYUFBS0MsT0FBTCxHQUFlLEVBQWY7QUFDQSxhQUFLRCxVQUFMLEdBQWtCQSxVQUFsQjtBQUNIO0FBTDhDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvUmVuZGVyL1JlZ2lvbi9NYW5hZ2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnNvbGUgZnJvbSBcIi4uLy4uL0NvbnNvbGVcIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVnaW9uTWFuYWdlciBleHRlbmRzIENvbnNvbGUge1xyXG4gICAgY29uc3RydWN0b3IoZmlsZVN5c3RlbSkge1xyXG4gICAgICAgIHN1cGVyKGZpbGVTeXN0ZW0pO1xyXG4gICAgICAgIHRoaXMucmVnaW9ucyA9IFtdO1xyXG4gICAgICAgIHRoaXMuZmlsZVN5c3RlbSA9IGZpbGVTeXN0ZW07XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../common/lib/Render/Region/Manager.js\n");

/***/ }),

/***/ "../common/lib/Render/Region/Region.js":
/*!*********************************************!*\
  !*** ../common/lib/Render/Region/Region.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Region; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Console */ \"../common/lib/Console.js\");\n\nclass Region extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(route, data) {\n        super(route.fileSystem);\n        this.type = \"\";\n        this.title = \"\";\n        this.description = \"\";\n        this.path = \"\";\n        this.regionRaw = {};\n        this.renderArray = [];\n        this.regionManager = route.regionManager;\n        this.module = route.module;\n        this.fileSystem = route.module.fileSystem;\n        this.regionManager = route.regionManager;\n        // Map values.\n        this.type = this.fallback(data, 'type', 'content');\n        this.title = this.fallback(data, 'title', 'No title.');\n        this.description = this.fallback(data, 'description', 'No description.');\n        this.path = this.fallback(data, 'path', '404');\n        this.regionManager.regions.push(this);\n    }\n    async load(force = false) {\n        if (Object.keys(this.regionRaw).length !== 0 && !force) {\n            return;\n        }\n        let region = await this.fileSystem.read(`${this.module.path}${this.path}`);\n        console.debug(`${this.module.path}${this.path}`);\n        if (typeof region !== 'undefined') {\n            // Interpret code and execute it.\n            this.regionRaw = eval(region);\n        } else {\n            return;\n        }\n    }\n    async build() {\n        if (this.path === '404') {\n            return {};\n        }\n        await this.load();\n        this.renderArray = this.regionRaw.build(this.module);\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9SZW5kZXIvUmVnaW9uL1JlZ2lvbi5qcz80YzE4Il0sIm5hbWVzIjpbIlJlZ2lvbiIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsInJvdXRlIiwiZGF0YSIsImZpbGVTeXN0ZW0iLCJ0eXBlIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInBhdGgiLCJyZWdpb25SYXciLCJyZW5kZXJBcnJheSIsInJlZ2lvbk1hbmFnZXIiLCJtb2R1bGUiLCJmYWxsYmFjayIsInJlZ2lvbnMiLCJwdXNoIiwibG9hZCIsImZvcmNlIiwiT2JqZWN0Iiwia2V5cyIsImxlbmd0aCIsInJlZ2lvbiIsInJlYWQiLCJjb25zb2xlIiwiZGVidWciLCJldmFsIiwiYnVpbGQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2UsTUFBTUEsTUFBTixTQUFxQkMsZ0RBQXJCLENBQTZCO0FBQ3hDQyxnQkFBWUMsS0FBWixFQUFtQkMsSUFBbkIsRUFBeUI7QUFDckIsY0FBTUQsTUFBTUUsVUFBWjtBQUNBLGFBQUtDLElBQUwsR0FBWSxFQUFaO0FBQ0EsYUFBS0MsS0FBTCxHQUFhLEVBQWI7QUFDQSxhQUFLQyxXQUFMLEdBQW1CLEVBQW5CO0FBQ0EsYUFBS0MsSUFBTCxHQUFZLEVBQVo7QUFDQSxhQUFLQyxTQUFMLEdBQWlCLEVBQWpCO0FBQ0EsYUFBS0MsV0FBTCxHQUFtQixFQUFuQjtBQUNBLGFBQUtDLGFBQUwsR0FBcUJULE1BQU1TLGFBQTNCO0FBQ0EsYUFBS0MsTUFBTCxHQUFjVixNQUFNVSxNQUFwQjtBQUNBLGFBQUtSLFVBQUwsR0FBa0JGLE1BQU1VLE1BQU4sQ0FBYVIsVUFBL0I7QUFDQSxhQUFLTyxhQUFMLEdBQXFCVCxNQUFNUyxhQUEzQjtBQUNBO0FBQ0EsYUFBS04sSUFBTCxHQUFZLEtBQUtRLFFBQUwsQ0FBY1YsSUFBZCxFQUFvQixNQUFwQixFQUE0QixTQUE1QixDQUFaO0FBQ0EsYUFBS0csS0FBTCxHQUFhLEtBQUtPLFFBQUwsQ0FBY1YsSUFBZCxFQUFvQixPQUFwQixFQUE2QixXQUE3QixDQUFiO0FBQ0EsYUFBS0ksV0FBTCxHQUFtQixLQUFLTSxRQUFMLENBQWNWLElBQWQsRUFBb0IsYUFBcEIsRUFBbUMsaUJBQW5DLENBQW5CO0FBQ0EsYUFBS0ssSUFBTCxHQUFZLEtBQUtLLFFBQUwsQ0FBY1YsSUFBZCxFQUFvQixNQUFwQixFQUE0QixLQUE1QixDQUFaO0FBQ0EsYUFBS1EsYUFBTCxDQUFtQkcsT0FBbkIsQ0FBMkJDLElBQTNCLENBQWdDLElBQWhDO0FBQ0g7QUFDRCxVQUFNQyxJQUFOLENBQVdDLFFBQVEsS0FBbkIsRUFBMEI7QUFDdEIsWUFBSUMsT0FBT0MsSUFBUCxDQUFZLEtBQUtWLFNBQWpCLEVBQTRCVyxNQUE1QixLQUF1QyxDQUF2QyxJQUE0QyxDQUFDSCxLQUFqRCxFQUF3RDtBQUNwRDtBQUNIO0FBQ0QsWUFBSUksU0FBUyxNQUFNLEtBQUtqQixVQUFMLENBQWdCa0IsSUFBaEIsQ0FBc0IsR0FBRSxLQUFLVixNQUFMLENBQVlKLElBQUssR0FBRSxLQUFLQSxJQUFLLEVBQXJELENBQW5CO0FBQ0FlLGdCQUFRQyxLQUFSLENBQWUsR0FBRSxLQUFLWixNQUFMLENBQVlKLElBQUssR0FBRSxLQUFLQSxJQUFLLEVBQTlDO0FBQ0EsWUFBSSxPQUFPYSxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0FBQy9CO0FBQ0EsaUJBQUtaLFNBQUwsR0FBaUJnQixLQUFLSixNQUFMLENBQWpCO0FBQ0gsU0FIRCxNQUlLO0FBQ0Q7QUFDSDtBQUNKO0FBQ0QsVUFBTUssS0FBTixHQUFjO0FBQ1YsWUFBSSxLQUFLbEIsSUFBTCxLQUFjLEtBQWxCLEVBQXlCO0FBQ3JCLG1CQUFPLEVBQVA7QUFDSDtBQUNELGNBQU0sS0FBS1EsSUFBTCxFQUFOO0FBQ0EsYUFBS04sV0FBTCxHQUFtQixLQUFLRCxTQUFMLENBQWVpQixLQUFmLENBQXFCLEtBQUtkLE1BQTFCLENBQW5CO0FBQ0g7QUF4Q3VDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvUmVuZGVyL1JlZ2lvbi9SZWdpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi4vLi4vQ29uc29sZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWdpb24gZXh0ZW5kcyBDb25zb2xlIHtcclxuICAgIGNvbnN0cnVjdG9yKHJvdXRlLCBkYXRhKSB7XHJcbiAgICAgICAgc3VwZXIocm91dGUuZmlsZVN5c3RlbSk7XHJcbiAgICAgICAgdGhpcy50eXBlID0gXCJcIjtcclxuICAgICAgICB0aGlzLnRpdGxlID0gXCJcIjtcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gXCJcIjtcclxuICAgICAgICB0aGlzLnBhdGggPSBcIlwiO1xyXG4gICAgICAgIHRoaXMucmVnaW9uUmF3ID0ge307XHJcbiAgICAgICAgdGhpcy5yZW5kZXJBcnJheSA9IFtdO1xyXG4gICAgICAgIHRoaXMucmVnaW9uTWFuYWdlciA9IHJvdXRlLnJlZ2lvbk1hbmFnZXI7XHJcbiAgICAgICAgdGhpcy5tb2R1bGUgPSByb3V0ZS5tb2R1bGU7XHJcbiAgICAgICAgdGhpcy5maWxlU3lzdGVtID0gcm91dGUubW9kdWxlLmZpbGVTeXN0ZW07XHJcbiAgICAgICAgdGhpcy5yZWdpb25NYW5hZ2VyID0gcm91dGUucmVnaW9uTWFuYWdlcjtcclxuICAgICAgICAvLyBNYXAgdmFsdWVzLlxyXG4gICAgICAgIHRoaXMudHlwZSA9IHRoaXMuZmFsbGJhY2soZGF0YSwgJ3R5cGUnLCAnY29udGVudCcpO1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLmZhbGxiYWNrKGRhdGEsICd0aXRsZScsICdObyB0aXRsZS4nKTtcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gdGhpcy5mYWxsYmFjayhkYXRhLCAnZGVzY3JpcHRpb24nLCAnTm8gZGVzY3JpcHRpb24uJyk7XHJcbiAgICAgICAgdGhpcy5wYXRoID0gdGhpcy5mYWxsYmFjayhkYXRhLCAncGF0aCcsICc0MDQnKTtcclxuICAgICAgICB0aGlzLnJlZ2lvbk1hbmFnZXIucmVnaW9ucy5wdXNoKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgYXN5bmMgbG9hZChmb3JjZSA9IGZhbHNlKSB7XHJcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHRoaXMucmVnaW9uUmF3KS5sZW5ndGggIT09IDAgJiYgIWZvcmNlKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHJlZ2lvbiA9IGF3YWl0IHRoaXMuZmlsZVN5c3RlbS5yZWFkKGAke3RoaXMubW9kdWxlLnBhdGh9JHt0aGlzLnBhdGh9YCk7XHJcbiAgICAgICAgY29uc29sZS5kZWJ1ZyhgJHt0aGlzLm1vZHVsZS5wYXRofSR7dGhpcy5wYXRofWApO1xyXG4gICAgICAgIGlmICh0eXBlb2YgcmVnaW9uICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICAgICAgICAvLyBJbnRlcnByZXQgY29kZSBhbmQgZXhlY3V0ZSBpdC5cclxuICAgICAgICAgICAgdGhpcy5yZWdpb25SYXcgPSBldmFsKHJlZ2lvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgYXN5bmMgYnVpbGQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucGF0aCA9PT0gJzQwNCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBhd2FpdCB0aGlzLmxvYWQoKTtcclxuICAgICAgICB0aGlzLnJlbmRlckFycmF5ID0gdGhpcy5yZWdpb25SYXcuYnVpbGQodGhpcy5tb2R1bGUpO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../common/lib/Render/Region/Region.js\n");

/***/ }),

/***/ "../common/lib/Render/Route/Manager.js":
/*!*********************************************!*\
  !*** ../common/lib/Render/Route/Manager.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RouteManager; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Console */ \"../common/lib/Console.js\");\n\nclass RouteManager extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(fileSystem) {\n        super(fileSystem);\n        this.routes = [];\n        this.fileSystem = fileSystem;\n        this.defaultPage = '';\n        // Alter the default page.\n        this.alterEvent('manager.page.defaultPage', this.defaultPage);\n        this.alterEvent('manager.page', this);\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9SZW5kZXIvUm91dGUvTWFuYWdlci5qcz84OGMwIl0sIm5hbWVzIjpbIlJvdXRlTWFuYWdlciIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsImZpbGVTeXN0ZW0iLCJyb3V0ZXMiLCJkZWZhdWx0UGFnZSIsImFsdGVyRXZlbnQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2UsTUFBTUEsWUFBTixTQUEyQkMsZ0RBQTNCLENBQW1DO0FBQzlDQyxnQkFBWUMsVUFBWixFQUF3QjtBQUNwQixjQUFNQSxVQUFOO0FBQ0EsYUFBS0MsTUFBTCxHQUFjLEVBQWQ7QUFDQSxhQUFLRCxVQUFMLEdBQWtCQSxVQUFsQjtBQUNBLGFBQUtFLFdBQUwsR0FBbUIsRUFBbkI7QUFDQTtBQUNBLGFBQUtDLFVBQUwsQ0FBZ0IsMEJBQWhCLEVBQTRDLEtBQUtELFdBQWpEO0FBQ0EsYUFBS0MsVUFBTCxDQUFnQixjQUFoQixFQUFnQyxJQUFoQztBQUNIO0FBVDZDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvUmVuZGVyL1JvdXRlL01hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi4vLi4vQ29uc29sZVwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSb3V0ZU1hbmFnZXIgZXh0ZW5kcyBDb25zb2xlIHtcclxuICAgIGNvbnN0cnVjdG9yKGZpbGVTeXN0ZW0pIHtcclxuICAgICAgICBzdXBlcihmaWxlU3lzdGVtKTtcclxuICAgICAgICB0aGlzLnJvdXRlcyA9IFtdO1xyXG4gICAgICAgIHRoaXMuZmlsZVN5c3RlbSA9IGZpbGVTeXN0ZW07XHJcbiAgICAgICAgdGhpcy5kZWZhdWx0UGFnZSA9ICcnO1xyXG4gICAgICAgIC8vIEFsdGVyIHRoZSBkZWZhdWx0IHBhZ2UuXHJcbiAgICAgICAgdGhpcy5hbHRlckV2ZW50KCdtYW5hZ2VyLnBhZ2UuZGVmYXVsdFBhZ2UnLCB0aGlzLmRlZmF1bHRQYWdlKTtcclxuICAgICAgICB0aGlzLmFsdGVyRXZlbnQoJ21hbmFnZXIucGFnZScsIHRoaXMpO1xyXG4gICAgfVxyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../common/lib/Render/Route/Manager.js\n");

/***/ }),

/***/ "../common/lib/Render/Route/Route.js":
/*!*******************************************!*\
  !*** ../common/lib/Render/Route/Route.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Route; });\n/* harmony import */ var _Console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Console */ \"../common/lib/Console.js\");\n/* harmony import */ var _Region_Manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Region/Manager */ \"../common/lib/Render/Region/Manager.js\");\n/* harmony import */ var _Region_Region__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Region/Region */ \"../common/lib/Render/Region/Region.js\");\n\n\n\nclass Route extends _Console__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(module, id, data) {\n        super(module.fileSystem);\n        this.id = '';\n        this.path = '';\n        this.title = '';\n        this.description = '';\n        this.icon = '';\n        this.hide = true;\n        this.module = module;\n        this.routeManager = module.routeManager;\n        this.routeManager.routes.push(this);\n        this.regionManager = new _Region_Manager__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.fileSystem);\n        const regions = this.fallback(data, 'regions', []);\n        for (let i = 0; i < regions.length; i++) {\n            const region = regions[i];\n            new _Region_Region__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, region);\n        }\n        this.id = id;\n        this.path = this.fallback(data, 'path', `/${id}/${Date.now()}`);\n        this.title = this.fallback(data, 'title', 'No title');\n        this.description = this.fallback(data, 'description', 'No description.');\n        this.icon = this.fallback(data, 'icon', '');\n        this.hide = this.fallback(data, 'hide', true);\n    }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vLi4vY29tbW9uL2xpYi9SZW5kZXIvUm91dGUvUm91dGUuanM/MmVhNiJdLCJuYW1lcyI6WyJSb3V0ZSIsIkNvbnNvbGUiLCJjb25zdHJ1Y3RvciIsIm1vZHVsZSIsImlkIiwiZGF0YSIsImZpbGVTeXN0ZW0iLCJwYXRoIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImljb24iLCJoaWRlIiwicm91dGVNYW5hZ2VyIiwicm91dGVzIiwicHVzaCIsInJlZ2lvbk1hbmFnZXIiLCJSZWdpb25NYW5hZ2VyIiwicmVnaW9ucyIsImZhbGxiYWNrIiwiaSIsImxlbmd0aCIsInJlZ2lvbiIsIlJlZ2lvbiIsIkRhdGUiLCJub3ciXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDZSxNQUFNQSxLQUFOLFNBQW9CQyxnREFBcEIsQ0FBNEI7QUFDdkNDLGdCQUFZQyxNQUFaLEVBQW9CQyxFQUFwQixFQUF3QkMsSUFBeEIsRUFBOEI7QUFDMUIsY0FBTUYsT0FBT0csVUFBYjtBQUNBLGFBQUtGLEVBQUwsR0FBVSxFQUFWO0FBQ0EsYUFBS0csSUFBTCxHQUFZLEVBQVo7QUFDQSxhQUFLQyxLQUFMLEdBQWEsRUFBYjtBQUNBLGFBQUtDLFdBQUwsR0FBbUIsRUFBbkI7QUFDQSxhQUFLQyxJQUFMLEdBQVksRUFBWjtBQUNBLGFBQUtDLElBQUwsR0FBWSxJQUFaO0FBQ0EsYUFBS1IsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsYUFBS1MsWUFBTCxHQUFvQlQsT0FBT1MsWUFBM0I7QUFDQSxhQUFLQSxZQUFMLENBQWtCQyxNQUFsQixDQUF5QkMsSUFBekIsQ0FBOEIsSUFBOUI7QUFDQSxhQUFLQyxhQUFMLEdBQXFCLElBQUlDLHVEQUFKLENBQWtCLEtBQUtWLFVBQXZCLENBQXJCO0FBQ0EsY0FBTVcsVUFBVSxLQUFLQyxRQUFMLENBQWNiLElBQWQsRUFBb0IsU0FBcEIsRUFBK0IsRUFBL0IsQ0FBaEI7QUFDQSxhQUFLLElBQUljLElBQUksQ0FBYixFQUFnQkEsSUFBSUYsUUFBUUcsTUFBNUIsRUFBb0NELEdBQXBDLEVBQXlDO0FBQ3JDLGtCQUFNRSxTQUFTSixRQUFRRSxDQUFSLENBQWY7QUFDQSxnQkFBSUcsc0RBQUosQ0FBVyxJQUFYLEVBQWlCRCxNQUFqQjtBQUNIO0FBQ0QsYUFBS2pCLEVBQUwsR0FBVUEsRUFBVjtBQUNBLGFBQUtHLElBQUwsR0FBWSxLQUFLVyxRQUFMLENBQWNiLElBQWQsRUFBb0IsTUFBcEIsRUFBNkIsSUFBR0QsRUFBRyxJQUFHbUIsS0FBS0MsR0FBTCxFQUFXLEVBQWpELENBQVo7QUFDQSxhQUFLaEIsS0FBTCxHQUFhLEtBQUtVLFFBQUwsQ0FBY2IsSUFBZCxFQUFvQixPQUFwQixFQUE2QixVQUE3QixDQUFiO0FBQ0EsYUFBS0ksV0FBTCxHQUFtQixLQUFLUyxRQUFMLENBQWNiLElBQWQsRUFBb0IsYUFBcEIsRUFBbUMsaUJBQW5DLENBQW5CO0FBQ0EsYUFBS0ssSUFBTCxHQUFZLEtBQUtRLFFBQUwsQ0FBY2IsSUFBZCxFQUFvQixNQUFwQixFQUE0QixFQUE1QixDQUFaO0FBQ0EsYUFBS00sSUFBTCxHQUFZLEtBQUtPLFFBQUwsQ0FBY2IsSUFBZCxFQUFvQixNQUFwQixFQUE0QixJQUE1QixDQUFaO0FBQ0g7QUF4QnNDIiwiZmlsZSI6Ii4uL2NvbW1vbi9saWIvUmVuZGVyL1JvdXRlL1JvdXRlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbnNvbGUgZnJvbSBcIi4uLy4uL0NvbnNvbGVcIjtcclxuaW1wb3J0IFJlZ2lvbk1hbmFnZXIgZnJvbSBcIi4uL1JlZ2lvbi9NYW5hZ2VyXCI7XHJcbmltcG9ydCBSZWdpb24gZnJvbSBcIi4uL1JlZ2lvbi9SZWdpb25cIjtcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUm91dGUgZXh0ZW5kcyBDb25zb2xlIHtcclxuICAgIGNvbnN0cnVjdG9yKG1vZHVsZSwgaWQsIGRhdGEpIHtcclxuICAgICAgICBzdXBlcihtb2R1bGUuZmlsZVN5c3RlbSk7XHJcbiAgICAgICAgdGhpcy5pZCA9ICcnO1xyXG4gICAgICAgIHRoaXMucGF0aCA9ICcnO1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSAnJztcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gJyc7XHJcbiAgICAgICAgdGhpcy5pY29uID0gJyc7XHJcbiAgICAgICAgdGhpcy5oaWRlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLm1vZHVsZSA9IG1vZHVsZTtcclxuICAgICAgICB0aGlzLnJvdXRlTWFuYWdlciA9IG1vZHVsZS5yb3V0ZU1hbmFnZXI7XHJcbiAgICAgICAgdGhpcy5yb3V0ZU1hbmFnZXIucm91dGVzLnB1c2godGhpcyk7XHJcbiAgICAgICAgdGhpcy5yZWdpb25NYW5hZ2VyID0gbmV3IFJlZ2lvbk1hbmFnZXIodGhpcy5maWxlU3lzdGVtKTtcclxuICAgICAgICBjb25zdCByZWdpb25zID0gdGhpcy5mYWxsYmFjayhkYXRhLCAncmVnaW9ucycsIFtdKTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlZ2lvbnMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgcmVnaW9uID0gcmVnaW9uc1tpXTtcclxuICAgICAgICAgICAgbmV3IFJlZ2lvbih0aGlzLCByZWdpb24pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlkID0gaWQ7XHJcbiAgICAgICAgdGhpcy5wYXRoID0gdGhpcy5mYWxsYmFjayhkYXRhLCAncGF0aCcsIGAvJHtpZH0vJHtEYXRlLm5vdygpfWApO1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSB0aGlzLmZhbGxiYWNrKGRhdGEsICd0aXRsZScsICdObyB0aXRsZScpO1xyXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSB0aGlzLmZhbGxiYWNrKGRhdGEsICdkZXNjcmlwdGlvbicsICdObyBkZXNjcmlwdGlvbi4nKTtcclxuICAgICAgICB0aGlzLmljb24gPSB0aGlzLmZhbGxiYWNrKGRhdGEsICdpY29uJywgJycpO1xyXG4gICAgICAgIHRoaXMuaGlkZSA9IHRoaXMuZmFsbGJhY2soZGF0YSwgJ2hpZGUnLCB0cnVlKTtcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../common/lib/Render/Route/Route.js\n");

/***/ }),

/***/ "./node_modules/cordova-promise-fs/index.js":
/*!**************************************************!*\
  !*** ./node_modules/cordova-promise-fs/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Static Private functions\n */\n\n/* createDir, recursively */\nfunction __createDir(rootDirEntry, folders, success,error) {\n  rootDirEntry.getDirectory(folders[0], {create: true}, function(dirEntry) {\n    // Recursively add the new subfolder (if we still have another to create).\n    if (folders.length > 1) {\n      __createDir(dirEntry, folders.slice(1),success,error);\n    } else {\n      success(dirEntry);\n    }\n  }, error);\n}\n\nfunction dirname(str) {\n  str = str.substr(0,str.lastIndexOf('/')+1);\n  if(str[0] === '/') str = str.substr(1);\n  return str;\n}\n\nfunction filename(str) {\n  return str.substr(str.lastIndexOf('/')+1);\n}\n\nfunction normalize(str){\n  str = str || '';\n  if(str[0] === '/') str = str.substr(1);\n\n  var tokens = str.split('/'), last = tokens[0];\n\n  // check tokens for instances of .. and .\n  for(var i=1;i < tokens.length;i++) {\n    last = tokens[i];\n    if (tokens[i] === '..') {\n      // remove the .. and the previous token\n      tokens.splice(i-1,2);\n      // rewind 'cursor' 2 tokens\n      i = i - 2;\n    } else if (tokens[i] === '.') {\n      // remove the .. and the previous token\n      tokens.splice(i,1);\n      // rewind 'cursor' 1 token\n      i--;\n    }\n  }\n\n  str = tokens.join('/');\n  if(str === './') {\n    str = '';\n  } else if(last && last.indexOf('.') < 0 && str[str.length - 1] != '/'){\n    str += '/';\n  }\n  return str;\n}\n\nvar transferQueue = [], // queued fileTransfers\n    inprogress = 0;     // currently active filetransfers\n\n/**\n * Factory function: Create a single instance (based on single FileSystem)\n */\nmodule.exports = function(options){\n  /* Promise implementation */\n  var Promise = options.Promise || window.Promise;\n  var CDV_INTERNAL_URL_ROOT = 'cdvfile://localhost/'+(options.persistent? 'persistent/':'temporary/');\n  var CDV_URL_ROOT = '';\n  if(!Promise) { throw new Error(\"No Promise library given in options.Promise\"); }\n\n  /* default options */\n  options = options || {};\n  options.crosswalk = !!options.crosswalk;\n  options.persistent = options.persistent !== undefined? options.persistent: true;\n  options.storageSize = options.storageSize || 20*1024*1024;\n  options.concurrency = options.concurrency || 3;\n  options.retry = options.retry || [];\n  options.debug = !!options.debug;\n\n  /* Cordova deviceready promise */\n  var deviceready,\n      isCordova = typeof cordova !== 'undefined' && !options.crosswalk,\n      isCrosswalk = options.crosswalk;\n  if(isCordova){\n    deviceready = new Promise(function(resolve,reject){\n      document.addEventListener(\"deviceready\", resolve, false);\n      setTimeout(function(){ reject(new Error('deviceready has not fired after 5 seconds.')); },5100);\n    });\n  } else if(isCrosswalk) {\n    deviceready = ResolvedPromise(true);\n  } else {\n    /* FileTransfer implementation for Chrome */\n    deviceready = ResolvedPromise(true);\n    if(typeof webkitRequestFileSystem !== 'undefined'){\n      window.requestFileSystem = webkitRequestFileSystem;\n    } else {\n      window.requestFileSystem = function(x,y,z,fail){\n        fail(new Error('requestFileSystem not supported!'));\n      };\n    }\n  }\n\n  // Polyfill Filetransfer\n  if(!isCordova){\n    window.FileTransfer = function FileTransfer(){};\n    FileTransfer.prototype.download = function download(url,file,win,fail) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url);\n      xhr.responseType = \"blob\";\n      xhr.onreadystatechange = function(onSuccess, onError, cb) {\n        if (xhr.readyState == 4) {\n          if(xhr.status === 200 && !this._aborted){\n            write(file,xhr.response).then(win,fail);\n          } else {\n            fail(xhr.status);\n          }\n        }\n      };\n      xhr.send();\n      return xhr;\n    };\n    FileTransfer.prototype.abort = function(){\n      this._aborted = true;\n    };\n    window.ProgressEvent = function ProgressEvent(){};\n    window.FileEntry = function FileEntry(){};\n  }\n\n  /* Promise resolve helper */\n  function ResolvedPromise(value){\n    return new Promise(function(resolve){\n      return resolve(value);\n    });\n  }\n\n  /* the filesystem! */\n  var fs = new Promise(function(resolve,reject){\n    deviceready.then(function(){\n      var type = options.persistent? 1: 0;\n      if(options.fileSystem && isCordova){\n        type = options.fileSystem;\n      }\n      // Crosswalk\n      if(isCrosswalk){\n        var system = options.fileSystem || 'cachedir';\n        xwalk.experimental.native_file_system.requestNativeFileSystem(system,resolve,reject);\n      // On chrome, request quota to store persistent files\n      } else if (!isCordova && type === 1 && navigator.webkitPersistentStorage) {\n        navigator.webkitPersistentStorage.requestQuota(options.storageSize, function(grantedBytes) {\n          window.requestFileSystem(type, grantedBytes, resolve, reject);\n        }, reject);\n\n      // Exotic Cordova Directories (options.fileSystem = string)\n      } else if(isNaN(type)) {\n        window.resolveLocalFileSystemURL(type,function(directory){\n            resolve(directory.filesystem);\n        },reject);\n      // Normal browser usage\n      } else {\n        window.requestFileSystem(type, options.storageSize, resolve, reject);\n      }\n\n      setTimeout(function(){ reject(new Error('Could not retrieve FileSystem after 5 seconds.')); },5100);\n    },reject);\n  });\n\n  /* debug */\n  fs.then(function(fs){\n    CDV_URL_ROOT = fs.root.toURL();\n    CDV_INTERNAL_URL_ROOT = isCordova? fs.root.toInternalURL(): CDV_URL_ROOT;\n    window.__fs = fs;\n  },function(err){\n    console.error('Could not get Cordova FileSystem:',err);\n  });\n\n  /* ensure directory exists */\n  function ensure(folders) {\n    return new Promise(function(resolve,reject){\n      return fs.then(function(fs){\n          if(!folders) {\n            resolve(fs.root);\n          } else {\n            folders = folders.split('/').filter(function(folder) {\n              return folder && folder.length > 0 && folder !== '.' && folder !== '..';\n            });\n            __createDir(fs.root,folders,resolve,reject);\n          }\n        },reject);\n    });\n  }\n\n    /* get file file */\n  function file(path,options){\n    return new Promise(function(resolve,reject){\n      if(typeof path === 'object') {\n        return resolve(path);\n      }\n      path = normalize(path);\n      options = options || {};\n      return fs.then(function(fs){\n        fs.root.getFile(path,options,resolve,reject);\n      },reject);\n    });\n  }\n\n  /* get directory entry */\n  function dir(path,options){\n    path = normalize(path);\n    options = options || {};\n    return new Promise(function(resolve,reject){\n      return fs.then(function(fs){\n        if(!path || path === '/') {\n          resolve(fs.root);\n        } else {\n          fs.root.getDirectory(path,options,resolve,reject);\n        }\n      },reject);\n    });\n  }\n\n  /* list contents of a directory */\n  function list(path,mode) {\n    mode = mode || '';\n    var recursive = mode.indexOf('r') > -1;\n    var getAsEntries = mode.indexOf('e') > -1;\n    var onlyFiles = mode.indexOf('f') > -1;\n    var onlyDirs = mode.indexOf('d') > -1;\n    if(onlyFiles && onlyDirs) {\n      onlyFiles = false;\n      onlyDirs = false;\n    }\n\n    return dir(path)\n      .then(function(dirEntry){\n        return new Promise(function(resolve, reject){\n          var entries = [];\n          var dirReader = dirEntry.createReader();\n          var fetchEntries = function(){\n            dirReader.readEntries(function(newEntries){\n              if(newEntries.length === 0) {\n                resolve(entries);\n              } else {\n                var args = [0,0].concat(newEntries);\n                entries.splice.apply(entries,args);\n                fetchEntries();\n              }\n            });\n          }\n          fetchEntries();\n        });\n      })\n      .then(function(entries){\n        var promises = [ResolvedPromise(entries)];\n        if(recursive) {\n          entries\n            .filter(function(entry){return entry.isDirectory; })\n            .forEach(function(entry){\n              promises.push(list(entry.fullPath,'re'));\n            });\n        }\n        return Promise.all(promises);\n      })\n      .then(function(values){\n        var entries = [];\n        entries = entries.concat.apply(entries,values);\n        if(onlyFiles) entries = entries.filter(function(entry) { return entry.isFile; });\n        if(onlyDirs) entries = entries.filter(function(entry) { return entry.isDirectory; });\n        if(!getAsEntries) entries = entries.map(function(entry) { return entry.fullPath; });\n        return entries;\n      });\n  }\n\n  /* does file exist? If so, resolve with fileEntry, if not, resolve with false. */\n  function exists(path){\n    return new Promise(function(resolve,reject){\n      file(path).then(\n        function(fileEntry){\n          resolve(fileEntry);\n        },\n        function(err){\n          if(err.code === 1) {\n            resolve(false);\n          } else {\n            reject(err);\n          }\n        }\n      );\n    });\n  }\n\n  /* does dir exist? If so, resolve with fileEntry, if not, resolve with false. */\n  function existsDir(path){\n    return new Promise(function(resolve,reject){\n      dir(path).then(\n        function(dirEntry){\n          resolve(dirEntry);\n        },\n        function(err){\n          if(err.code === 1) {\n            resolve(false);\n          } else {\n            reject(err);\n          }\n        }\n      );\n    });\n  }\n\n  function create(path){\n    return ensure(dirname(path)).then(function(){\n      return file(path,{create:true});\n    });\n  }\n\n  /* convert path to URL to be used in JS/CSS/HTML */\n  function toURL(path) {\n    return file(path).then(function(fileEntry) {\n      return fileEntry.toURL();\n    });\n  }\n\n  /* convert path to URL to be used in JS/CSS/HTML */\n  var toInternalURL,toInternalURLSync,toURLSync;\n  if(isCordova) {\n    /* synchronous helper to get internal URL. */\n    toInternalURLSync = function(path){\n      path = normalize(path);\n      return path.indexOf('://') < 0? CDV_INTERNAL_URL_ROOT + path: path;\n    };\n    /* synchronous helper to get native URL. */\n    toURLSync = function(path){\n      path = normalize(path);\n      return path.indexOf('://') < 0? CDV_URL_ROOT + path: path;\n    };\n\n    toInternalURL = function(path) {\n      return file(path).then(function(fileEntry) {\n        return fileEntry.toInternalURL();\n      });\n    };\n  } else if(isCrosswalk){\n    var system = options.fileSystem || 'cachedir';\n    /* synchronous helper to get internal URL. */\n    toInternalURLSync = function(path){\n      path = normalize(path);\n      return path.indexOf(system) < 0? '/'+system+'/' + path: path;\n    };\n    toInternalURL = function(path) {\n      return file(path).then(function(fileEntry) {\n        return fileEntry.toURL();\n      });\n    };\n    toURLSync = toInternalURLSync;\n  } else {\n    /* synchronous helper to get internal URL. */\n    toInternalURLSync = function(path){\n      path = normalize(path);\n      return 'filesystem:'+location.origin+(options.persistent? '/persistent/':'/temporary/') + path;\n    };\n\n    toInternalURL = function(path) {\n      return file(path).then(function(fileEntry) {\n        return fileEntry.toURL();\n      });\n    };\n    toURLSync = toInternalURLSync;\n  }\n\n  /* return contents of a file */\n  function read(path,method) {\n    method = method || 'readAsText';\n    return file(path).then(function(fileEntry) {\n      return new Promise(function(resolve,reject){\n        fileEntry.file(function(file){\n          var reader = new FileReader();\n          reader.onloadend = function(){\n            resolve(this.result);\n          };\n          reader[method](file);\n        },reject);\n      });\n    });\n  }\n\n  /* convert path to base64 date URI */\n  function toDataURL(path) {\n    return read(path,'readAsDataURL');\n  }\n\n\n  function readJSON(path){\n    return read(path).then(JSON.parse);\n  }\n\n  /* write contents to a file */\n  function write(path,blob,mimeType) {\n    return ensure(dirname(path))\n      .then(function() { return file(path,{create:true}); })\n      .then(function(fileEntry) {\n        return new Promise(function(resolve,reject){\n          fileEntry.createWriter(function(writer){\n            writer.onwriteend = resolve;\n            writer.onerror = reject;\n            if(typeof blob === 'string') {\n              blob = createBlob([blob], mimeType || 'text/plain');\n            } else if(blob instanceof Blob !== true){\n              blob = createBlob([JSON.stringify(blob,null,4)], mimeType || 'application/json');\n            }\n            writer.write(blob);\n          },reject);\n        });\n      });\n    }\n\n  function createBlob(parts, type) {\n    var BlobBuilder,\n        bb;\n    try {\n      return new Blob(parts, {type: type});\n    } catch(e) {\n      BlobBuilder = window.BlobBuilder ||\n        window.WebKitBlobBuilder ||\n        window.MozBlobBuilder ||\n        window.MSBlobBuilder;\n      if(BlobBuilder) {\n        bb = new BlobBuilder();\n        bb.append(parts);\n        return bb.getBlob(type);\n      } else {\n        throw new Error(\"Unable to create blob\");\n      }\n    }\n  }\n\n  /* move a file */\n  function move(src,dest) {\n    return ensure(dirname(dest))\n      .then(function(dir) {\n        return file(src).then(function(fileEntry){\n          return new Promise(function(resolve,reject){\n            fileEntry.moveTo(dir,filename(dest),resolve,reject);\n          });\n        });\n      });\n  }\n\n  /* move a dir */\n  function moveDir(src,dest) {\n    src = src.replace(/\\/$/, '');\n    dest = dest.replace(/\\/$/, '');\n    return ensure(dirname(dest))\n      .then(function(destDir) {\n        return dir(src).then(function(dirEntry){\n          return new Promise(function(resolve,reject){\n            dirEntry.moveTo(destDir,filename(dest),resolve,reject);\n          });\n        });\n      });\n  }\n\n  /* copy a file */\n  function copy(src,dest) {\n    return ensure(dirname(dest))\n      .then(function(dir) {\n        return file(src).then(function(fileEntry){\n          return new Promise(function(resolve,reject){\n            fileEntry.copyTo(dir,filename(dest),resolve,reject);\n          });\n        });\n      });\n  }\n\n  /* delete a file */\n  function remove(path,mustExist) {\n    var method = mustExist? file:exists;\n    return new Promise(function(resolve,reject){\n        method(path).then(function(fileEntry){\n        if(fileEntry !== false) {\n          fileEntry.remove(resolve,reject);\n        } else {\n          resolve(1);\n        }\n      },reject);\n    }).then(function(val){\n      return val === 1? false: true;\n    });\n  }\n\n  /* delete a directory */\n  function removeDir(path) {\n    return dir(path).then(function(dirEntry){\n      return new Promise(function(resolve,reject) {\n        dirEntry.removeRecursively(resolve,reject);\n      });\n    });\n  }\n\n  // Whenever we want to start a transfer, we call popTransferQueue\n  function popTransferQueue(){\n    // while we are not at max concurrency\n    while(transferQueue.length > 0 && inprogress < options.concurrency){\n      // increment activity counter\n      inprogress++;\n\n      // fetch filetranfer, method-type (isDownload) and arguments\n      var args = transferQueue.pop();\n\t  var ft = args.fileTransfer,\n\t      isDownload = args.isDownload,\n\t      serverUrl = args.serverUrl,\n\t      localPath = args.localPath,\n\t      trustAllHosts = args.trustAllHosts,\n\t      transferOptions = args.transferOptions,\n\t      win = args.win,\n\t      fail = args.fail;\n\n      if(ft._aborted) {\n        inprogress--;\n      } else if(isDownload){\n        ft.download.call(ft,serverUrl,localPath,win,fail,trustAllHosts,transferOptions);\n        if(ft.onprogress) ft.onprogress(new ProgressEvent());\n      } else {\n        ft.upload.call(ft,localPath,serverUrl,win,fail,transferOptions,trustAllHosts);\n      }\n    }\n    // if we are at max concurrency, popTransferQueue() will be called whenever\n    // the transfer is ready and there is space avaialable.\n  }\n\n  // Promise callback to check if there are any more queued transfers\n  function nextTransfer(result){\n    inprogress--; // decrement counter to free up one space to start transfers again!\n    popTransferQueue(); // check if there are any queued transfers\n    return result;\n  }\n\n  function filetransfer(isDownload,serverUrl,localPath,transferOptions,onprogress){\n    if(typeof transferOptions === 'function') {\n      onprogress = transferOptions;\n      transferOptions = {};\n    }\n    if(isCordova && localPath.indexOf('://') < 0) localPath = toURLSync(localPath);\n\n    transferOptions = transferOptions || {};\n    if(!transferOptions.retry || !transferOptions.retry.length) {\n      transferOptions.retry = options.retry;\n    }\n    transferOptions.retry = transferOptions.retry.concat();\n    if(!transferOptions.file && !isDownload){\n      transferOptions.fileName = filename(localPath);\n    }\n\n    var ft = new FileTransfer();\n    onprogress = onprogress || transferOptions.onprogress;\n    if(typeof onprogress === 'function') ft.onprogress = onprogress;\n    var promise = new Promise(function(resolve,reject){\n      var attempt = function(err){\n        if(transferOptions.retry.length === 0) {\n          if(options.debug) console.log('FileTransfer Error: '+serverUrl,err);\n          reject(err);\n        } else {\n\n    \t\t  var transferJob = {\n    \t\t    fileTransfer:ft,\n    \t\t    isDownload:isDownload,\n    \t\t    serverUrl:serverUrl,\n    \t\t    localPath:localPath,\n    \t\t    trustAllHosts:transferOptions.trustAllHosts || false,\n    \t\t    transferOptions:transferOptions,\n    \t\t    win:resolve,\n    \t\t    fail:attempt\n    \t\t  };\n          transferQueue.unshift(transferJob);\n          var timeout = transferOptions.retry.shift();\n          if(timeout > 0) {\n            setTimeout(nextTransfer,timeout);\n          } else {\n            nextTransfer();\n          }\n        }\n      };\n      transferOptions.retry.unshift(0);\n      inprogress++;\n      attempt();\n    });\n    promise.then(nextTransfer,nextTransfer);\n    promise.progress = function(onprogress){\n      ft.onprogress = onprogress;\n      return promise;\n    };\n    promise.abort = function(){\n      ft._aborted = true;\n      ft.abort();\n      return promise;\n    };\n    return promise;\n  }\n\n  function download(url,dest,options,onprogress){\n    return filetransfer(true,url,dest,options,onprogress);\n  }\n\n  function upload(source,dest,options,onprogress){\n    return filetransfer(false,dest,source,options,onprogress);\n  }\n\n  return {\n    fs: fs,\n    normalize: normalize,\n    file: file,\n    filename: filename,\n    dir: dir,\n    dirname: dirname,\n    create:create,\n    read: read,\n    readJSON: readJSON,\n    write: write,\n    move: move,\n    moveDir: moveDir,\n    copy: copy,\n    remove: remove,\n    removeDir: removeDir,\n    list: list,\n    ensure: ensure,\n    exists: exists,\n    existsDir: existsDir,\n    download: download,\n    upload: upload,\n    toURL:toURL,\n    toURLSync: toURLSync,\n    isCordova:isCordova,\n    toInternalURLSync: toInternalURLSync,\n    toInternalURL:toInternalURL,\n    toDataURL:toDataURL,\n    deviceready: deviceready,\n    options: options,\n    Promise: Promise\n  };\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cordova-promise-fs/index.js\n");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/process/browser.js\n");

/***/ }),

/***/ "./node_modules/promiscuous/promiscuous.js":
/*!*************************************************!*\
  !*** ./node_modules/promiscuous/promiscuous.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {/**@license MIT-promiscuous-©Ruben Verborgh*/\n(function (func, obj) {\n  // Type checking utility function\n  function is(type, item) { return (typeof item)[0] == type; }\n\n  // Creates a promise, calling callback(resolve, reject), ignoring other parameters.\n  function Promise(callback, handler) {\n    // The `handler` variable points to the function that will\n    // 1) handle a .then(resolved, rejected) call\n    // 2) handle a resolve or reject call (if the first argument === `is`)\n    // Before 2), `handler` holds a queue of callbacks.\n    // After 2), `handler` is a finalized .then handler.\n    handler = function pendingHandler(resolved, rejected, value, queue, then, i) {\n      queue = pendingHandler.q;\n\n      // Case 1) handle a .then(resolved, rejected) call\n      if (resolved != is) {\n        return Promise(function (resolve, reject) {\n          queue.push({ p: this, r: resolve, j: reject, 1: resolved, 0: rejected });\n        });\n      }\n\n      // Case 2) handle a resolve or reject call\n      // (`resolved` === `is` acts as a sentinel)\n      // The actual function signature is\n      // .re[ject|solve](<is>, success, value)\n\n      // Check if the value is a promise and try to obtain its `then` method\n      if (value && (is(func, value) | is(obj, value))) {\n        try { then = value.then; }\n        catch (reason) { rejected = 0; value = reason; }\n      }\n      // If the value is a promise, take over its state\n      if (is(func, then)) {\n        try { then.call(value, transferState(1), rejected = transferState(0)); }\n        catch (reason) { rejected(reason); }\n      }\n      // The value is not a promise; handle resolve/reject\n      else {\n        // Replace this handler with a finalized resolved/rejected handler\n        handler = function (Resolved, Rejected) {\n          // If the Resolved or Rejected parameter is not a function,\n          // return the original promise (now stored in the `callback` variable)\n          if (!is(func, (Resolved = rejected ? Resolved : Rejected)))\n            return callback;\n          // Otherwise, return a finalized promise, transforming the value with the function\n          return Promise(function (resolve, reject) { finalize(this, resolve, reject, value, Resolved); });\n        };\n        // Resolve/reject pending callbacks\n        i = 0;\n        while (i < queue.length) {\n          then = queue[i++];\n          // If no callback, just resolve/reject the promise\n          if (!is(func, resolved = then[rejected]))\n            (rejected ? then.r : then.j)(value);\n          // Otherwise, resolve/reject the promise with the result of the callback\n          else\n            finalize(then.p, then.r, then.j, value, resolved);\n        }\n      }\n      // Returns a function that transfers the state of the promise\n      function transferState(resolved) {\n        return function (value) { then && (then = 0, pendingHandler(is, resolved, value)); };\n      }\n    };\n    // The queue of pending callbacks; garbage-collected when handler is resolved/rejected\n    handler.q = [];\n\n    // Create and return the promise (reusing the callback variable)\n    callback.call(callback = { then:    function (resolved, rejected) { return handler(resolved, rejected); },\n                               \"catch\": function (rejected)           { return handler(0,        rejected); } },\n                  function (value)  { handler(is, 1,  value); },\n                  function (reason) { handler(is, 0, reason); });\n    return callback;\n  }\n\n  // Finalizes the promise by resolving/rejecting it with the transformed value\n  function finalize(promise, resolve, reject, value, transform) {\n    setImmediate(function () {\n      try {\n        // Transform the value through and check whether it's a promise\n        value = transform(value);\n        transform = value && (is(obj, value) | is(func, value)) && value.then;\n        // Return the result if it's not a promise\n        if (!is(func, transform))\n          resolve(value);\n        // If it's a promise, make sure it's not circular\n        else if (value == promise)\n          reject(TypeError());\n        // Take over the promise's state\n        else\n          transform.call(value, resolve, reject);\n      }\n      catch (error) { reject(error); }\n    });\n  }\n\n  // Export the main module\n  module.exports = Promise;\n\n  // Creates a resolved promise\n  Promise.resolve = ResolvedPromise;\n  function ResolvedPromise(value) { return Promise(function (resolve) { resolve(value); }); }\n\n  // Creates a rejected promise\n  Promise.reject = function (reason) { return Promise(function (resolve, reject) { reject(reason); }); };\n\n  // Transforms an array of promises into a promise for an array\n  Promise.all = function (promises) {\n    return Promise(function (resolve, reject, count, values) {\n      // Array of collected values\n      values = [];\n      // Resolve immediately if there are no promises\n      count = promises.length || resolve(values);\n      // Transform all elements (`map` is shorter than `forEach`)\n      promises.map(function (promise, index) {\n        ResolvedPromise(promise).then(\n          // Store the value and resolve if it was the last\n          function (value) {\n            values[index] = value;\n            --count || resolve(values);\n          },\n          // Reject if one element fails\n          reject);\n      });\n    });\n  };\n\n  // Returns a promise that resolves or rejects as soon as one promise in the array does\n  Promise.race = function (promises) {\n    return Promise(function (resolve, reject) {\n      // Register to all promises in the array\n      promises.map(function (promise) {\n        ResolvedPromise(promise).then(resolve, reject);\n      });\n    });\n  };\n})('f', 'o');\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vbm9kZV9tb2R1bGVzL3Byb21pc2N1b3VzL3Byb21pc2N1b3VzLmpzPzlkMzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlDQUFpQzs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwyREFBMkQ7QUFDakYsU0FBUztBQUNUOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxhQUFhLG1CQUFtQjtBQUNoQyx3QkFBd0IsY0FBYyxnQkFBZ0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpRUFBaUU7QUFDOUUsd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELGtEQUFrRCxFQUFFO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx5REFBeUQ7QUFDMUY7QUFDQTtBQUNBLHNDQUFzQztBQUN0Qzs7QUFFQTtBQUNBLDhCQUE4Qix5Q0FBeUMsb0NBQW9DLEVBQUU7QUFDN0csdUVBQXVFLG9DQUFvQyxFQUFFLEVBQUU7QUFDL0cscUNBQXFDLHdCQUF3QixFQUFFO0FBQy9ELHFDQUFxQyx3QkFBd0IsRUFBRTtBQUMvRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsZUFBZTtBQUNwQyxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0IsRUFBRSxFQUFFOztBQUUzRjtBQUNBLHNDQUFzQyw0Q0FBNEMsZ0JBQWdCLEVBQUUsRUFBRTs7QUFFdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9wcm9taXNjdW91cy9wcm9taXNjdW91cy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKkBsaWNlbnNlIE1JVC1wcm9taXNjdW91cy3CqVJ1YmVuIFZlcmJvcmdoKi9cbihmdW5jdGlvbiAoZnVuYywgb2JqKSB7XG4gIC8vIFR5cGUgY2hlY2tpbmcgdXRpbGl0eSBmdW5jdGlvblxuICBmdW5jdGlvbiBpcyh0eXBlLCBpdGVtKSB7IHJldHVybiAodHlwZW9mIGl0ZW0pWzBdID09IHR5cGU7IH1cblxuICAvLyBDcmVhdGVzIGEgcHJvbWlzZSwgY2FsbGluZyBjYWxsYmFjayhyZXNvbHZlLCByZWplY3QpLCBpZ25vcmluZyBvdGhlciBwYXJhbWV0ZXJzLlxuICBmdW5jdGlvbiBQcm9taXNlKGNhbGxiYWNrLCBoYW5kbGVyKSB7XG4gICAgLy8gVGhlIGBoYW5kbGVyYCB2YXJpYWJsZSBwb2ludHMgdG8gdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbFxuICAgIC8vIDEpIGhhbmRsZSBhIC50aGVuKHJlc29sdmVkLCByZWplY3RlZCkgY2FsbFxuICAgIC8vIDIpIGhhbmRsZSBhIHJlc29sdmUgb3IgcmVqZWN0IGNhbGwgKGlmIHRoZSBmaXJzdCBhcmd1bWVudCA9PT0gYGlzYClcbiAgICAvLyBCZWZvcmUgMiksIGBoYW5kbGVyYCBob2xkcyBhIHF1ZXVlIG9mIGNhbGxiYWNrcy5cbiAgICAvLyBBZnRlciAyKSwgYGhhbmRsZXJgIGlzIGEgZmluYWxpemVkIC50aGVuIGhhbmRsZXIuXG4gICAgaGFuZGxlciA9IGZ1bmN0aW9uIHBlbmRpbmdIYW5kbGVyKHJlc29sdmVkLCByZWplY3RlZCwgdmFsdWUsIHF1ZXVlLCB0aGVuLCBpKSB7XG4gICAgICBxdWV1ZSA9IHBlbmRpbmdIYW5kbGVyLnE7XG5cbiAgICAgIC8vIENhc2UgMSkgaGFuZGxlIGEgLnRoZW4ocmVzb2x2ZWQsIHJlamVjdGVkKSBjYWxsXG4gICAgICBpZiAocmVzb2x2ZWQgIT0gaXMpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICAgIHF1ZXVlLnB1c2goeyBwOiB0aGlzLCByOiByZXNvbHZlLCBqOiByZWplY3QsIDE6IHJlc29sdmVkLCAwOiByZWplY3RlZCB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIENhc2UgMikgaGFuZGxlIGEgcmVzb2x2ZSBvciByZWplY3QgY2FsbFxuICAgICAgLy8gKGByZXNvbHZlZGAgPT09IGBpc2AgYWN0cyBhcyBhIHNlbnRpbmVsKVxuICAgICAgLy8gVGhlIGFjdHVhbCBmdW5jdGlvbiBzaWduYXR1cmUgaXNcbiAgICAgIC8vIC5yZVtqZWN0fHNvbHZlXSg8aXM+LCBzdWNjZXNzLCB2YWx1ZSlcblxuICAgICAgLy8gQ2hlY2sgaWYgdGhlIHZhbHVlIGlzIGEgcHJvbWlzZSBhbmQgdHJ5IHRvIG9idGFpbiBpdHMgYHRoZW5gIG1ldGhvZFxuICAgICAgaWYgKHZhbHVlICYmIChpcyhmdW5jLCB2YWx1ZSkgfCBpcyhvYmosIHZhbHVlKSkpIHtcbiAgICAgICAgdHJ5IHsgdGhlbiA9IHZhbHVlLnRoZW47IH1cbiAgICAgICAgY2F0Y2ggKHJlYXNvbikgeyByZWplY3RlZCA9IDA7IHZhbHVlID0gcmVhc29uOyB9XG4gICAgICB9XG4gICAgICAvLyBJZiB0aGUgdmFsdWUgaXMgYSBwcm9taXNlLCB0YWtlIG92ZXIgaXRzIHN0YXRlXG4gICAgICBpZiAoaXMoZnVuYywgdGhlbikpIHtcbiAgICAgICAgdHJ5IHsgdGhlbi5jYWxsKHZhbHVlLCB0cmFuc2ZlclN0YXRlKDEpLCByZWplY3RlZCA9IHRyYW5zZmVyU3RhdGUoMCkpOyB9XG4gICAgICAgIGNhdGNoIChyZWFzb24pIHsgcmVqZWN0ZWQocmVhc29uKTsgfVxuICAgICAgfVxuICAgICAgLy8gVGhlIHZhbHVlIGlzIG5vdCBhIHByb21pc2U7IGhhbmRsZSByZXNvbHZlL3JlamVjdFxuICAgICAgZWxzZSB7XG4gICAgICAgIC8vIFJlcGxhY2UgdGhpcyBoYW5kbGVyIHdpdGggYSBmaW5hbGl6ZWQgcmVzb2x2ZWQvcmVqZWN0ZWQgaGFuZGxlclxuICAgICAgICBoYW5kbGVyID0gZnVuY3Rpb24gKFJlc29sdmVkLCBSZWplY3RlZCkge1xuICAgICAgICAgIC8vIElmIHRoZSBSZXNvbHZlZCBvciBSZWplY3RlZCBwYXJhbWV0ZXIgaXMgbm90IGEgZnVuY3Rpb24sXG4gICAgICAgICAgLy8gcmV0dXJuIHRoZSBvcmlnaW5hbCBwcm9taXNlIChub3cgc3RvcmVkIGluIHRoZSBgY2FsbGJhY2tgIHZhcmlhYmxlKVxuICAgICAgICAgIGlmICghaXMoZnVuYywgKFJlc29sdmVkID0gcmVqZWN0ZWQgPyBSZXNvbHZlZCA6IFJlamVjdGVkKSkpXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2s7XG4gICAgICAgICAgLy8gT3RoZXJ3aXNlLCByZXR1cm4gYSBmaW5hbGl6ZWQgcHJvbWlzZSwgdHJhbnNmb3JtaW5nIHRoZSB2YWx1ZSB3aXRoIHRoZSBmdW5jdGlvblxuICAgICAgICAgIHJldHVybiBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgZmluYWxpemUodGhpcywgcmVzb2x2ZSwgcmVqZWN0LCB2YWx1ZSwgUmVzb2x2ZWQpOyB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gUmVzb2x2ZS9yZWplY3QgcGVuZGluZyBjYWxsYmFja3NcbiAgICAgICAgaSA9IDA7XG4gICAgICAgIHdoaWxlIChpIDwgcXVldWUubGVuZ3RoKSB7XG4gICAgICAgICAgdGhlbiA9IHF1ZXVlW2krK107XG4gICAgICAgICAgLy8gSWYgbm8gY2FsbGJhY2ssIGp1c3QgcmVzb2x2ZS9yZWplY3QgdGhlIHByb21pc2VcbiAgICAgICAgICBpZiAoIWlzKGZ1bmMsIHJlc29sdmVkID0gdGhlbltyZWplY3RlZF0pKVxuICAgICAgICAgICAgKHJlamVjdGVkID8gdGhlbi5yIDogdGhlbi5qKSh2YWx1ZSk7XG4gICAgICAgICAgLy8gT3RoZXJ3aXNlLCByZXNvbHZlL3JlamVjdCB0aGUgcHJvbWlzZSB3aXRoIHRoZSByZXN1bHQgb2YgdGhlIGNhbGxiYWNrXG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgZmluYWxpemUodGhlbi5wLCB0aGVuLnIsIHRoZW4uaiwgdmFsdWUsIHJlc29sdmVkKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgdHJhbnNmZXJzIHRoZSBzdGF0ZSBvZiB0aGUgcHJvbWlzZVxuICAgICAgZnVuY3Rpb24gdHJhbnNmZXJTdGF0ZShyZXNvbHZlZCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlKSB7IHRoZW4gJiYgKHRoZW4gPSAwLCBwZW5kaW5nSGFuZGxlcihpcywgcmVzb2x2ZWQsIHZhbHVlKSk7IH07XG4gICAgICB9XG4gICAgfTtcbiAgICAvLyBUaGUgcXVldWUgb2YgcGVuZGluZyBjYWxsYmFja3M7IGdhcmJhZ2UtY29sbGVjdGVkIHdoZW4gaGFuZGxlciBpcyByZXNvbHZlZC9yZWplY3RlZFxuICAgIGhhbmRsZXIucSA9IFtdO1xuXG4gICAgLy8gQ3JlYXRlIGFuZCByZXR1cm4gdGhlIHByb21pc2UgKHJldXNpbmcgdGhlIGNhbGxiYWNrIHZhcmlhYmxlKVxuICAgIGNhbGxiYWNrLmNhbGwoY2FsbGJhY2sgPSB7IHRoZW46ICAgIGZ1bmN0aW9uIChyZXNvbHZlZCwgcmVqZWN0ZWQpIHsgcmV0dXJuIGhhbmRsZXIocmVzb2x2ZWQsIHJlamVjdGVkKTsgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNhdGNoXCI6IGZ1bmN0aW9uIChyZWplY3RlZCkgICAgICAgICAgIHsgcmV0dXJuIGhhbmRsZXIoMCwgICAgICAgIHJlamVjdGVkKTsgfSB9LFxuICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKHZhbHVlKSAgeyBoYW5kbGVyKGlzLCAxLCAgdmFsdWUpOyB9LFxuICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gKHJlYXNvbikgeyBoYW5kbGVyKGlzLCAwLCByZWFzb24pOyB9KTtcbiAgICByZXR1cm4gY2FsbGJhY2s7XG4gIH1cblxuICAvLyBGaW5hbGl6ZXMgdGhlIHByb21pc2UgYnkgcmVzb2x2aW5nL3JlamVjdGluZyBpdCB3aXRoIHRoZSB0cmFuc2Zvcm1lZCB2YWx1ZVxuICBmdW5jdGlvbiBmaW5hbGl6ZShwcm9taXNlLCByZXNvbHZlLCByZWplY3QsIHZhbHVlLCB0cmFuc2Zvcm0pIHtcbiAgICBzZXRJbW1lZGlhdGUoZnVuY3Rpb24gKCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVHJhbnNmb3JtIHRoZSB2YWx1ZSB0aHJvdWdoIGFuZCBjaGVjayB3aGV0aGVyIGl0J3MgYSBwcm9taXNlXG4gICAgICAgIHZhbHVlID0gdHJhbnNmb3JtKHZhbHVlKTtcbiAgICAgICAgdHJhbnNmb3JtID0gdmFsdWUgJiYgKGlzKG9iaiwgdmFsdWUpIHwgaXMoZnVuYywgdmFsdWUpKSAmJiB2YWx1ZS50aGVuO1xuICAgICAgICAvLyBSZXR1cm4gdGhlIHJlc3VsdCBpZiBpdCdzIG5vdCBhIHByb21pc2VcbiAgICAgICAgaWYgKCFpcyhmdW5jLCB0cmFuc2Zvcm0pKVxuICAgICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgICAvLyBJZiBpdCdzIGEgcHJvbWlzZSwgbWFrZSBzdXJlIGl0J3Mgbm90IGNpcmN1bGFyXG4gICAgICAgIGVsc2UgaWYgKHZhbHVlID09IHByb21pc2UpXG4gICAgICAgICAgcmVqZWN0KFR5cGVFcnJvcigpKTtcbiAgICAgICAgLy8gVGFrZSBvdmVyIHRoZSBwcm9taXNlJ3Mgc3RhdGVcbiAgICAgICAgZWxzZVxuICAgICAgICAgIHRyYW5zZm9ybS5jYWxsKHZhbHVlLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgfVxuICAgICAgY2F0Y2ggKGVycm9yKSB7IHJlamVjdChlcnJvcik7IH1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIEV4cG9ydCB0aGUgbWFpbiBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBQcm9taXNlO1xuXG4gIC8vIENyZWF0ZXMgYSByZXNvbHZlZCBwcm9taXNlXG4gIFByb21pc2UucmVzb2x2ZSA9IFJlc29sdmVkUHJvbWlzZTtcbiAgZnVuY3Rpb24gUmVzb2x2ZWRQcm9taXNlKHZhbHVlKSB7IHJldHVybiBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuXG4gIC8vIENyZWF0ZXMgYSByZWplY3RlZCBwcm9taXNlXG4gIFByb21pc2UucmVqZWN0ID0gZnVuY3Rpb24gKHJlYXNvbikgeyByZXR1cm4gUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHJlamVjdChyZWFzb24pOyB9KTsgfTtcblxuICAvLyBUcmFuc2Zvcm1zIGFuIGFycmF5IG9mIHByb21pc2VzIGludG8gYSBwcm9taXNlIGZvciBhbiBhcnJheVxuICBQcm9taXNlLmFsbCA9IGZ1bmN0aW9uIChwcm9taXNlcykge1xuICAgIHJldHVybiBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QsIGNvdW50LCB2YWx1ZXMpIHtcbiAgICAgIC8vIEFycmF5IG9mIGNvbGxlY3RlZCB2YWx1ZXNcbiAgICAgIHZhbHVlcyA9IFtdO1xuICAgICAgLy8gUmVzb2x2ZSBpbW1lZGlhdGVseSBpZiB0aGVyZSBhcmUgbm8gcHJvbWlzZXNcbiAgICAgIGNvdW50ID0gcHJvbWlzZXMubGVuZ3RoIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgIC8vIFRyYW5zZm9ybSBhbGwgZWxlbWVudHMgKGBtYXBgIGlzIHNob3J0ZXIgdGhhbiBgZm9yRWFjaGApXG4gICAgICBwcm9taXNlcy5tYXAoZnVuY3Rpb24gKHByb21pc2UsIGluZGV4KSB7XG4gICAgICAgIFJlc29sdmVkUHJvbWlzZShwcm9taXNlKS50aGVuKFxuICAgICAgICAgIC8vIFN0b3JlIHRoZSB2YWx1ZSBhbmQgcmVzb2x2ZSBpZiBpdCB3YXMgdGhlIGxhc3RcbiAgICAgICAgICBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHZhbHVlc1tpbmRleF0gPSB2YWx1ZTtcbiAgICAgICAgICAgIC0tY291bnQgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgLy8gUmVqZWN0IGlmIG9uZSBlbGVtZW50IGZhaWxzXG4gICAgICAgICAgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIC8vIFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgb3IgcmVqZWN0cyBhcyBzb29uIGFzIG9uZSBwcm9taXNlIGluIHRoZSBhcnJheSBkb2VzXG4gIFByb21pc2UucmFjZSA9IGZ1bmN0aW9uIChwcm9taXNlcykge1xuICAgIHJldHVybiBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIC8vIFJlZ2lzdGVyIHRvIGFsbCBwcm9taXNlcyBpbiB0aGUgYXJyYXlcbiAgICAgIHByb21pc2VzLm1hcChmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBSZXNvbHZlZFByb21pc2UocHJvbWlzZSkudGhlbihyZXNvbHZlLCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG59KSgnZicsICdvJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/promiscuous/promiscuous.js\n");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/setimmediate/setImmediate.js\n");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vbm9kZV9tb2R1bGVzL3RpbWVycy1icm93c2VyaWZ5L21haW4uanM/NTExOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsbUJBQU8sQ0FBQyxpRUFBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGltZXJzLWJyb3dzZXJpZnkvbWFpbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzY29wZSA9ICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiICYmIGdsb2JhbCkgfHxcbiAgICAgICAgICAgICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmKSB8fFxuICAgICAgICAgICAgd2luZG93O1xudmFyIGFwcGx5ID0gRnVuY3Rpb24ucHJvdG90eXBlLmFwcGx5O1xuXG4vLyBET00gQVBJcywgZm9yIGNvbXBsZXRlbmVzc1xuXG5leHBvcnRzLnNldFRpbWVvdXQgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIG5ldyBUaW1lb3V0KGFwcGx5LmNhbGwoc2V0VGltZW91dCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFyVGltZW91dCk7XG59O1xuZXhwb3J0cy5zZXRJbnRlcnZhbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRJbnRlcnZhbCwgc2NvcGUsIGFyZ3VtZW50cyksIGNsZWFySW50ZXJ2YWwpO1xufTtcbmV4cG9ydHMuY2xlYXJUaW1lb3V0ID1cbmV4cG9ydHMuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uKHRpbWVvdXQpIHtcbiAgaWYgKHRpbWVvdXQpIHtcbiAgICB0aW1lb3V0LmNsb3NlKCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIFRpbWVvdXQoaWQsIGNsZWFyRm4pIHtcbiAgdGhpcy5faWQgPSBpZDtcbiAgdGhpcy5fY2xlYXJGbiA9IGNsZWFyRm47XG59XG5UaW1lb3V0LnByb3RvdHlwZS51bnJlZiA9IFRpbWVvdXQucHJvdG90eXBlLnJlZiA9IGZ1bmN0aW9uKCkge307XG5UaW1lb3V0LnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9jbGVhckZuLmNhbGwoc2NvcGUsIHRoaXMuX2lkKTtcbn07XG5cbi8vIERvZXMgbm90IHN0YXJ0IHRoZSB0aW1lLCBqdXN0IHNldHMgdXAgdGhlIG1lbWJlcnMgbmVlZGVkLlxuZXhwb3J0cy5lbnJvbGwgPSBmdW5jdGlvbihpdGVtLCBtc2Vjcykge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gbXNlY3M7XG59O1xuXG5leHBvcnRzLnVuZW5yb2xsID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG4gIGl0ZW0uX2lkbGVUaW1lb3V0ID0gLTE7XG59O1xuXG5leHBvcnRzLl91bnJlZkFjdGl2ZSA9IGV4cG9ydHMuYWN0aXZlID0gZnVuY3Rpb24oaXRlbSkge1xuICBjbGVhclRpbWVvdXQoaXRlbS5faWRsZVRpbWVvdXRJZCk7XG5cbiAgdmFyIG1zZWNzID0gaXRlbS5faWRsZVRpbWVvdXQ7XG4gIGlmIChtc2VjcyA+PSAwKSB7XG4gICAgaXRlbS5faWRsZVRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gb25UaW1lb3V0KCkge1xuICAgICAgaWYgKGl0ZW0uX29uVGltZW91dClcbiAgICAgICAgaXRlbS5fb25UaW1lb3V0KCk7XG4gICAgfSwgbXNlY3MpO1xuICB9XG59O1xuXG4vLyBzZXRpbW1lZGlhdGUgYXR0YWNoZXMgaXRzZWxmIHRvIHRoZSBnbG9iYWwgb2JqZWN0XG5yZXF1aXJlKFwic2V0aW1tZWRpYXRlXCIpO1xuLy8gT24gc29tZSBleG90aWMgZW52aXJvbm1lbnRzLCBpdCdzIG5vdCBjbGVhciB3aGljaCBvYmplY3QgYHNldGltbWVkaWF0ZWAgd2FzXG4vLyBhYmxlIHRvIGluc3RhbGwgb250by4gIFNlYXJjaCBlYWNoIHBvc3NpYmlsaXR5IGluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZVxuLy8gYHNldGltbWVkaWF0ZWAgbGlicmFyeS5cbmV4cG9ydHMuc2V0SW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuc2V0SW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAodGhpcyAmJiB0aGlzLnNldEltbWVkaWF0ZSk7XG5leHBvcnRzLmNsZWFySW1tZWRpYXRlID0gKHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2xlYXJJbW1lZGlhdGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAgKHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgJiYgZ2xvYmFsLmNsZWFySW1tZWRpYXRlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzICYmIHRoaXMuY2xlYXJJbW1lZGlhdGUpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/timers-browserify/main.js\n");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcz9jZDAwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNENBQTRDOztBQUU1QyIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy93ZWJwYWNrL2J1aWxkaW4vZ2xvYmFsLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/webpack/buildin/global.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var cordova_promise_fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cordova-promise-fs */ \"./node_modules/cordova-promise-fs/index.js\");\n/* harmony import */ var cordova_promise_fs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cordova_promise_fs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var promiscuous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! promiscuous */ \"./node_modules/promiscuous/promiscuous.js\");\n/* harmony import */ var promiscuous__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(promiscuous__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _common_lib_Library__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../common/lib/Library */ \"../common/lib/Library.js\");\n\n\n\n\nlet cordovaExists = false;\nwindow.cordovaExists = cordovaExists;\nwindow.CordovaPromiseFS = cordova_promise_fs__WEBPACK_IMPORTED_MODULE_0___default.a;\n\nconsole.debug(\"Starting app.\");\n\ntry {\n    if (typeof cordova !== 'undefined' && cordova.file.cacheDirectory) {\n        cordovaExists = true;\n    }\n} catch (error) {\n    console.log(error);\n}\n\nlet fileSystem;\nif (cordovaExists) {\n    console.debug(\"Cordova was appended and fileSystem initialized.\");\n    fileSystem = cordova_promise_fs__WEBPACK_IMPORTED_MODULE_0___default()({\n        persistent: true, // or false\n        storageSize: 20 * 1024 * 1024, // storage size in bytes, default 20MB\n        concurrency: 3, // how many concurrent uploads/downloads?\n        Promise: promiscuous__WEBPACK_IMPORTED_MODULE_1___default.a,\n        fileSystem: cordova.file.cacheDirectory\n    });\n} else {\n    console.debug(\"Cordova was not appended.\");\n    fileSystem = {\n        ensure: async () => {\n            return false;\n        },\n        exists: async () => {\n            return false;\n        },\n        create: async () => {\n            return false;\n        },\n        read: async path => {\n            if (!window.localStorage.hasOwnProperty(path)) {\n                return undefined;\n            }\n\n            return window.localStorage.getItem(path);\n        },\n        readJSON: async path => {\n            if (!window.localStorage.hasOwnProperty(path)) {\n                return undefined;\n            }\n\n            return JSON.parse(window.localStorage.getItem(path));\n        },\n        write: async (path, content) => {\n            window.localStorage.setItem(path, content);\n        },\n        list: async (path, optionString = '') => {\n            const keys = Object.keys(window.localStorage);\n            let values = [];\n\n            for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n\n                if (!key.includes(path)) {\n                    continue;\n                }\n\n                // Continue if extension is detected.\n                if (optionString.includes('d')) {\n                    let source = key.split('/');\n\n                    // Filter array from empty entries.\n                    source = source.filter(item => item);\n\n                    let target = path.split('/');\n\n                    // Filter array from empty entries.\n                    target = target.filter(item => item);\n\n                    if (source.length > target.length) {\n                        let isFile = source[target.length].split('.').length > 1;\n                        source = '/' + source.splice(0, target.length + 1).join('/') + '/';\n                        if (!isFile && !values.includes(source)) values.push(source);\n                    }\n\n                    continue;\n                }\n\n                values.push(key);\n            }\n\n            return values;\n        }\n    };\n\n    window.localSystem = {};\n}\n\nconst Manager = new _common_lib_Library__WEBPACK_IMPORTED_MODULE_2__[\"Manager\"](fileSystem);\nwindow['Manager'] = Manager;\nconsole.log(Manager);\n\nwindow.fileSystem = fileSystem;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ })

/******/ });