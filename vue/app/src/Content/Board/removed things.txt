supported: {
  audio: {
    "mp3": "mp3",
    "wav": "wav",
    "mpeg": "mpeg"
  },
  image: {
    "png": "png",
    "jpg": "jpg",
    "jpeg": "jpeg",
    "gif": "gif",
    "webp": "webp"
  }
},
rules: {
  strings: {
    length: [
      (string) => {
        if(string.length > this.nameLength) {
          return "Name is to long, sorry :(";
        } else {
          return true;
        }
      }
    ]
  },
  files: {
    image: [
      (file) => {
        if(!file) return true;

        if(!file.type) {
          return "This file is not supported, sorry :(.";
        }

        // FIXME: Find out why the file type is sometimes an object instead of a string.
        let type = file.type;  

        if(typeof type === "object" && "type" in file.type) {
          type = type.type;
        }
        
        let fileType = type.split('/');
        if(fileType[1]) {
          if(fileType[1] in this.supported.image) {
            return true;
          } else {
            return `Sorry this type is currently not supported. Please use ${Object.keys(this.supported.image).join(', ')}.`
          }
        } else {
          return "This file is not supported, sorry :(.";
        }
      }
    ],
    audio: [
      (file) => {
        // Skip directory validate.
        if(this.directory) return true;

        if(!file) return "Input has to be filled!";

        if(!file.type) {
          console.log(file.type, file)
          return "This file is not supported, sorry :(.";
        }

        let fileType = file.type.split('/');
        if(fileType[1] in this.supported.audio) {
          return true;
        } else {
          return `Sorry this type is currently not supported. Please use ${Object.keys(this.supported.audio).join(', ')}.`
        }
      }
    ]
  }
}